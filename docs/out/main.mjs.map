{
  "version": 3,
  "sources": ["../../node_modules/chevrotain/lib/src/version.js", "../../node_modules/lodash-es/_freeGlobal.js", "../../node_modules/lodash-es/_root.js", "../../node_modules/lodash-es/_Symbol.js", "../../node_modules/lodash-es/_getRawTag.js", "../../node_modules/lodash-es/_objectToString.js", "../../node_modules/lodash-es/_baseGetTag.js", "../../node_modules/lodash-es/isObjectLike.js", "../../node_modules/lodash-es/isSymbol.js", "../../node_modules/lodash-es/_arrayMap.js", "../../node_modules/lodash-es/isArray.js", "../../node_modules/lodash-es/_baseToString.js", "../../node_modules/lodash-es/_trimmedEndIndex.js", "../../node_modules/lodash-es/_baseTrim.js", "../../node_modules/lodash-es/isObject.js", "../../node_modules/lodash-es/toNumber.js", "../../node_modules/lodash-es/toFinite.js", "../../node_modules/lodash-es/toInteger.js", "../../node_modules/lodash-es/identity.js", "../../node_modules/lodash-es/isFunction.js", "../../node_modules/lodash-es/_coreJsData.js", "../../node_modules/lodash-es/_isMasked.js", "../../node_modules/lodash-es/_toSource.js", "../../node_modules/lodash-es/_baseIsNative.js", "../../node_modules/lodash-es/_getValue.js", "../../node_modules/lodash-es/_getNative.js", "../../node_modules/lodash-es/_WeakMap.js", "../../node_modules/lodash-es/_baseCreate.js", "../../node_modules/lodash-es/_apply.js", "../../node_modules/lodash-es/noop.js", "../../node_modules/lodash-es/_copyArray.js", "../../node_modules/lodash-es/_shortOut.js", "../../node_modules/lodash-es/constant.js", "../../node_modules/lodash-es/_defineProperty.js", "../../node_modules/lodash-es/_baseSetToString.js", "../../node_modules/lodash-es/_setToString.js", "../../node_modules/lodash-es/_arrayEach.js", "../../node_modules/lodash-es/_baseFindIndex.js", "../../node_modules/lodash-es/_baseIsNaN.js", "../../node_modules/lodash-es/_strictIndexOf.js", "../../node_modules/lodash-es/_baseIndexOf.js", "../../node_modules/lodash-es/_arrayIncludes.js", "../../node_modules/lodash-es/_isIndex.js", "../../node_modules/lodash-es/_baseAssignValue.js", "../../node_modules/lodash-es/eq.js", "../../node_modules/lodash-es/_assignValue.js", "../../node_modules/lodash-es/_copyObject.js", "../../node_modules/lodash-es/_overRest.js", "../../node_modules/lodash-es/_baseRest.js", "../../node_modules/lodash-es/isLength.js", "../../node_modules/lodash-es/isArrayLike.js", "../../node_modules/lodash-es/_isIterateeCall.js", "../../node_modules/lodash-es/_createAssigner.js", "../../node_modules/lodash-es/_isPrototype.js", "../../node_modules/lodash-es/_baseTimes.js", "../../node_modules/lodash-es/_baseIsArguments.js", "../../node_modules/lodash-es/isArguments.js", "../../node_modules/lodash-es/stubFalse.js", "../../node_modules/lodash-es/isBuffer.js", "../../node_modules/lodash-es/_baseIsTypedArray.js", "../../node_modules/lodash-es/_baseUnary.js", "../../node_modules/lodash-es/_nodeUtil.js", "../../node_modules/lodash-es/isTypedArray.js", "../../node_modules/lodash-es/_arrayLikeKeys.js", "../../node_modules/lodash-es/_overArg.js", "../../node_modules/lodash-es/_nativeKeys.js", "../../node_modules/lodash-es/_baseKeys.js", "../../node_modules/lodash-es/keys.js", "../../node_modules/lodash-es/assign.js", "../../node_modules/lodash-es/_nativeKeysIn.js", "../../node_modules/lodash-es/_baseKeysIn.js", "../../node_modules/lodash-es/keysIn.js", "../../node_modules/lodash-es/_isKey.js", "../../node_modules/lodash-es/_nativeCreate.js", "../../node_modules/lodash-es/_hashClear.js", "../../node_modules/lodash-es/_hashDelete.js", "../../node_modules/lodash-es/_hashGet.js", "../../node_modules/lodash-es/_hashHas.js", "../../node_modules/lodash-es/_hashSet.js", "../../node_modules/lodash-es/_Hash.js", "../../node_modules/lodash-es/_listCacheClear.js", "../../node_modules/lodash-es/_assocIndexOf.js", "../../node_modules/lodash-es/_listCacheDelete.js", "../../node_modules/lodash-es/_listCacheGet.js", "../../node_modules/lodash-es/_listCacheHas.js", "../../node_modules/lodash-es/_listCacheSet.js", "../../node_modules/lodash-es/_ListCache.js", "../../node_modules/lodash-es/_Map.js", "../../node_modules/lodash-es/_mapCacheClear.js", "../../node_modules/lodash-es/_isKeyable.js", "../../node_modules/lodash-es/_getMapData.js", "../../node_modules/lodash-es/_mapCacheDelete.js", "../../node_modules/lodash-es/_mapCacheGet.js", "../../node_modules/lodash-es/_mapCacheHas.js", "../../node_modules/lodash-es/_mapCacheSet.js", "../../node_modules/lodash-es/_MapCache.js", "../../node_modules/lodash-es/memoize.js", "../../node_modules/lodash-es/_memoizeCapped.js", "../../node_modules/lodash-es/_stringToPath.js", "../../node_modules/lodash-es/toString.js", "../../node_modules/lodash-es/_castPath.js", "../../node_modules/lodash-es/_toKey.js", "../../node_modules/lodash-es/_baseGet.js", "../../node_modules/lodash-es/get.js", "../../node_modules/lodash-es/_arrayPush.js", "../../node_modules/lodash-es/_isFlattenable.js", "../../node_modules/lodash-es/_baseFlatten.js", "../../node_modules/lodash-es/flatten.js", "../../node_modules/lodash-es/_getPrototype.js", "../../node_modules/lodash-es/_baseSlice.js", "../../node_modules/lodash-es/_arrayReduce.js", "../../node_modules/lodash-es/_stackClear.js", "../../node_modules/lodash-es/_stackDelete.js", "../../node_modules/lodash-es/_stackGet.js", "../../node_modules/lodash-es/_stackHas.js", "../../node_modules/lodash-es/_stackSet.js", "../../node_modules/lodash-es/_Stack.js", "../../node_modules/lodash-es/_baseAssign.js", "../../node_modules/lodash-es/_baseAssignIn.js", "../../node_modules/lodash-es/_cloneBuffer.js", "../../node_modules/lodash-es/_arrayFilter.js", "../../node_modules/lodash-es/stubArray.js", "../../node_modules/lodash-es/_getSymbols.js", "../../node_modules/lodash-es/_copySymbols.js", "../../node_modules/lodash-es/_getSymbolsIn.js", "../../node_modules/lodash-es/_copySymbolsIn.js", "../../node_modules/lodash-es/_baseGetAllKeys.js", "../../node_modules/lodash-es/_getAllKeys.js", "../../node_modules/lodash-es/_getAllKeysIn.js", "../../node_modules/lodash-es/_DataView.js", "../../node_modules/lodash-es/_Promise.js", "../../node_modules/lodash-es/_Set.js", "../../node_modules/lodash-es/_getTag.js", "../../node_modules/lodash-es/_initCloneArray.js", "../../node_modules/lodash-es/_Uint8Array.js", "../../node_modules/lodash-es/_cloneArrayBuffer.js", "../../node_modules/lodash-es/_cloneDataView.js", "../../node_modules/lodash-es/_cloneRegExp.js", "../../node_modules/lodash-es/_cloneSymbol.js", "../../node_modules/lodash-es/_cloneTypedArray.js", "../../node_modules/lodash-es/_initCloneByTag.js", "../../node_modules/lodash-es/_initCloneObject.js", "../../node_modules/lodash-es/_baseIsMap.js", "../../node_modules/lodash-es/isMap.js", "../../node_modules/lodash-es/_baseIsSet.js", "../../node_modules/lodash-es/isSet.js", "../../node_modules/lodash-es/_baseClone.js", "../../node_modules/lodash-es/clone.js", "../../node_modules/lodash-es/compact.js", "../../node_modules/lodash-es/_setCacheAdd.js", "../../node_modules/lodash-es/_setCacheHas.js", "../../node_modules/lodash-es/_SetCache.js", "../../node_modules/lodash-es/_arraySome.js", "../../node_modules/lodash-es/_cacheHas.js", "../../node_modules/lodash-es/_equalArrays.js", "../../node_modules/lodash-es/_mapToArray.js", "../../node_modules/lodash-es/_setToArray.js", "../../node_modules/lodash-es/_equalByTag.js", "../../node_modules/lodash-es/_equalObjects.js", "../../node_modules/lodash-es/_baseIsEqualDeep.js", "../../node_modules/lodash-es/_baseIsEqual.js", "../../node_modules/lodash-es/_baseIsMatch.js", "../../node_modules/lodash-es/_isStrictComparable.js", "../../node_modules/lodash-es/_getMatchData.js", "../../node_modules/lodash-es/_matchesStrictComparable.js", "../../node_modules/lodash-es/_baseMatches.js", "../../node_modules/lodash-es/_baseHasIn.js", "../../node_modules/lodash-es/_hasPath.js", "../../node_modules/lodash-es/hasIn.js", "../../node_modules/lodash-es/_baseMatchesProperty.js", "../../node_modules/lodash-es/_baseProperty.js", "../../node_modules/lodash-es/_basePropertyDeep.js", "../../node_modules/lodash-es/property.js", "../../node_modules/lodash-es/_baseIteratee.js", "../../node_modules/lodash-es/_arrayAggregator.js", "../../node_modules/lodash-es/_createBaseFor.js", "../../node_modules/lodash-es/_baseFor.js", "../../node_modules/lodash-es/_baseForOwn.js", "../../node_modules/lodash-es/_createBaseEach.js", "../../node_modules/lodash-es/_baseEach.js", "../../node_modules/lodash-es/_baseAggregator.js", "../../node_modules/lodash-es/_createAggregator.js", "../../node_modules/lodash-es/defaults.js", "../../node_modules/lodash-es/isArrayLikeObject.js", "../../node_modules/lodash-es/_arrayIncludesWith.js", "../../node_modules/lodash-es/_baseDifference.js", "../../node_modules/lodash-es/difference.js", "../../node_modules/lodash-es/last.js", "../../node_modules/lodash-es/drop.js", "../../node_modules/lodash-es/dropRight.js", "../../node_modules/lodash-es/_castFunction.js", "../../node_modules/lodash-es/forEach.js", "../../node_modules/lodash-es/_arrayEvery.js", "../../node_modules/lodash-es/_baseEvery.js", "../../node_modules/lodash-es/every.js", "../../node_modules/lodash-es/_baseFilter.js", "../../node_modules/lodash-es/filter.js", "../../node_modules/lodash-es/_createFind.js", "../../node_modules/lodash-es/findIndex.js", "../../node_modules/lodash-es/find.js", "../../node_modules/lodash-es/head.js", "../../node_modules/lodash-es/_baseMap.js", "../../node_modules/lodash-es/map.js", "../../node_modules/lodash-es/flatMap.js", "../../node_modules/lodash-es/groupBy.js", "../../node_modules/lodash-es/_baseHas.js", "../../node_modules/lodash-es/has.js", "../../node_modules/lodash-es/isString.js", "../../node_modules/lodash-es/_baseValues.js", "../../node_modules/lodash-es/values.js", "../../node_modules/lodash-es/includes.js", "../../node_modules/lodash-es/indexOf.js", "../../node_modules/lodash-es/isEmpty.js", "../../node_modules/lodash-es/_baseIsRegExp.js", "../../node_modules/lodash-es/isRegExp.js", "../../node_modules/lodash-es/isUndefined.js", "../../node_modules/lodash-es/negate.js", "../../node_modules/lodash-es/_baseSet.js", "../../node_modules/lodash-es/_basePickBy.js", "../../node_modules/lodash-es/pickBy.js", "../../node_modules/lodash-es/_baseReduce.js", "../../node_modules/lodash-es/reduce.js", "../../node_modules/lodash-es/reject.js", "../../node_modules/lodash-es/_baseSome.js", "../../node_modules/lodash-es/some.js", "../../node_modules/lodash-es/_createSet.js", "../../node_modules/lodash-es/_baseUniq.js", "../../node_modules/lodash-es/uniq.js", "../../node_modules/@chevrotain/utils/lib/src/print.js", "../../node_modules/@chevrotain/utils/lib/src/timer.js", "../../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js", "../../node_modules/@chevrotain/gast/lib/src/model.js", "../../node_modules/@chevrotain/gast/lib/src/visitor.js", "../../node_modules/@chevrotain/gast/lib/src/helpers.js", "../../node_modules/chevrotain/lib/src/parse/grammar/rest.js", "../../node_modules/chevrotain/lib/src/parse/grammar/first.js", "../../node_modules/chevrotain/lib/src/parse/constants.js", "../../node_modules/chevrotain/lib/src/parse/grammar/follow.js", "../../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js", "../../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js", "../../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js", "../../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js", "../../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js", "../../node_modules/chevrotain/lib/src/scan/reg_exp.js", "../../node_modules/chevrotain/lib/src/scan/lexer.js", "../../node_modules/chevrotain/lib/src/scan/tokens.js", "../../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js", "../../node_modules/chevrotain/lib/src/scan/lexer_public.js", "../../node_modules/chevrotain/lib/src/scan/tokens_public.js", "../../node_modules/chevrotain/lib/src/parse/errors_public.js", "../../node_modules/chevrotain/lib/src/parse/grammar/resolver.js", "../../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js", "../../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js", "../../node_modules/chevrotain/lib/src/parse/grammar/checks.js", "../../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js", "../../node_modules/chevrotain/lib/src/parse/exceptions_public.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js", "../../node_modules/chevrotain/lib/src/parse/grammar/keys.js", "../../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js", "../../node_modules/chevrotain/lib/src/parse/cst/cst.js", "../../node_modules/chevrotain/lib/src/lang/lang_extensions.js", "../../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js", "../../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js", "../../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js", "../../node_modules/chevrotain/lib/src/parse/parser/parser.js", "../../node_modules/chevrotain/lib/src/diagrams/render_public.js", "../../jass/parse-rule-name.mjs", "../../jass/lexer/jass-token-map.mjs", "../../jass/lexer/jass-token-list.mjs", "../../jass/lexer/jass-lexer.mjs", "../../jass/parser.mjs", "../../src/utils/i-token-to-range.mjs", "../../jass/visitor.mjs", "../../jass/lexer/jass-token-legend.mjs", "../main.mjs"],
  "sourcesContent": ["// needs a separate module as this is required inside chevrotain productive code\n// and also in the entry point for webpack(api.ts).\n// A separate file avoids cyclic dependencies and webpack errors.\nexport const VERSION = \"11.0.1\";\n//# sourceMappingURL=version.js.map", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n", "import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n", "import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n", "import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n", "import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n", "import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n", "import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n", "import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n", "import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n", "import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n", "import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n", "import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n", "import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n", "import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n", "import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n", "import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n", "import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n", "import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n", "import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n", "import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n", "import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n", "import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n", "import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n", "import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n", "import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n", "import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n", "import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n", "import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n", "import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n", "import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n", "import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n", "import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n", "import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n", "import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n", "import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n", "import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n", "import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n", "import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n", "import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n", "import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n", "import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n", "import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n", "import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n", "import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n", "import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n", "import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n", "import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n", "import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n", "import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n", "import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n", "import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n", "import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n", "import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n", "import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n", "/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n", "import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n", "import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n", "import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n", "import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n", "import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n", "import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n", "import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n", "import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n", "import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n", "import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n", "import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n", "import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n", "import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n", "import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n", "import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n", "import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n", "import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n", "/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n", "import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n", "import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n", "import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n", "import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n", "import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n", "import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n", "import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n", "import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n", "import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n", "import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n", "/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n", "import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n", "import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n", "import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n", "import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n", "import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n", "import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n", "/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n", "import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n", "import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n", "import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n", "import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n", "import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n", "import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n", "import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n", "import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n", "import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n", "import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n", "import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n", "import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n", "import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n", "import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n", "/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n", "import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n", "import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n", "import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n", "import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n", "import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n", "/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n", "import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n", "import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n", "import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n", "import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n", "import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n", "import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n", "import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n", "import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n", "import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n", "import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n", "import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n", "/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n", "/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n", "import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n", "import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n", "import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n", "/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n", "import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n", "import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n", "import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n", "import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n", "import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n", "import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n", "export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map", "export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map", "// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map", "import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map", "import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map", "import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map", "import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map", "import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map", "// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map", "import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map", "export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map", "import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map", "import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead \u2209 DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map", "export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map", "import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map", "import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map", "import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map", "import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map", "export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map", "import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map", "import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map", "import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map", "import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map", "import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map", "import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map", "import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map", "import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map", "import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map", "import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map", "// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map", "import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map", "import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map", "/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map", "const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map", "import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map", "import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map", "import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map", "import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map", "import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map", "import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map", "import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map", "import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map", "import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map", "export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map", "import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map", "import { VERSION } from \"../version.js\";\nexport function createSyntaxDiagramsCode(grammar, { resourceBase = `https://unpkg.com/chevrotain@${VERSION}/diagrams/`, css = `https://unpkg.com/chevrotain@${VERSION}/diagrams/diagrams.css`, } = {}) {\n    const header = `\n<!-- This is a generated file -->\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n`;\n    const cssHtml = `\n<link rel='stylesheet' href='${css}'>\n`;\n    const scripts = `\n<script src='${resourceBase}vendor/railroad-diagrams.js'></script>\n<script src='${resourceBase}src/diagrams_builder.js'></script>\n<script src='${resourceBase}src/diagrams_behavior.js'></script>\n<script src='${resourceBase}src/main.js'></script>\n`;\n    const diagramsDiv = `\n<div id=\"diagrams\" align=\"center\"></div>    \n`;\n    const serializedGrammar = `\n<script>\n    window.serializedGrammar = ${JSON.stringify(grammar, null, \"  \")};\n</script>\n`;\n    const initLogic = `\n<script>\n    var diagramsDiv = document.getElementById(\"diagrams\");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n</script>\n`;\n    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);\n}\n//# sourceMappingURL=render_public.js.map", "const names = {\n    jass: '',\n    root: '',\n    type_declare: '',\n    globals_declare: '',\n    linebreak_declare: '',\n    variable_declare: '',\n    native_declare: '',\n    function_declare: '',\n    function_locals: '',\n    function_returns: '',\n    function_args: '',\n    function_call: '',\n    return_statement: '',\n    if_statement: '',\n    else_statement: '',\n    elseif_statement: '',\n    addition: '',\n    arrayaccess: '',\n    call_statement: '',\n    exitwhen_statement: '',\n    expression: '',\n    typedname: '',\n    loop_statement: '',\n    multiplication: '',\n    primary: '',\n    set_statement: '',\n    statement: '',\n    end: '',\n}\n\nfor (const key of Object.keys(names)) {\n    names[key] = key;\n}\n\nexport default names;", "import {createToken, Lexer} from 'chevrotain';\n\nexport default {\n    whitespace: createToken({\n        name: 'whitespace',\n        pattern: /[^\\S\\r\\n]+/,\n        line_breaks: false,\n        group: Lexer.SKIPPED,\n    }),\n    comment: createToken({\n        name: 'comment',\n        pattern: /\\/\\/[^\\r\\n]*/,\n        line_breaks: false,\n    }),\n    and: createToken({\n        name: 'and',\n        pattern: /\\band\\b/,\n        start_chars_hint: [\"a\"],\n        line_breaks: false,\n    }),\n    array: createToken({\n        name: 'array',\n        pattern: /\\barray\\b/,\n        start_chars_hint: [\"a\"],\n        line_breaks: false,\n    }),\n    call: createToken({\n        name: 'call',\n        pattern: /\\bcall\\b/,\n        start_chars_hint: [\"c\"],\n        line_breaks: false,\n    }),\n    constant: createToken({\n        name: 'constant',\n        pattern: /\\bconstant\\b/,\n        start_chars_hint: [\"c\"],\n        line_breaks: false,\n    }),\n    debug: createToken({\n        name: 'debug',\n        pattern: /\\bdebug\\b/,\n        start_chars_hint: [\"d\"],\n        line_breaks: false,\n    }),\n    else: createToken({\n        name: 'else',\n        pattern: /\\belse\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    elseif: createToken({\n        name: 'elseif',\n        pattern: /\\belseif\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    endfunction: createToken({\n        name: 'endfunction',\n        pattern: /\\bendfunction\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    endglobals: createToken({\n        name: 'endglobals',\n        pattern: /\\bendglobals\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    endif: createToken({\n        name: 'endif',\n        pattern: /\\bendif\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    endloop: createToken({\n        name: 'endloop',\n        pattern: /\\bendloop\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    exitwhen: createToken({\n        name: 'exitwhen',\n        pattern: /\\bexitwhen\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    extends: createToken({\n        name: 'extends',\n        pattern: /\\bextends\\b/,\n        start_chars_hint: [\"e\"],\n        line_breaks: false,\n    }),\n    function: createToken({\n        name: 'function',\n        pattern: /\\bfunction\\b/,\n        start_chars_hint: [\"f\"],\n        line_breaks: false,\n    }),\n    globals: createToken({\n        name: 'globals',\n        pattern: /\\bglobals\\b/,\n        start_chars_hint: [\"g\"],\n        line_breaks: false,\n    }),\n    if: createToken({\n        name: 'if',\n        pattern: /\\bif\\b/,\n        start_chars_hint: [\"i\"],\n        line_breaks: false,\n    }),\n    local: createToken({\n        name: 'local',\n        pattern: /\\blocal\\b/,\n        start_chars_hint: [\"l\"],\n        line_breaks: false,\n    }),\n    loop: createToken({\n        name: 'loop',\n        pattern: /\\bloop\\b/,\n        start_chars_hint: [\"l\"],\n        line_breaks: false,\n    }),\n    native: createToken({\n        name: 'native',\n        pattern: /\\bnative\\b/,\n        start_chars_hint: [\"n\"],\n        line_breaks: false,\n    }),\n    not: createToken({\n        name: 'not',\n        pattern: /\\bnot\\b/,\n        start_chars_hint: [\"n\"],\n        line_breaks: false,\n    }),\n    nothing: createToken({\n        name: 'nothing',\n        pattern: /\\bnothing\\b/,\n        start_chars_hint: [\"n\"],\n        line_breaks: false,\n    }),\n    or: createToken({\n        name: 'or',\n        pattern: /\\bor\\b/,\n        start_chars_hint: [\"o\"],\n        line_breaks: false,\n    }),\n    returns: createToken({\n        name: 'returns',\n        pattern: /\\breturns\\b/,\n        start_chars_hint: [\"r\"],\n        line_breaks: false,\n    }),\n    return: createToken({\n        name: 'return',\n        pattern: /\\breturn\\b/,\n        start_chars_hint: [\"r\"],\n        line_breaks: false,\n    }),\n    set: createToken({\n        name: 'set',\n        pattern: /\\bset\\b/,\n        start_chars_hint: [\"s\"],\n        line_breaks: false,\n    }),\n    takes: createToken({\n        name: 'takes',\n        pattern: /\\btakes\\b/,\n        start_chars_hint: [\"t\"],\n        line_breaks: false,\n    }),\n    then: createToken({\n        name: 'then',\n        pattern: /\\bthen\\b/,\n        start_chars_hint: [\"t\"],\n        line_breaks: false,\n    }),\n    type: createToken({\n        name: 'type',\n        pattern: /\\btype\\b/,\n        start_chars_hint: [\"t\"],\n        line_breaks: false,\n    }),\n    comma: createToken({\n        name: 'comma',\n        pattern: /,/,\n        start_chars_hint: [\",\"],\n        label: \",\",\n        line_breaks: false,\n    }),\n    equals: createToken({\n        name: 'equals',\n        pattern: /==/,\n        start_chars_hint: [\"=\"],\n        line_breaks: false,\n        label: \"==\",\n    }),\n    assign: createToken({\n        name: 'assign',\n        pattern: /=/,\n        start_chars_hint: [\"=\"],\n        line_breaks: false,\n        label: \"=\",\n    }),\n    notequals: createToken({\n        name: 'notequals',\n        pattern: /!=/,\n        start_chars_hint: [\"!\"],\n        line_breaks: false,\n        label: \"!=\",\n    }),\n    lessorequal: createToken({\n        name: 'lessorequal',\n        pattern: /<=/,\n        start_chars_hint: [\"<\"],\n        line_breaks: false,\n        label: \"<=\",\n    }),\n    less: createToken({\n        name: 'less',\n        pattern: /</,\n        start_chars_hint: [\"<\"],\n        line_breaks: false,\n        label: \"<\",\n    }),\n    greatorequal: createToken({\n        name: 'greatorequal',\n        pattern: />=/,\n        start_chars_hint: [\">\"],\n        line_breaks: false,\n        label: \">=\",\n    }),\n    great: createToken({\n        name: 'great',\n        pattern: />/,\n        start_chars_hint: [\">\"],\n        line_breaks: false,\n        label: \">\",\n    }),\n    add: createToken({\n        name: 'add',\n        pattern: /\\+/,\n        start_chars_hint: [\"+\"],\n        line_breaks: false,\n        label: \"+\",\n    }),\n    sub: createToken({\n        name: 'sub',\n        pattern: /-/,\n        start_chars_hint: [\"-\"],\n        line_breaks: false,\n        label: \"-\",\n    }),\n    mult: createToken({\n        name: 'mult',\n        pattern: /\\*/,\n        start_chars_hint: [\"*\"],\n        line_breaks: false,\n        label: \"*\",\n    }),\n    div: createToken({\n        name: 'div',\n        pattern: /\\//,\n        start_chars_hint: [\"/\"],\n        line_breaks: false,\n        label: \"/\",\n    }),\n    lparen: createToken({\n        name: 'lparen',\n        pattern: /\\(/,\n        start_chars_hint: [\"(\"],\n        line_breaks: false,\n        label: \"(\",\n    }),\n    rparen: createToken({\n        name: 'rparen',\n        pattern: /\\)/,\n        start_chars_hint: [\")\"],\n        line_breaks: false,\n        label: \")\",\n    }),\n    lsquareparen: createToken({\n        name: 'lsquareparen',\n        pattern: /\\[/,\n        start_chars_hint: [\"[\"],\n        line_breaks: false,\n        label: \"[\",\n    }),\n    rsquareparen: createToken({\n        name: 'rsquareparen',\n        pattern: /]/,\n        start_chars_hint: [\"]\"],\n        line_breaks: false,\n        label: \"]\",\n    }),\n    real: createToken({\n        name: 'real',\n        pattern: /\\d+\\.\\d*|\\.\\d+/,\n        line_breaks: false,\n    }),\n    integer: createToken({\n        name: 'integer',\n        pattern: /\\b(?:0x[0-9a-z]+|\\$[0-9a-z]+|\\d+)\\b/i,\n        line_breaks: false,\n    }),\n    linebreak: createToken({\n        name: 'linebreak',\n        pattern: /\\n|\\r\\n/,\n        label: \"\\\\n\",\n        line_breaks: true,\n    }),\n    idliteral: createToken({\n        name: 'idliteral',\n        pattern: /'[^']*'/,\n        line_breaks: true,\n    }),\n    stringliteral: createToken({\n        name: 'stringliteral',\n        pattern: /\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"/,\n        start_chars_hint: [\"\\\"\"],\n        line_breaks: true,\n    }),\n    identifier: createToken({\n        name: 'identifier',\n        pattern: /[a-zA-Z][a-zA-Z0-9_]*/,\n        line_breaks: false,\n    }),\n}\n", "import JassTokenMap from \"./jass-token-map.mjs\";\n\nexport default [JassTokenMap.whitespace, JassTokenMap.comment, JassTokenMap.and, JassTokenMap.array, JassTokenMap.call, JassTokenMap.constant, JassTokenMap.debug, JassTokenMap.else, JassTokenMap.elseif, JassTokenMap.endfunction, JassTokenMap.endglobals, JassTokenMap.endif, JassTokenMap.endloop, JassTokenMap.exitwhen, JassTokenMap.extends, JassTokenMap.function, JassTokenMap.globals, JassTokenMap.if, JassTokenMap.local, JassTokenMap.loop, JassTokenMap.native, JassTokenMap.not, JassTokenMap.nothing, JassTokenMap.or, JassTokenMap.returns, JassTokenMap.return, JassTokenMap.set, JassTokenMap.takes, JassTokenMap.then, JassTokenMap.type, JassTokenMap.comma, JassTokenMap.equals, JassTokenMap.assign, JassTokenMap.notequals, JassTokenMap.lessorequal, JassTokenMap.less, JassTokenMap.greatorequal, JassTokenMap.great, JassTokenMap.add, JassTokenMap.sub, JassTokenMap.mult, JassTokenMap.div, JassTokenMap.lparen, JassTokenMap.rparen, JassTokenMap.lsquareparen, JassTokenMap.rsquareparen, JassTokenMap.real, JassTokenMap.integer, JassTokenMap.linebreak, JassTokenMap.idliteral, JassTokenMap.stringliteral, JassTokenMap.identifier];", "import {Lexer} from 'chevrotain';\nimport JassTokenList from \"./jass-token-list.mjs\";\n\nconst lexer = new Lexer(JassTokenList);\nfor (const error of lexer.lexerDefinitionErrors) console.error(error);\n\nexport default lexer;\n\n", "// noinspection DuplicatedCode\n\nimport {CstParser, EOF} from \"chevrotain\";\nimport ParseRuleName from \"./parse-rule-name.mjs\";\nimport JassLexer from \"./lexer/jass-lexer.mjs\";\nimport JassTokenMap from \"./lexer/jass-token-map.mjs\";\nimport JassTokenList from \"./lexer/jass-token-list.mjs\";\n\n/** @typedef {('MismatchToken'|'NoViableAlt')} JassParserErrorType */\n\nexport const JassParserErrorType = {\n    MismatchToken: 'MismatchToken',\n    NoViableAlt: 'NoViableAlt',\n}\n\nclass JassParserError {\n    /**\n     * @param {JassParserErrorType} type\n     * @param {import('chevrotain').IToken} token\n     */\n    constructor(type, token) {\n        this.type = type;\n        this.token = token;\n    }\n}\n\nexport class JassParser extends CstParser {\n    /**@type {JassParserError[]} */\n    errorlist = [];\n\n    set inputText(text) {\n        this.errorlist = [];\n        this.input = JassLexer.tokenize(text).tokens;\n    }\n\n    constructor(debug = false) {\n        super(JassTokenList, {\n            recoveryEnabled: true,\n            errorMessageProvider: {\n                buildMismatchTokenMessage: options => {\n                    if (debug) console.error(options);\n                    this.errorlist.push(new JassParserError(JassParserErrorType.MismatchToken, options.actual));\n                    return null;\n                },\n                buildNotAllInputParsedMessage: options => {\n                    console.error('buildNotAllInputParsedMessage');\n                    console.log(options);\n                    return null;\n                },\n                buildNoViableAltMessage: options => {\n                    this.errorlist.push(new JassParserError(JassParserErrorType.NoViableAlt, options.previous));\n                    return null;\n                },\n                buildEarlyExitMessage: options => {\n                    console.error('buildEarlyExitMessag');\n                    console.log(options);\n                    return null;\n                },\n            },\n        })\n\n        const $ = this;\n\n        //region jass\n        $.RULE(ParseRuleName.jass, () => $.MANY(() => $.SUBRULE($[ParseRuleName.root])));\n        //endregion\n\n        //region root\n        $.RULE(ParseRuleName.root, () => {\n            $.OR([\n                {ALT: () => $.SUBRULE($[ParseRuleName.type_declare])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.native_declare])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.function_declare])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.globals_declare])},\n                {ALT: () => $.CONSUME(JassTokenMap.linebreak)},\n                {ALT: () => $.CONSUME(JassTokenMap.comment)},\n            ]);\n        });\n        //endregion\n\n        //region type\n        $.RULE(ParseRuleName.type_declare, () => {\n            $.CONSUME(JassTokenMap.type);\n            $.CONSUME(JassTokenMap.identifier);\n            $.CONSUME(JassTokenMap.extends);\n            $.CONSUME2(JassTokenMap.identifier);\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region native\n        $.RULE(ParseRuleName.native_declare, () => {\n            $.OPTION(() => $.CONSUME(JassTokenMap.constant));\n            $.CONSUME(JassTokenMap.native);\n            $.CONSUME2(JassTokenMap.identifier);\n            $.CONSUME3(JassTokenMap.takes);\n            $.SUBRULE($[ParseRuleName.function_args]);\n            $.CONSUME4(JassTokenMap.returns);\n            $.SUBRULE($[ParseRuleName.function_returns]);\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region function\n        $.RULE(ParseRuleName.function_declare, () => {\n            $.CONSUME(JassTokenMap.function);\n            $.CONSUME2(JassTokenMap.identifier);\n            $.CONSUME3(JassTokenMap.takes);\n            $.SUBRULE($[ParseRuleName.function_args]);\n            $.CONSUME4(JassTokenMap.returns);\n            $.SUBRULE($[ParseRuleName.function_returns]);\n            $.SUBRULE($[ParseRuleName.end]);\n            $.MANY1(() => $.SUBRULE($[ParseRuleName.function_locals]));\n            $.MANY2(() => $.SUBRULE($[ParseRuleName.statement]));\n            $.CONSUME(JassTokenMap.endfunction);\n            $.SUBRULE2($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region variable\n        $.RULE(ParseRuleName.variable_declare, () => {\n            $.OPTION(() => $.OR([\n                {ALT: () => $.CONSUME(JassTokenMap.constant)},\n                {ALT: () => $.CONSUME(JassTokenMap.local)},\n            ]));\n            $.SUBRULE($[ParseRuleName.typedname]);\n            $.OPTION2(() => {\n                $.CONSUME(JassTokenMap.assign)\n                $.SUBRULE($[ParseRuleName.expression])\n            });\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region globals\n        $.RULE(ParseRuleName.globals_declare, () => {\n            $.CONSUME(JassTokenMap.globals);\n            $.SUBRULE($[ParseRuleName.end]);\n            $.MANY(() => $.OR([\n                {ALT: () => $.SUBRULE($[ParseRuleName.variable_declare])},\n                {ALT: () => $.CONSUME(JassTokenMap.linebreak)},\n                {ALT: () => $.CONSUME(JassTokenMap.comment)},\n            ]));\n            $.CONSUME3(JassTokenMap.endglobals);\n            $.SUBRULE2($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region if\n        $.RULE(ParseRuleName.if_statement, () => {\n            $.CONSUME(JassTokenMap.if)\n            $.SUBRULE($[ParseRuleName.expression])\n            $.CONSUME(JassTokenMap.then)\n            $.SUBRULE($[ParseRuleName.end]);\n            $.MANY(() => $.SUBRULE($[ParseRuleName.statement]))\n            $.MANY2(() => $.SUBRULE($[ParseRuleName.elseif_statement]))\n            $.OPTION(() => $.SUBRULE($[ParseRuleName.else_statement]))\n            $.CONSUME(JassTokenMap.endif)\n            $.SUBRULE2($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region elseif\n        $.RULE(ParseRuleName.elseif_statement, () => {\n            $.CONSUME(JassTokenMap.elseif);\n            $.SUBRULE($[ParseRuleName.expression]);\n            $.CONSUME(JassTokenMap.then);\n            $.SUBRULE($[ParseRuleName.end]);\n            $.MANY(() => $.SUBRULE($[ParseRuleName.statement]));\n        });\n        //endregion\n\n        //region else\n        $.RULE(ParseRuleName.else_statement, () => {\n            $.CONSUME(JassTokenMap.else);\n            $.SUBRULE($[ParseRuleName.end]);\n            $.MANY(() => $.SUBRULE($[ParseRuleName.statement]));\n        });\n        //endregion\n\n        //region call\n        $.RULE(ParseRuleName.call_statement, () => {\n            $.OPTION(() => $.CONSUME(JassTokenMap.debug));\n            $.CONSUME(JassTokenMap.call)\n            $.SUBRULE($[ParseRuleName.function_call])\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region return\n        $.RULE(ParseRuleName.return_statement, () => {\n            $.CONSUME(JassTokenMap.return);\n            $.OPTION(() => $.SUBRULE($[ParseRuleName.expression]));\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region set\n        $.RULE(ParseRuleName.set_statement, () => {\n            $.CONSUME(JassTokenMap.set)\n            $.CONSUME(JassTokenMap.identifier)\n            $.OPTION(() => $.SUBRULE($[ParseRuleName.arrayaccess]))\n            $.CONSUME(JassTokenMap.assign)\n            $.SUBRULE($[ParseRuleName.expression]);\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region loop\n        $.RULE(ParseRuleName.loop_statement, () => {\n            $.CONSUME(JassTokenMap.loop);\n            $.SUBRULE($[ParseRuleName.end]);\n            $.MANY(() => $.SUBRULE($[ParseRuleName.statement]));\n            $.CONSUME(JassTokenMap.endloop);\n            $.SUBRULE2($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region exitwhen\n        $.RULE(ParseRuleName.exitwhen_statement, () => {\n            $.CONSUME(JassTokenMap.exitwhen);\n            $.SUBRULE($[ParseRuleName.expression]);\n            $.SUBRULE($[ParseRuleName.end]);\n        });\n        //endregion\n\n        //region args\n        $.RULE(ParseRuleName.function_args, () => {\n            $.OR([\n                {ALT: () => $.CONSUME(JassTokenMap.nothing)},\n                {\n                    ALT: () => {\n                        $.SUBRULE($[ParseRuleName.typedname])\n                        $.MANY(() => {\n                            $.CONSUME(JassTokenMap.comma);\n                            $.SUBRULE2($[ParseRuleName.typedname]);\n                        })\n                    }\n                },\n            ]);\n        });\n        //endregion\n\n        //region typedname\n        $.RULE(ParseRuleName.typedname, () => {\n            $.CONSUME(JassTokenMap.identifier)\n            $.OPTION2(() => $.CONSUME(JassTokenMap.array));\n            $.CONSUME2(JassTokenMap.identifier)\n        });\n        //endregion\n\n        $.RULE(ParseRuleName.function_returns, () => {\n            $.OR([\n                {ALT: () => $.CONSUME(JassTokenMap.nothing)},\n                {ALT: () => $.CONSUME(JassTokenMap.identifier)},\n            ]);\n        });\n\n        $.RULE(ParseRuleName.function_locals, () => {\n            $.OR([\n                {ALT: () => $.CONSUME(JassTokenMap.comment)},\n                {ALT: () => $.CONSUME(JassTokenMap.linebreak)},\n                {ALT: () => $.SUBRULE($[ParseRuleName.variable_declare])},\n            ]);\n        });\n\n        //region expression\n        $.RULE(ParseRuleName.expression, () => {\n            $.OR([\n                {\n                    ALT: () => {\n                        $.SUBRULE($[ParseRuleName.addition]);\n                        $.MANY(() => {\n                            $.OR2([\n                                {ALT: () => $.CONSUME(JassTokenMap.and)},\n                                {ALT: () => $.CONSUME(JassTokenMap.or)},\n                                {ALT: () => $.CONSUME(JassTokenMap.equals)},\n                                {ALT: () => $.CONSUME(JassTokenMap.notequals)},\n                                {ALT: () => $.CONSUME(JassTokenMap.less)},\n                                {ALT: () => $.CONSUME(JassTokenMap.lessorequal)},\n                                {ALT: () => $.CONSUME(JassTokenMap.great)},\n                                {ALT: () => $.CONSUME(JassTokenMap.greatorequal)},\n                            ]);\n                            $.SUBRULE2($[ParseRuleName.addition]);\n                        })\n                    }\n                },\n            ])\n        });\n        //endregion\n\n        $.RULE(ParseRuleName.addition, () => {\n            $.OR([\n                {\n                    ALT: () => {\n                        $.SUBRULE($[ParseRuleName.multiplication]);\n                        $.MANY(() => {\n                            $.OR2([\n                                {ALT: () => $.CONSUME2(JassTokenMap.add)},\n                                {ALT: () => $.CONSUME3(JassTokenMap.sub)},\n                            ]);\n                            $.SUBRULE2($[ParseRuleName.multiplication]);\n                        })\n                    }\n                },\n            ])\n        });\n\n        $.RULE(ParseRuleName.multiplication, () => {\n            $.OR([\n                {\n                    ALT: () => {\n                        $.SUBRULE($[ParseRuleName.primary])\n                        $.MANY(() => {\n                            $.OR2([\n                                {ALT: () => $.CONSUME2(JassTokenMap.mult)},\n                                {ALT: () => $.CONSUME3(JassTokenMap.div)},\n                            ]);\n                            $.SUBRULE2($[ParseRuleName.primary])\n                        })\n                    }\n                },\n            ])\n        });\n\n        //region primary\n        $.RULE(ParseRuleName.primary, () => {\n            $.OR([\n                {\n                    ALT: () => {\n                        $.OPTION(() => $.CONSUME(JassTokenMap.sub));\n                        $.CONSUME(JassTokenMap.integer);\n                    }\n                },\n                {\n                    ALT: () => {\n                        $.CONSUME(JassTokenMap.not);\n                        $.SUBRULE($[ParseRuleName.primary]);\n                    }\n                },\n                {\n                    ALT: () => {\n                        $.OPTION5(() => $.CONSUME3(JassTokenMap.sub));\n                        $.SUBRULE($[ParseRuleName.function_call]);\n                    }\n                },\n                {\n                    ALT: () => {\n                        $.OPTION6(() => $.CONSUME6(JassTokenMap.sub));\n                        $.CONSUME(JassTokenMap.lparen)\n                        $.SUBRULE2($[ParseRuleName.expression])\n                        $.CONSUME(JassTokenMap.rparen)\n                    }\n                },\n                {\n                    ALT: () => {\n                        $.OPTION3(() => $.CONSUME5(JassTokenMap.sub));\n                        $.CONSUME3(JassTokenMap.identifier)\n                        $.OPTION4(() => $.SUBRULE($[ParseRuleName.arrayaccess]))\n                    }\n                },\n                {\n                    ALT: () => {\n                        $.CONSUME(JassTokenMap.function)\n                        $.CONSUME4(JassTokenMap.identifier)\n                    }\n                },\n                {\n                    ALT: () => {\n                        $.OPTION2(() => $.CONSUME2(JassTokenMap.sub))\n                        $.CONSUME3(JassTokenMap.real)\n                    }\n                },\n                {\n                    ALT: () => $.CONSUME3(JassTokenMap.idliteral)\n                },\n                {\n                    ALT: () => $.CONSUME3(JassTokenMap.stringliteral)\n                }\n            ]);\n        });\n        //endregion\n\n        $.RULE(ParseRuleName.arrayaccess, () => {\n            $.CONSUME(JassTokenMap.lsquareparen);\n            $.SUBRULE3($[ParseRuleName.expression]);\n            $.CONSUME(JassTokenMap.rsquareparen);\n        })\n\n        $.RULE(ParseRuleName.function_call, () => {\n            $.CONSUME(JassTokenMap.identifier);\n            $.CONSUME2(JassTokenMap.lparen);\n            $.OPTION(() => {\n                $.SUBRULE4($[ParseRuleName.expression]);\n                $.MANY(() => {\n                    $.CONSUME(JassTokenMap.comma);\n                    $.SUBRULE($[ParseRuleName.expression]);\n                })\n            })\n            $.CONSUME3(JassTokenMap.rparen);\n        });\n\n        //region statement\n        $.RULE(ParseRuleName.statement, () => {\n            $.OR4([\n                {ALT: () => $.SUBRULE($[ParseRuleName.call_statement])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.set_statement])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.loop_statement])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.exitwhen_statement])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.if_statement])},\n                {ALT: () => $.SUBRULE($[ParseRuleName.return_statement])},\n                {ALT: () => $.CONSUME(JassTokenMap.linebreak)},\n                {ALT: () => $.CONSUME(JassTokenMap.comment)},\n            ]);\n        });\n        //endregion\n\n        //region end\n        $.RULE(ParseRuleName.end, () => {\n            $.OPTION(() => $.CONSUME(JassTokenMap.comment));\n            $.OR([\n                {ALT: () => $.CONSUME(JassTokenMap.linebreak)},\n                {ALT: () => $.CONSUME2(EOF)}\n            ]);\n        });\n        //endregion\n\n        this.performSelfAnalysis();\n    }\n}", "// noinspection NpmUsedModulesInstalled\nimport {Position, Range} from \"vscode\";\n\n/**\n * @param {import('chevrotain').IToken} token\n * @return {Range}\n */\nexport default token => new Range(\n    new Position(token.startLine - 1, token.startColumn - 1),\n    new Position(token.endLine - 1, token.endColumn),\n);\n", "// noinspection JSAssignmentUsedAsCondition\n\nimport {JassParser} from \"./parser.mjs\";\nimport ParseRuleName from \"./parse-rule-name.mjs\";\nimport ITokenToRange from \"../src/utils/i-token-to-range.mjs\";\n// noinspection NpmUsedModulesInstalled\nimport {DiagnosticSeverity} from \"vscode\";\nimport JassTokenMap from \"./lexer/jass-token-map.mjs\";\nimport JassTokenLegend from \"./lexer/jass-token-legend.mjs\";\n\nconst parser = new JassParser();\nconst ParserVisitor = parser.getBaseCstVisitorConstructor();\n\nexport class JassVisitor extends ParserVisitor {\n    constructor() {\n        super()\n        this.validateVisitor()\n    }\n\n    /** @type {import('vscode').Diagnostic[]} */ diagnostics;\n    /** @type {SemanticTokensBuilder} */ builder;\n\n    /**\n     * @param {import('chevrotain').IToken} token\n     * @param {number} type\n     */\n    #mark(token, type) {\n        if (this.builder === null) return;\n        if (!token) return;\n        this.builder?.push(\n            token.startLine - 1,\n            token.startColumn - 1,\n            token.endColumn - token.startColumn + 1,\n            type\n        );\n    }\n\n    #comment(ctx) {\n        ctx[ParseRuleName.end]?.map(item => this.visit(item));\n        ctx[JassTokenMap.comment.name]?.map(item => this.#mark(item, JassTokenLegend.jass_comment));\n    }\n\n    /** @param {import('chevrotain').CstNode} ctx */\n    #string(ctx) {\n        /** @type {import('chevrotain').IToken[]} */\n        const strings = ctx[JassTokenMap.stringliteral.name];\n        if (!strings) return;\n        for (const string of strings) {\n            if (string.startLine === string.endLine) {\n                this.#mark(string, JassTokenLegend.jass_stringliteral);\n                continue;\n            }\n            if (string) this.diagnostics?.push({\n                message: 'Avoid multiline strings. Use |n or \\\\n to linebreak.',\n                range: ITokenToRange(string),\n                severity: DiagnosticSeverity.Warning,\n            });\n        }\n    }\n\n    [ParseRuleName.jass](ctx) {\n        return ctx[ParseRuleName.root]?.map(item => this.visit(item));\n    }\n\n    [ParseRuleName.root](ctx) {\n        this.#comment(ctx);\n        let node;\n        if (node = ctx[ParseRuleName.type_declare]) return this.visit(node);\n        if (node = ctx[ParseRuleName.native_declare]) return this.visit(node);\n        if (node = ctx[ParseRuleName.function_declare]) return this.visit(node);\n        if (node = ctx[ParseRuleName.globals_declare]) return this.visit(node);\n    }\n\n    [ParseRuleName.end](ctx) {\n        this.#mark(ctx[JassTokenMap.comment.name]?.[0], JassTokenLegend.jass_comment);\n    }\n\n    [ParseRuleName.globals_declare](ctx) {\n        this.#comment(ctx);\n\n        this.#mark(ctx[JassTokenMap.globals.name]?.[0], JassTokenLegend.jass_globals);\n        this.#mark(ctx[JassTokenMap.endglobals.name]?.[0], JassTokenLegend.jass_endglobals);\n\n        const vardecl = ctx[ParseRuleName.variable_declare];\n\n        if (vardecl) for (const vd of vardecl) {\n            const variable = this.visit(vd);\n            const typedname = variable?.[ParseRuleName.typedname];\n            const local = variable?.[JassTokenMap.local.name];\n\n            if (local) this.diagnostics?.push({\n                message: `Local variable not allowed in globals block.`,\n                range: ITokenToRange(local),\n                severity: DiagnosticSeverity.Error,\n            });\n\n            if (typedname) {\n                const {type, name} = typedname;\n                this.#mark(type, JassTokenLegend.jass_type_name);\n                this.#mark(name, JassTokenLegend.jass_variable);\n            }\n        }\n\n        return ctx;\n    }\n\n    [ParseRuleName.type_declare](ctx) {\n        ctx[ParseRuleName.end]?.map(item => this.visit(item));\n\n        const name = ctx[JassTokenMap.identifier.name]?.[0];\n        const base = ctx[JassTokenMap.identifier.name]?.[1];\n\n        this.#mark(name, JassTokenLegend.jass_type_name);\n        this.#mark(base, JassTokenLegend.jass_type_name);\n\n        this.#mark(ctx[JassTokenMap.type.name]?.[0], JassTokenLegend.jass_type);\n        this.#mark(ctx[JassTokenMap.extends.name]?.[0], JassTokenLegend.jass_extends);\n\n        return {\n            name: name?.image,\n            base: base?.image,\n        }\n    }\n\n    [ParseRuleName.native_declare](ctx) {\n        this.#comment(ctx);\n\n        this.#mark(ctx[JassTokenMap.constant.name]?.[0], JassTokenLegend.jass_constant);\n        this.#mark(ctx[JassTokenMap.identifier.name]?.[0], JassTokenLegend.jass_function_native);\n        this.#mark(ctx[JassTokenMap.native.name]?.[0], JassTokenLegend.jass_native);\n        this.#mark(ctx[JassTokenMap.takes.name]?.[0], JassTokenLegend.jass_takes);\n        this.#mark(ctx[JassTokenMap.returns.name]?.[0], JassTokenLegend.jass_returns);\n\n        this.visit(ctx[ParseRuleName.function_args]);\n        this.visit(ctx[ParseRuleName.function_returns]);\n    }\n\n    [ParseRuleName.function_declare](ctx) {\n        this.#comment(ctx);\n\n        this.#mark(ctx[JassTokenMap.function.name]?.[0], JassTokenLegend.jass_function);\n        this.#mark(ctx[JassTokenMap.identifier.name]?.[0], JassTokenLegend.jass_function_user);\n        this.#mark(ctx[JassTokenMap.takes.name]?.[0], JassTokenLegend.jass_takes);\n        this.#mark(ctx[JassTokenMap.returns.name]?.[0], JassTokenLegend.jass_returns);\n        this.#mark(ctx[JassTokenMap.endfunction.name]?.[0], JassTokenLegend.jass_endfunction);\n\n        const locals = ctx?.[ParseRuleName.function_locals];\n\n        // argument\n        /** @type {Object.<string,import('chevrotain').IToken[]>}*/\n        const args = this.visit(ctx[ParseRuleName.function_args]);\n\n        // check array in argument\n        if (args?.list) for (const arg of args.list) {\n            const array = arg[JassTokenMap.array.name];\n            if (array) this.diagnostics?.push({\n                message: `Array not allowed in function argument.`,\n                range: ITokenToRange(array),\n                severity: DiagnosticSeverity.Error,\n            });\n        }\n\n        // locals, check locals with same name, check local redeclare argument\n        if (locals) {\n            /** @type {Object.<string,import('chevrotain').IToken[]>}*/\n            const localMap = {};\n\n            for (const local of locals) {\n                const typedname = this.visit(local)?.[ParseRuleName.typedname];\n                if (!typedname) continue;\n                const {type, name} = typedname;\n                this.#mark(type, JassTokenLegend.jass_type_name);\n                this.#mark(name, JassTokenLegend.jass_variable);\n                if (name) {\n                    (localMap[name.image] ??= []).push(name);\n                    const argList = args.map[name.image];\n                    if (argList) for (const t of [name, ...argList]) {\n                        this.diagnostics?.push({\n                            message: `Local variable redeclare argument: ${t.image}`,\n                            range: ITokenToRange(t),\n                            severity: DiagnosticSeverity.Warning,\n                        });\n                    }\n                }\n            }\n\n            for (const v of Object.values(localMap)) {\n                if (v.length < 2) continue;\n                for (const t of v) {\n                    this.diagnostics?.push({\n                        message: `Local variable with same name: ${t.image}`,\n                        range: ITokenToRange(t),\n                        severity: DiagnosticSeverity.Warning,\n                    });\n                }\n            }\n        }\n\n        // statement\n        const statements = ctx[ParseRuleName.statement];\n        if (statements) for (const statement of statements) {\n            this.visit(statement);\n        }\n\n        // return\n        this.visit(ctx[ParseRuleName.function_returns]);\n\n        // final\n        return {};\n    }\n\n    [ParseRuleName.function_locals](ctx) {\n        this.#comment(ctx);\n\n        const variableDeclare = ctx[ParseRuleName.variable_declare];\n        if (!variableDeclare) return null;\n        const variable = this.visit(variableDeclare);\n\n        const constant = variable?.[JassTokenMap.constant.name];\n        if (constant) this.diagnostics?.push({\n            message: `Constant not allowed in function.`,\n            range: ITokenToRange(constant),\n            severity: DiagnosticSeverity.Error,\n        });\n\n        const local = variable?.[JassTokenMap.local.name];\n        if (!local) {\n            const {type} = variable?.[ParseRuleName.typedname];\n            if (type) this.diagnostics?.push({\n                message: `Missing local keyword.`,\n                range: ITokenToRange(type),\n                severity: DiagnosticSeverity.Error,\n            });\n        }\n\n        return variable;\n    }\n\n    [ParseRuleName.typedname](ctx) {\n        const array = ctx[JassTokenMap.array.name]?.[0];\n        this.#mark(array, JassTokenLegend.jass_array);\n\n        const list = ctx[JassTokenMap.identifier.name];\n        if (!list) return {};\n\n        let [type, name] = list;\n        if (type?.isInsertedInRecovery ?? false) type = null;\n        if (name?.isInsertedInRecovery ?? false) name = null;\n        return {\n            type: type,\n            name: name,\n            array: array,\n        };\n    }\n\n    [ParseRuleName.function_call](ctx) {\n        //console.log('function_call', ctx);\n        this.#mark(ctx[JassTokenMap.identifier.name]?.[0], JassTokenLegend.jass_function_user);\n        this.#mark(ctx[JassTokenMap.lparen.name]?.[0], JassTokenLegend.jass_lparen);\n        this.#mark(ctx[JassTokenMap.rparen.name]?.[0], JassTokenLegend.jass_rparen);\n        ctx[JassTokenMap.comma.name]?.map(item => this.#mark(item, JassTokenLegend.jass_comma));\n        ctx[ParseRuleName.expression]?.map(item => this.visit(item));\n        return ctx;\n    }\n\n    [ParseRuleName.function_args](ctx) {\n        let token;\n\n        // nothing\n        if (token = ctx?.[JassTokenMap.nothing.name]?.[0]) {\n            this.#mark(token, JassTokenLegend.jass_type_name);\n            return {map: {}, list: []};\n        }\n\n        // commas\n        if (token = ctx[JassTokenMap.comma.name]) for (const comma of token) {\n            this.#mark(comma, JassTokenLegend.jass_comma);\n        }\n\n        // args\n        /** @type {import('chevrotain').IToken[][]} */\n        const args = ctx?.[ParseRuleName.typedname]?.map(item => this.visit(item));\n\n        /** @type {Object.<string,import('chevrotain').IToken[]>}*/\n        const argMap = {};\n\n        // typedname, check type same name\n        if (args) {\n            for (const arg of args) {\n                const {type, name} = arg;\n                this.#mark(type, JassTokenLegend.jass_type_name);\n                this.#mark(name, JassTokenLegend.jass_argument);\n                if (name) (argMap[name.image] ??= []).push(name);\n            }\n\n            for (const v of Object.values(argMap)) {\n                if (v.length < 2) continue;\n                for (const t of v) {\n                    this.diagnostics?.push({\n                        message: `Arguments with same name: ${t.image}`,\n                        range: ITokenToRange(t),\n                        severity: DiagnosticSeverity.Warning,\n                    });\n                }\n            }\n        }\n\n        // return\n        return {\n            map: argMap,\n            list: args,\n        };\n    }\n\n    [ParseRuleName.function_returns](ctx) {\n        let token;\n\n        if (token = ctx[JassTokenMap.nothing.name]?.[0]) {\n            this.#mark(token, JassTokenLegend.jass_type_name);\n            return token.image;\n        }\n\n        if (token = ctx[JassTokenMap.identifier.name]?.[0]) {\n            this.#mark(token, JassTokenLegend.jass_type_name);\n            return token.image;\n        }\n\n        return null;\n    }\n\n    [ParseRuleName.variable_declare](ctx) {\n        //console.log(ParseRuleName.variable_declare, ctx);\n        this.#comment(ctx);\n\n        const equals = ctx[JassTokenMap.assign.name]?.[0];\n        const typedname = this.visit(ctx[ParseRuleName.typedname]);\n        const array = typedname[JassTokenMap.array.name];\n\n        // check array assing\n        if (equals && array) this.diagnostics?.push({\n            message: `Array varriables can't be initialised.`,\n            range: ITokenToRange(array),\n            severity: DiagnosticSeverity.Error,\n        });\n\n        const local = ctx[JassTokenMap.local.name]?.[0];\n        if (local) this.#mark(local, JassTokenLegend.jass_local);\n\n        const constant = ctx[JassTokenMap.constant.name]?.[0];\n        if (constant) this.#mark(constant, JassTokenLegend.jass_constant);\n\n        this.#mark(ctx[JassTokenMap.assign.name]?.[0], JassTokenLegend.jass_equals);\n        this.visit(ctx[ParseRuleName.expression]?.[0]);\n        return {\n            [ParseRuleName.typedname]: typedname,\n            [JassTokenMap.local.name]: local,\n            [JassTokenMap.constant.name]: constant,\n        };\n    }\n\n    [ParseRuleName.statement](ctx) {\n        this.#comment(ctx);\n        let node;\n        if (node = ctx[ParseRuleName.if_statement]) return this.visit(node);\n        if (node = ctx[ParseRuleName.set_statement]) return this.visit(node);\n        if (node = ctx[ParseRuleName.call_statement]) return this.visit(node);\n        if (node = ctx[ParseRuleName.loop_statement]) return this.visit(node);\n        if (node = ctx[ParseRuleName.exitwhen_statement]) return this.visit(node);\n        if (node = ctx[ParseRuleName.return_statement]) return this.visit(node);\n        return null;\n    }\n\n    [ParseRuleName.call_statement](ctx) {\n        this.#comment(ctx);\n        this.#mark(ctx[JassTokenMap.debug.name]?.[0], JassTokenLegend.jass_debug);\n        this.#mark(ctx[JassTokenMap.call.name]?.[0], JassTokenLegend.jass_call);\n        this.visit(ctx[ParseRuleName.function_call]);\n        return null;\n    }\n\n    [ParseRuleName.set_statement](ctx) {\n        //console.log(ParseRuleName.set_statement, ctx);\n\n        this.#comment(ctx);\n        this.#mark(ctx[JassTokenMap.set.name]?.[0], JassTokenLegend.jass_set);\n        this.#mark(ctx[JassTokenMap.identifier.name]?.[0], JassTokenLegend.jass_variable);\n        this.#mark(ctx[JassTokenMap.assign.name]?.[0], JassTokenLegend.jass_assign);\n\n        this.visit(ctx[ParseRuleName.expression]);\n        this.visit(ctx[ParseRuleName.arrayaccess]);\n        return null;\n    }\n\n    [ParseRuleName.loop_statement](ctx) {\n        this.#comment(ctx);\n        this.#mark(ctx[JassTokenMap.loop.name]?.[0], JassTokenLegend.jass_loop);\n        this.#mark(ctx[JassTokenMap.endloop.name]?.[0], JassTokenLegend.jass_endloop);\n        ctx[ParseRuleName.statement]?.map(item => this.visit(item));\n        return ctx;\n    }\n\n    [ParseRuleName.exitwhen_statement](ctx) {\n        this.#comment(ctx);\n        this.#mark(ctx[JassTokenMap.exitwhen.name]?.[0], JassTokenLegend.jass_loop);\n\n        this.visit(ctx[ParseRuleName.expression]);\n        return ctx;\n    }\n\n    [ParseRuleName.return_statement](ctx) {\n        this.#comment(ctx);\n        this.#mark(ctx[JassTokenMap.return.name]?.[0], JassTokenLegend.jass_return);\n\n        this.visit(ctx[ParseRuleName.expression]);\n        return null;\n    }\n\n    [ParseRuleName.if_statement](ctx) {\n        //console.log('if_statement', ctx);\n        this.#comment(ctx);\n\n        this.#mark(ctx[JassTokenMap.if.name]?.[0], JassTokenLegend.jass_if);\n        this.#mark(ctx[JassTokenMap.then.name]?.[0], JassTokenLegend.jass_then);\n        this.#mark(ctx[JassTokenMap.endif.name]?.[0], JassTokenLegend.jass_endif);\n\n        this.visit(ctx[ParseRuleName.expression]);\n        ctx[ParseRuleName.statement]?.map(item => this.visit(item));\n        ctx[ParseRuleName.elseif_statement]?.map(item => this.visit(item));\n        this.visit(ctx[ParseRuleName.else_statement]);\n        return null;\n    }\n\n    [ParseRuleName.elseif_statement](ctx) {\n        this.#comment(ctx);\n\n        this.visit(ctx[ParseRuleName.expression]);\n        this.#mark(ctx[JassTokenMap.elseif.name]?.[0], JassTokenLegend.jass_elseif);\n        this.#mark(ctx[JassTokenMap.then.name]?.[0], JassTokenLegend.jass_then);\n        ctx[ParseRuleName.statement]?.map(item => this.visit(item));\n        return null;\n    }\n\n    [ParseRuleName.else_statement](ctx) {\n        this.#comment(ctx);\n        this.#mark(ctx[JassTokenMap.else.name]?.[0], JassTokenLegend.jass_else);\n        ctx[ParseRuleName.statement]?.map(item => this.visit(item));\n        return null;\n    }\n\n    [ParseRuleName.expression](ctx) {\n        //console.log(ParseRuleName.expression, ctx);\n        ctx[JassTokenMap.and.name]?.map(item => this.#mark(item, JassTokenLegend.jass_and));\n        ctx[JassTokenMap.or.name]?.map(item => this.#mark(item, JassTokenLegend.jass_or));\n        ctx[JassTokenMap.equals.name]?.map(item => this.#mark(item, JassTokenLegend.jass_equals));\n        ctx[JassTokenMap.notequals.name]?.map(item => this.#mark(item, JassTokenLegend.jass_notequals));\n        ctx[JassTokenMap.lessorequal.name]?.map(item => this.#mark(item, JassTokenLegend.jass_lessorequal));\n        ctx[JassTokenMap.great.name]?.map(item => this.#mark(item, JassTokenLegend.jass_great));\n        ctx[JassTokenMap.greatorequal.name]?.map(item => this.#mark(item, JassTokenLegend.jass_greatorequal));\n\n        ctx[ParseRuleName.addition]?.map(item => this.visit(item));\n        return null;\n    }\n\n    [ParseRuleName.primary](ctx) {\n        //console.log(ParseRuleName.primary, ctx);\n        this.#string(ctx);\n        this.#mark(ctx[JassTokenMap.sub.name]?.[0], JassTokenLegend.jass_sub);\n        this.#mark(ctx[JassTokenMap.integer.name]?.[0], JassTokenLegend.jass_integer);\n        this.#mark(ctx[JassTokenMap.real.name]?.[0], JassTokenLegend.jass_real);\n        this.#mark(ctx[JassTokenMap.idliteral.name]?.[0], JassTokenLegend.jass_idliteral);\n        this.#mark(ctx[JassTokenMap.identifier.name]?.[0], JassTokenLegend.jass_variable);\n        this.visit(ctx[ParseRuleName.arrayaccess]);\n        this.visit(ctx[ParseRuleName.function_call]);\n        this.visit(ctx[ParseRuleName.expression]);\n        return null;\n    }\n\n    [ParseRuleName.addition](ctx) {\n        //console.log('addition', ctx);\n        ctx[JassTokenMap.add.name]?.map(item => this.#mark(item, JassTokenLegend.jass_add));\n        ctx[JassTokenMap.sub.name]?.map(item => this.#mark(item, JassTokenLegend.jass_sub));\n\n        ctx[ParseRuleName.multiplication]?.map(item => this.visit(item));\n        return null;\n    }\n\n    [ParseRuleName.multiplication](ctx) {\n        //console.log('multiplication', ctx);\n        ctx[JassTokenMap.mult.name]?.map(item => this.#mark(item, JassTokenLegend.jass_mult));\n        ctx[JassTokenMap.div.name]?.map(item => this.#mark(item, JassTokenLegend.jass_div));\n\n        ctx[ParseRuleName.primary]?.map(item => this.visit(item));\n        return null;\n    }\n\n    [ParseRuleName.arrayaccess](ctx) {\n        //console.log(ParseRuleName.arrayaccess, ctx);\n        this.#mark(ctx[JassTokenMap.lsquareparen.name]?.[0], JassTokenLegend.jass_lsquareparen);\n        this.#mark(ctx[JassTokenMap.rsquareparen.name]?.[0], JassTokenLegend.jass_rsquareparen);\n\n        this.visit(ctx[ParseRuleName.expression]?.[0]);\n        return null;\n    }\n}", "export default {\n    jass_comment: 0,\n    jass_and: 1,\n    jass_array: 2,\n    jass_call: 3,\n    jass_constant: 4,\n    jass_debug: 5,\n    jass_else: 6,\n    jass_elseif: 7,\n    jass_endfunction: 8,\n    jass_endglobals: 9,\n    jass_endif: 10,\n    jass_endloop: 11,\n    jass_exitwhen: 12,\n    jass_extends: 13,\n    jass_function: 14,\n    jass_globals: 15,\n    jass_if: 16,\n    jass_local: 17,\n    jass_loop: 18,\n    jass_native: 19,\n    jass_not: 20,\n    jass_nothing: 21,\n    jass_or: 22,\n    jass_returns: 23,\n    jass_return: 24,\n    jass_set: 25,\n    jass_takes: 26,\n    jass_then: 27,\n    jass_type: 28,\n    jass_comma: 29,\n    jass_equals: 30,\n    jass_assign: 31,\n    jass_notequals: 32,\n    jass_lessorequal: 33,\n    jass_less: 34,\n    jass_greatorequal: 35,\n    jass_great: 36,\n    jass_add: 37,\n    jass_sub: 38,\n    jass_mult: 39,\n    jass_div: 40,\n    jass_lparen: 41,\n    jass_rparen: 42,\n    jass_lsquareparen: 43,\n    jass_rsquareparen: 44,\n    jass_real: 45,\n    jass_integer: 46,\n    jass_idliteral: 47,\n    jass_stringliteral: 48,\n    jass_variable: 49,\n    jass_function_user: 50,\n    jass_function_native: 51,\n    jass_type_name: 52,\n    jass_argument: 53,\n}", "import {createSyntaxDiagramsCode} from 'chevrotain'\nimport {JassParser} from \"../jass/parser.mjs\";\nimport {JassVisitor} from \"../jass/visitor.mjs\";\n\nconst parser = new JassParser(true)\nconst iframe = document.createElement('iframe');\niframe.src = 'data:text/html;charset=utf-8,' + encodeURI(createSyntaxDiagramsCode(parser.getSerializedGastProductions()));\ndocument.body.appendChild(iframe);\n\n\n(async () => {\n    const visitor = new JassVisitor();\n    const request = await fetch('test.txt');\n    parser.inputText = await request.text();\n\n    const result = visitor.visit(parser.jass());\n\n    for (const error of parser.errorlist) console.warn(error)\n\n    //console.log(result);\n})();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAGO,IAAM,UAAU;;;ACFvB,IAAI,aAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU;AAEpF,IAAO,qBAAQ;;;ACAf,IAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,IAAI,OAAO,sBAAc,YAAY,SAAS,aAAa,EAAE;AAE7D,IAAO,eAAQ;;;ACLf,IAAIA,UAAS,aAAK;AAElB,IAAO,iBAAQA;;;ACFf,IAAI,cAAc,OAAO;AAGzB,IAAI,iBAAiB,YAAY;AAOjC,IAAI,uBAAuB,YAAY;AAGvC,IAAI,iBAAiB,iBAAS,eAAO,cAAc;AASnD,SAAS,UAAU,OAAO;AACxB,MAAI,QAAQ,eAAe,KAAK,OAAO,cAAc,GACjD,MAAM,MAAM,cAAc;AAE9B,MAAI;AACF,UAAM,cAAc,IAAI;AACxB,QAAI,WAAW;AAAA,EACjB,SAAS,GAAG;AAAA,EAAC;AAEb,MAAI,SAAS,qBAAqB,KAAK,KAAK;AAC5C,MAAI,UAAU;AACZ,QAAI,OAAO;AACT,YAAM,cAAc,IAAI;AAAA,IAC1B,OAAO;AACL,aAAO,MAAM,cAAc;AAAA,IAC7B;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AC5Cf,IAAIC,eAAc,OAAO;AAOzB,IAAIC,wBAAuBD,aAAY;AASvC,SAAS,eAAe,OAAO;AAC7B,SAAOC,sBAAqB,KAAK,KAAK;AACxC;AAEA,IAAO,yBAAQ;;;AChBf,IAAI,UAAU;AAAd,IACI,eAAe;AAGnB,IAAIC,kBAAiB,iBAAS,eAAO,cAAc;AASnD,SAAS,WAAW,OAAO;AACzB,MAAI,SAAS,MAAM;AACjB,WAAO,UAAU,SAAY,eAAe;AAAA,EAC9C;AACA,SAAQA,mBAAkBA,mBAAkB,OAAO,KAAK,IACpD,kBAAU,KAAK,IACf,uBAAe,KAAK;AAC1B;AAEA,IAAO,qBAAQ;;;ACHf,SAAS,aAAa,OAAO;AAC3B,SAAO,SAAS,QAAQ,OAAO,SAAS;AAC1C;AAEA,IAAO,uBAAQ;;;ACxBf,IAAI,YAAY;AAmBhB,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,SAAS,YACpB,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAK;AACjD;AAEA,IAAO,mBAAQ;;;ACnBf,SAAS,SAAS,OAAO,UAAU;AACjC,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM,QACnC,SAAS,MAAM,MAAM;AAEzB,SAAO,EAAE,QAAQ,QAAQ;AACvB,WAAO,KAAK,IAAI,SAAS,MAAM,KAAK,GAAG,OAAO,KAAK;AAAA,EACrD;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACGf,IAAI,UAAU,MAAM;AAEpB,IAAO,kBAAQ;;;ACnBf,IAAI,WAAW,IAAI;AAGnB,IAAI,cAAc,iBAAS,eAAO,YAAY;AAA9C,IACI,iBAAiB,cAAc,YAAY,WAAW;AAU1D,SAAS,aAAa,OAAO;AAE3B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,gBAAQ,KAAK,GAAG;AAElB,WAAO,iBAAS,OAAO,YAAY,IAAI;AAAA,EACzC;AACA,MAAI,iBAAS,KAAK,GAAG;AACnB,WAAO,iBAAiB,eAAe,KAAK,KAAK,IAAI;AAAA,EACvD;AACA,MAAI,SAAU,QAAQ;AACtB,SAAQ,UAAU,OAAQ,IAAI,SAAU,CAAC,WAAY,OAAO;AAC9D;AAEA,IAAO,uBAAQ;;;ACnCf,IAAI,eAAe;AAUnB,SAAS,gBAAgB,QAAQ;AAC/B,MAAI,QAAQ,OAAO;AAEnB,SAAO,WAAW,aAAa,KAAK,OAAO,OAAO,KAAK,CAAC,GAAG;AAAA,EAAC;AAC5D,SAAO;AACT;AAEA,IAAO,0BAAQ;;;ACff,IAAI,cAAc;AASlB,SAAS,SAAS,QAAQ;AACxB,SAAO,SACH,OAAO,MAAM,GAAG,wBAAgB,MAAM,IAAI,CAAC,EAAE,QAAQ,aAAa,EAAE,IACpE;AACN;AAEA,IAAO,mBAAQ;;;ACOf,SAAS,SAAS,OAAO;AACvB,MAAI,OAAO,OAAO;AAClB,SAAO,SAAS,SAAS,QAAQ,YAAY,QAAQ;AACvD;AAEA,IAAO,mBAAQ;;;ACzBf,IAAI,MAAM,IAAI;AAGd,IAAI,aAAa;AAGjB,IAAI,aAAa;AAGjB,IAAI,YAAY;AAGhB,IAAI,eAAe;AAyBnB,SAAS,SAAS,OAAO;AACvB,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,iBAAS,KAAK,GAAG;AACnB,WAAO;AAAA,EACT;AACA,MAAI,iBAAS,KAAK,GAAG;AACnB,QAAI,QAAQ,OAAO,MAAM,WAAW,aAAa,MAAM,QAAQ,IAAI;AACnE,YAAQ,iBAAS,KAAK,IAAK,QAAQ,KAAM;AAAA,EAC3C;AACA,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,UAAU,IAAI,QAAQ,CAAC;AAAA,EAChC;AACA,UAAQ,iBAAS,KAAK;AACtB,MAAI,WAAW,WAAW,KAAK,KAAK;AACpC,SAAQ,YAAY,UAAU,KAAK,KAAK,IACpC,aAAa,MAAM,MAAM,CAAC,GAAG,WAAW,IAAI,CAAC,IAC5C,WAAW,KAAK,KAAK,IAAI,MAAM,CAAC;AACvC;AAEA,IAAO,mBAAQ;;;AC5Df,IAAIC,YAAW,IAAI;AAAnB,IACI,cAAc;AAyBlB,SAAS,SAAS,OAAO;AACvB,MAAI,CAAC,OAAO;AACV,WAAO,UAAU,IAAI,QAAQ;AAAA,EAC/B;AACA,UAAQ,iBAAS,KAAK;AACtB,MAAI,UAAUA,aAAY,UAAU,CAACA,WAAU;AAC7C,QAAI,OAAQ,QAAQ,IAAI,KAAK;AAC7B,WAAO,OAAO;AAAA,EAChB;AACA,SAAO,UAAU,QAAQ,QAAQ;AACnC;AAEA,IAAO,mBAAQ;;;ACbf,SAAS,UAAU,OAAO;AACxB,MAAI,SAAS,iBAAS,KAAK,GACvB,YAAY,SAAS;AAEzB,SAAO,WAAW,SAAU,YAAY,SAAS,YAAY,SAAU;AACzE;AAEA,IAAO,oBAAQ;;;ACnBf,SAAS,SAAS,OAAO;AACvB,SAAO;AACT;AAEA,IAAO,mBAAQ;;;AChBf,IAAI,WAAW;AAAf,IACI,UAAU;AADd,IAEI,SAAS;AAFb,IAGI,WAAW;AAmBf,SAAS,WAAW,OAAO;AACzB,MAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,WAAO;AAAA,EACT;AAGA,MAAI,MAAM,mBAAW,KAAK;AAC1B,SAAO,OAAO,WAAW,OAAO,UAAU,OAAO,YAAY,OAAO;AACtE;AAEA,IAAO,qBAAQ;;;ACjCf,IAAI,aAAa,aAAK,oBAAoB;AAE1C,IAAO,qBAAQ;;;ACFf,IAAI,aAAc,WAAW;AAC3B,MAAI,MAAM,SAAS,KAAK,sBAAc,mBAAW,QAAQ,mBAAW,KAAK,YAAY,EAAE;AACvF,SAAO,MAAO,mBAAmB,MAAO;AAC1C,EAAE;AASF,SAAS,SAAS,MAAM;AACtB,SAAO,CAAC,CAAC,cAAe,cAAc;AACxC;AAEA,IAAO,mBAAQ;;;AClBf,IAAI,YAAY,SAAS;AAGzB,IAAI,eAAe,UAAU;AAS7B,SAAS,SAAS,MAAM;AACtB,MAAI,QAAQ,MAAM;AAChB,QAAI;AACF,aAAO,aAAa,KAAK,IAAI;AAAA,IAC/B,SAAS,GAAG;AAAA,IAAC;AACb,QAAI;AACF,aAAQ,OAAO;AAAA,IACjB,SAAS,GAAG;AAAA,IAAC;AAAA,EACf;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;AChBf,IAAI,eAAe;AAGnB,IAAI,eAAe;AAGnB,IAAIC,aAAY,SAAS;AAAzB,IACIC,eAAc,OAAO;AAGzB,IAAIC,gBAAeF,WAAU;AAG7B,IAAIG,kBAAiBF,aAAY;AAGjC,IAAI,aAAa;AAAA,EAAO,MACtBC,cAAa,KAAKC,eAAc,EAAE,QAAQ,cAAc,MAAM,EAC7D,QAAQ,0DAA0D,OAAO,IAAI;AAChF;AAUA,SAAS,aAAa,OAAO;AAC3B,MAAI,CAAC,iBAAS,KAAK,KAAK,iBAAS,KAAK,GAAG;AACvC,WAAO;AAAA,EACT;AACA,MAAI,UAAU,mBAAW,KAAK,IAAI,aAAa;AAC/C,SAAO,QAAQ,KAAK,iBAAS,KAAK,CAAC;AACrC;AAEA,IAAO,uBAAQ;;;ACtCf,SAAS,SAAS,QAAQ,KAAK;AAC7B,SAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAChD;AAEA,IAAO,mBAAQ;;;ACDf,SAAS,UAAU,QAAQ,KAAK;AAC9B,MAAI,QAAQ,iBAAS,QAAQ,GAAG;AAChC,SAAO,qBAAa,KAAK,IAAI,QAAQ;AACvC;AAEA,IAAO,oBAAQ;;;ACZf,IAAI,UAAU,kBAAU,cAAM,SAAS;AAEvC,IAAO,kBAAQ;;;ACHf,IAAI,eAAe,OAAO;AAU1B,IAAI,aAAc,WAAW;AAC3B,WAAS,SAAS;AAAA,EAAC;AACnB,SAAO,SAAS,OAAO;AACrB,QAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,aAAO,CAAC;AAAA,IACV;AACA,QAAI,cAAc;AAChB,aAAO,aAAa,KAAK;AAAA,IAC3B;AACA,WAAO,YAAY;AACnB,QAAI,SAAS,IAAI;AACjB,WAAO,YAAY;AACnB,WAAO;AAAA,EACT;AACF,EAAE;AAEF,IAAO,qBAAQ;;;ACnBf,SAAS,MAAM,MAAM,SAAS,MAAM;AAClC,UAAQ,KAAK,QAAQ;AAAA,IACnB,KAAK;AAAG,aAAO,KAAK,KAAK,OAAO;AAAA,IAChC,KAAK;AAAG,aAAO,KAAK,KAAK,SAAS,KAAK,CAAC,CAAC;AAAA,IACzC,KAAK;AAAG,aAAO,KAAK,KAAK,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,IAClD,KAAK;AAAG,aAAO,KAAK,KAAK,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,EAC7D;AACA,SAAO,KAAK,MAAM,SAAS,IAAI;AACjC;AAEA,IAAO,gBAAQ;;;ACRf,SAAS,OAAO;AAEhB;AAEA,IAAO,eAAQ;;;ACRf,SAAS,UAAU,QAAQ,OAAO;AAChC,MAAI,QAAQ,IACR,SAAS,OAAO;AAEpB,YAAU,QAAQ,MAAM,MAAM;AAC9B,SAAO,EAAE,QAAQ,QAAQ;AACvB,UAAM,KAAK,IAAI,OAAO,KAAK;AAAA,EAC7B;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AClBf,IAAI,YAAY;AAAhB,IACI,WAAW;AAGf,IAAI,YAAY,KAAK;AAWrB,SAAS,SAAS,MAAM;AACtB,MAAI,QAAQ,GACR,aAAa;AAEjB,SAAO,WAAW;AAChB,QAAI,QAAQ,UAAU,GAClB,YAAY,YAAY,QAAQ;AAEpC,iBAAa;AACb,QAAI,YAAY,GAAG;AACjB,UAAI,EAAE,SAAS,WAAW;AACxB,eAAO,UAAU,CAAC;AAAA,MACpB;AAAA,IACF,OAAO;AACL,cAAQ;AAAA,IACV;AACA,WAAO,KAAK,MAAM,QAAW,SAAS;AAAA,EACxC;AACF;AAEA,IAAO,mBAAQ;;;ACjBf,SAAS,SAAS,OAAO;AACvB,SAAO,WAAW;AAChB,WAAO;AAAA,EACT;AACF;AAEA,IAAO,mBAAQ;;;ACvBf,IAAI,iBAAkB,WAAW;AAC/B,MAAI;AACF,QAAI,OAAO,kBAAU,QAAQ,gBAAgB;AAC7C,SAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AACf,WAAO;AAAA,EACT,SAAS,GAAG;AAAA,EAAC;AACf,EAAE;AAEF,IAAO,yBAAQ;;;ACEf,IAAI,kBAAkB,CAAC,yBAAiB,mBAAW,SAAS,MAAM,QAAQ;AACxE,SAAO,uBAAe,MAAM,YAAY;AAAA,IACtC,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,SAAS,iBAAS,MAAM;AAAA,IACxB,YAAY;AAAA,EACd,CAAC;AACH;AAEA,IAAO,0BAAQ;;;ACVf,IAAI,cAAc,iBAAS,uBAAe;AAE1C,IAAO,sBAAQ;;;ACJf,SAAS,UAAU,OAAO,UAAU;AAClC,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,SAAS,MAAM,KAAK,GAAG,OAAO,KAAK,MAAM,OAAO;AAClD;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACVf,SAAS,cAAc,OAAO,WAAW,WAAW,WAAW;AAC7D,MAAI,SAAS,MAAM,QACf,QAAQ,aAAa,YAAY,IAAI;AAEzC,SAAQ,YAAY,UAAU,EAAE,QAAQ,QAAS;AAC/C,QAAI,UAAU,MAAM,KAAK,GAAG,OAAO,KAAK,GAAG;AACzC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,wBAAQ;;;AChBf,SAAS,UAAU,OAAO;AACxB,SAAO,UAAU;AACnB;AAEA,IAAO,oBAAQ;;;ACDf,SAAS,cAAc,OAAO,OAAO,WAAW;AAC9C,MAAI,QAAQ,YAAY,GACpB,SAAS,MAAM;AAEnB,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,MAAM,KAAK,MAAM,OAAO;AAC1B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,wBAAQ;;;ACTf,SAAS,YAAY,OAAO,OAAO,WAAW;AAC5C,SAAO,UAAU,QACb,sBAAc,OAAO,OAAO,SAAS,IACrC,sBAAc,OAAO,mBAAW,SAAS;AAC/C;AAEA,IAAO,sBAAQ;;;ACRf,SAAS,cAAc,OAAO,OAAO;AACnC,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,SAAO,CAAC,CAAC,UAAU,oBAAY,OAAO,OAAO,CAAC,IAAI;AACpD;AAEA,IAAO,wBAAQ;;;ACff,IAAI,mBAAmB;AAGvB,IAAI,WAAW;AAUf,SAAS,QAAQ,OAAO,QAAQ;AAC9B,MAAI,OAAO,OAAO;AAClB,WAAS,UAAU,OAAO,mBAAmB;AAE7C,SAAO,CAAC,CAAC,WACN,QAAQ,YACN,QAAQ,YAAY,SAAS,KAAK,KAAK,OACrC,QAAQ,MAAM,QAAQ,KAAK,KAAK,QAAQ;AACjD;AAEA,IAAO,kBAAQ;;;ACbf,SAAS,gBAAgB,QAAQ,KAAK,OAAO;AAC3C,MAAI,OAAO,eAAe,wBAAgB;AACxC,2BAAe,QAAQ,KAAK;AAAA,MAC1B,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,SAAS;AAAA,MACT,YAAY;AAAA,IACd,CAAC;AAAA,EACH,OAAO;AACL,WAAO,GAAG,IAAI;AAAA,EAChB;AACF;AAEA,IAAO,0BAAQ;;;ACQf,SAAS,GAAG,OAAO,OAAO;AACxB,SAAO,UAAU,SAAU,UAAU,SAAS,UAAU;AAC1D;AAEA,IAAO,aAAQ;;;AChCf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAYjC,SAAS,YAAY,QAAQ,KAAK,OAAO;AACvC,MAAI,WAAW,OAAO,GAAG;AACzB,MAAI,EAAEC,gBAAe,KAAK,QAAQ,GAAG,KAAK,WAAG,UAAU,KAAK,MACvD,UAAU,UAAa,EAAE,OAAO,SAAU;AAC7C,4BAAgB,QAAQ,KAAK,KAAK;AAAA,EACpC;AACF;AAEA,IAAO,sBAAQ;;;ACdf,SAAS,WAAW,QAAQ,OAAO,QAAQ,YAAY;AACrD,MAAI,QAAQ,CAAC;AACb,aAAW,SAAS,CAAC;AAErB,MAAI,QAAQ,IACR,SAAS,MAAM;AAEnB,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,MAAM,MAAM,KAAK;AAErB,QAAI,WAAW,aACX,WAAW,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,KAAK,QAAQ,MAAM,IACxD;AAEJ,QAAI,aAAa,QAAW;AAC1B,iBAAW,OAAO,GAAG;AAAA,IACvB;AACA,QAAI,OAAO;AACT,8BAAgB,QAAQ,KAAK,QAAQ;AAAA,IACvC,OAAO;AACL,0BAAY,QAAQ,KAAK,QAAQ;AAAA,IACnC;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACpCf,IAAI,YAAY,KAAK;AAWrB,SAAS,SAAS,MAAM,OAAO,WAAW;AACxC,UAAQ,UAAU,UAAU,SAAa,KAAK,SAAS,IAAK,OAAO,CAAC;AACpE,SAAO,WAAW;AAChB,QAAI,OAAO,WACP,QAAQ,IACR,SAAS,UAAU,KAAK,SAAS,OAAO,CAAC,GACzC,QAAQ,MAAM,MAAM;AAExB,WAAO,EAAE,QAAQ,QAAQ;AACvB,YAAM,KAAK,IAAI,KAAK,QAAQ,KAAK;AAAA,IACnC;AACA,YAAQ;AACR,QAAI,YAAY,MAAM,QAAQ,CAAC;AAC/B,WAAO,EAAE,QAAQ,OAAO;AACtB,gBAAU,KAAK,IAAI,KAAK,KAAK;AAAA,IAC/B;AACA,cAAU,KAAK,IAAI,UAAU,KAAK;AAClC,WAAO,cAAM,MAAM,MAAM,SAAS;AAAA,EACpC;AACF;AAEA,IAAO,mBAAQ;;;ACvBf,SAAS,SAAS,MAAM,OAAO;AAC7B,SAAO,oBAAY,iBAAS,MAAM,OAAO,gBAAQ,GAAG,OAAO,EAAE;AAC/D;AAEA,IAAO,mBAAQ;;;ACff,IAAIC,oBAAmB;AA4BvB,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,SAAS,YACrB,QAAQ,MAAM,QAAQ,KAAK,KAAK,SAASA;AAC7C;AAEA,IAAO,mBAAQ;;;ACNf,SAAS,YAAY,OAAO;AAC1B,SAAO,SAAS,QAAQ,iBAAS,MAAM,MAAM,KAAK,CAAC,mBAAW,KAAK;AACrE;AAEA,IAAO,sBAAQ;;;ACjBf,SAAS,eAAe,OAAO,OAAO,QAAQ;AAC5C,MAAI,CAAC,iBAAS,MAAM,GAAG;AACrB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,OAAO;AAClB,MAAI,QAAQ,WACH,oBAAY,MAAM,KAAK,gBAAQ,OAAO,OAAO,MAAM,IACnD,QAAQ,YAAY,SAAS,QAChC;AACJ,WAAO,WAAG,OAAO,KAAK,GAAG,KAAK;AAAA,EAChC;AACA,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACnBf,SAAS,eAAe,UAAU;AAChC,SAAO,iBAAS,SAAS,QAAQ,SAAS;AACxC,QAAI,QAAQ,IACR,SAAS,QAAQ,QACjB,aAAa,SAAS,IAAI,QAAQ,SAAS,CAAC,IAAI,QAChD,QAAQ,SAAS,IAAI,QAAQ,CAAC,IAAI;AAEtC,iBAAc,SAAS,SAAS,KAAK,OAAO,cAAc,cACrD,UAAU,cACX;AAEJ,QAAI,SAAS,uBAAe,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,KAAK,GAAG;AAC1D,mBAAa,SAAS,IAAI,SAAY;AACtC,eAAS;AAAA,IACX;AACA,aAAS,OAAO,MAAM;AACtB,WAAO,EAAE,QAAQ,QAAQ;AACvB,UAAI,SAAS,QAAQ,KAAK;AAC1B,UAAI,QAAQ;AACV,iBAAS,QAAQ,QAAQ,OAAO,UAAU;AAAA,MAC5C;AAAA,IACF;AACA,WAAO;AAAA,EACT,CAAC;AACH;AAEA,IAAO,yBAAQ;;;ACnCf,IAAIC,eAAc,OAAO;AASzB,SAAS,YAAY,OAAO;AAC1B,MAAI,OAAO,SAAS,MAAM,aACtB,QAAS,OAAO,QAAQ,cAAc,KAAK,aAAcA;AAE7D,SAAO,UAAU;AACnB;AAEA,IAAO,sBAAQ;;;ACRf,SAAS,UAAU,GAAG,UAAU;AAC9B,MAAI,QAAQ,IACR,SAAS,MAAM,CAAC;AAEpB,SAAO,EAAE,QAAQ,GAAG;AAClB,WAAO,KAAK,IAAI,SAAS,KAAK;AAAA,EAChC;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACff,IAAI,UAAU;AASd,SAAS,gBAAgB,OAAO;AAC9B,SAAO,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAK;AACrD;AAEA,IAAO,0BAAQ;;;ACbf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAGjC,IAAI,uBAAuBA,aAAY;AAoBvC,IAAI,cAAc,wBAAgB,WAAW;AAAE,SAAO;AAAW,EAAE,CAAC,IAAI,0BAAkB,SAAS,OAAO;AACxG,SAAO,qBAAa,KAAK,KAAKC,gBAAe,KAAK,OAAO,QAAQ,KAC/D,CAAC,qBAAqB,KAAK,OAAO,QAAQ;AAC9C;AAEA,IAAO,sBAAQ;;;ACtBf,SAAS,YAAY;AACnB,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACbf,IAAI,cAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,IAAI,aAAa,eAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,IAAI,gBAAgB,cAAc,WAAW,YAAY;AAGzD,IAAIC,UAAS,gBAAgB,aAAK,SAAS;AAG3C,IAAI,iBAAiBA,UAASA,QAAO,WAAW;AAmBhD,IAAI,WAAW,kBAAkB;AAEjC,IAAO,mBAAQ;;;AChCf,IAAIC,WAAU;AAAd,IACI,WAAW;AADf,IAEI,UAAU;AAFd,IAGI,UAAU;AAHd,IAII,WAAW;AAJf,IAKIC,WAAU;AALd,IAMI,SAAS;AANb,IAOI,YAAY;AAPhB,IAQI,YAAY;AARhB,IASI,YAAY;AAThB,IAUI,SAAS;AAVb,IAWI,YAAY;AAXhB,IAYI,aAAa;AAEjB,IAAI,iBAAiB;AAArB,IACI,cAAc;AADlB,IAEI,aAAa;AAFjB,IAGI,aAAa;AAHjB,IAII,UAAU;AAJd,IAKI,WAAW;AALf,IAMI,WAAW;AANf,IAOI,WAAW;AAPf,IAQI,kBAAkB;AARtB,IASI,YAAY;AAThB,IAUI,YAAY;AAGhB,IAAI,iBAAiB,CAAC;AACtB,eAAe,UAAU,IAAI,eAAe,UAAU,IACtD,eAAe,OAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,QAAQ,IAAI,eAAe,QAAQ,IAClD,eAAe,eAAe,IAAI,eAAe,SAAS,IAC1D,eAAe,SAAS,IAAI;AAC5B,eAAeD,QAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,cAAc,IAAI,eAAe,OAAO,IACvD,eAAe,WAAW,IAAI,eAAe,OAAO,IACpD,eAAe,QAAQ,IAAI,eAAeC,QAAO,IACjD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,SAAS,IAAI,eAAe,SAAS,IACpD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,UAAU,IAAI;AAS7B,SAAS,iBAAiB,OAAO;AAC/B,SAAO,qBAAa,KAAK,KACvB,iBAAS,MAAM,MAAM,KAAK,CAAC,CAAC,eAAe,mBAAW,KAAK,CAAC;AAChE;AAEA,IAAO,2BAAQ;;;ACpDf,SAAS,UAAU,MAAM;AACvB,SAAO,SAAS,OAAO;AACrB,WAAO,KAAK,KAAK;AAAA,EACnB;AACF;AAEA,IAAO,oBAAQ;;;ACVf,IAAIC,eAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,IAAIC,cAAaD,gBAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,IAAIE,iBAAgBD,eAAcA,YAAW,YAAYD;AAGzD,IAAI,cAAcE,kBAAiB,mBAAW;AAG9C,IAAI,WAAY,WAAW;AACzB,MAAI;AAEF,QAAI,QAAQD,eAAcA,YAAW,WAAWA,YAAW,QAAQ,MAAM,EAAE;AAE3E,QAAI,OAAO;AACT,aAAO;AAAA,IACT;AAGA,WAAO,eAAe,YAAY,WAAW,YAAY,QAAQ,MAAM;AAAA,EACzE,SAAS,GAAG;AAAA,EAAC;AACf,EAAE;AAEF,IAAO,mBAAQ;;;ACxBf,IAAI,mBAAmB,oBAAY,iBAAS;AAmB5C,IAAI,eAAe,mBAAmB,kBAAU,gBAAgB,IAAI;AAEpE,IAAO,uBAAQ;;;AClBf,IAAIE,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAUjC,SAAS,cAAc,OAAO,WAAW;AACvC,MAAI,QAAQ,gBAAQ,KAAK,GACrB,QAAQ,CAAC,SAAS,oBAAY,KAAK,GACnC,SAAS,CAAC,SAAS,CAAC,SAAS,iBAAS,KAAK,GAC3C,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,qBAAa,KAAK,GAC1D,cAAc,SAAS,SAAS,UAAU,QAC1C,SAAS,cAAc,kBAAU,MAAM,QAAQ,MAAM,IAAI,CAAC,GAC1D,SAAS,OAAO;AAEpB,WAAS,OAAO,OAAO;AACrB,SAAK,aAAaC,gBAAe,KAAK,OAAO,GAAG,MAC5C,EAAE;AAAA,KAEC,OAAO;AAAA,IAEN,WAAW,OAAO,YAAY,OAAO;AAAA,IAErC,WAAW,OAAO,YAAY,OAAO,gBAAgB,OAAO;AAAA,IAE7D,gBAAQ,KAAK,MAAM,KAClB;AACN,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,wBAAQ;;;ACxCf,SAAS,QAAQ,MAAM,WAAW;AAChC,SAAO,SAAS,KAAK;AACnB,WAAO,KAAK,UAAU,GAAG,CAAC;AAAA,EAC5B;AACF;AAEA,IAAO,kBAAQ;;;ACXf,IAAI,aAAa,gBAAQ,OAAO,MAAM,MAAM;AAE5C,IAAO,qBAAQ;;;ACDf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AASjC,SAAS,SAAS,QAAQ;AACxB,MAAI,CAAC,oBAAY,MAAM,GAAG;AACxB,WAAO,mBAAW,MAAM;AAAA,EAC1B;AACA,MAAI,SAAS,CAAC;AACd,WAAS,OAAO,OAAO,MAAM,GAAG;AAC9B,QAAIC,gBAAe,KAAK,QAAQ,GAAG,KAAK,OAAO,eAAe;AAC5D,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACGf,SAAS,KAAK,QAAQ;AACpB,SAAO,oBAAY,MAAM,IAAI,sBAAc,MAAM,IAAI,iBAAS,MAAM;AACtE;AAEA,IAAO,eAAQ;;;AC5Bf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAkCjC,IAAI,SAAS,uBAAe,SAAS,QAAQ,QAAQ;AACnD,MAAI,oBAAY,MAAM,KAAK,oBAAY,MAAM,GAAG;AAC9C,uBAAW,QAAQ,aAAK,MAAM,GAAG,MAAM;AACvC;AAAA,EACF;AACA,WAAS,OAAO,QAAQ;AACtB,QAAIC,gBAAe,KAAK,QAAQ,GAAG,GAAG;AACpC,0BAAY,QAAQ,KAAK,OAAO,GAAG,CAAC;AAAA,IACtC;AAAA,EACF;AACF,CAAC;AAED,IAAO,iBAAQ;;;AChDf,SAAS,aAAa,QAAQ;AAC5B,MAAI,SAAS,CAAC;AACd,MAAI,UAAU,MAAM;AAClB,aAAS,OAAO,OAAO,MAAM,GAAG;AAC9B,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACdf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,kBAAiBD,cAAY;AASjC,SAAS,WAAW,QAAQ;AAC1B,MAAI,CAAC,iBAAS,MAAM,GAAG;AACrB,WAAO,qBAAa,MAAM;AAAA,EAC5B;AACA,MAAI,UAAU,oBAAY,MAAM,GAC5B,SAAS,CAAC;AAEd,WAAS,OAAO,QAAQ;AACtB,QAAI,EAAE,OAAO,kBAAkB,WAAW,CAACC,gBAAe,KAAK,QAAQ,GAAG,KAAK;AAC7E,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACLf,SAAS,OAAO,QAAQ;AACtB,SAAO,oBAAY,MAAM,IAAI,sBAAc,QAAQ,IAAI,IAAI,mBAAW,MAAM;AAC9E;AAEA,IAAO,iBAAQ;;;AC3Bf,IAAI,eAAe;AAAnB,IACI,gBAAgB;AAUpB,SAAS,MAAM,OAAO,QAAQ;AAC5B,MAAI,gBAAQ,KAAK,GAAG;AAClB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,OAAO;AAClB,MAAI,QAAQ,YAAY,QAAQ,YAAY,QAAQ,aAChD,SAAS,QAAQ,iBAAS,KAAK,GAAG;AACpC,WAAO;AAAA,EACT;AACA,SAAO,cAAc,KAAK,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,KACzD,UAAU,QAAQ,SAAS,OAAO,MAAM;AAC7C;AAEA,IAAO,gBAAQ;;;ACzBf,IAAI,eAAe,kBAAU,QAAQ,QAAQ;AAE7C,IAAO,uBAAQ;;;ACIf,SAAS,YAAY;AACnB,OAAK,WAAW,uBAAe,qBAAa,IAAI,IAAI,CAAC;AACrD,OAAK,OAAO;AACd;AAEA,IAAO,oBAAQ;;;ACJf,SAAS,WAAW,KAAK;AACvB,MAAI,SAAS,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,SAAS,GAAG;AACtD,OAAK,QAAQ,SAAS,IAAI;AAC1B,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACbf,IAAI,iBAAiB;AAGrB,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,kBAAiBD,cAAY;AAWjC,SAAS,QAAQ,KAAK;AACpB,MAAI,OAAO,KAAK;AAChB,MAAI,sBAAc;AAChB,QAAI,SAAS,KAAK,GAAG;AACrB,WAAO,WAAW,iBAAiB,SAAY;AAAA,EACjD;AACA,SAAOC,gBAAe,KAAK,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI;AACtD;AAEA,IAAO,kBAAQ;;;AC1Bf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAWjC,SAAS,QAAQ,KAAK;AACpB,MAAI,OAAO,KAAK;AAChB,SAAO,uBAAgB,KAAK,GAAG,MAAM,SAAaC,iBAAe,KAAK,MAAM,GAAG;AACjF;AAEA,IAAO,kBAAQ;;;ACnBf,IAAIC,kBAAiB;AAYrB,SAAS,QAAQ,KAAK,OAAO;AAC3B,MAAI,OAAO,KAAK;AAChB,OAAK,QAAQ,KAAK,IAAI,GAAG,IAAI,IAAI;AACjC,OAAK,GAAG,IAAK,wBAAgB,UAAU,SAAaA,kBAAiB;AACrE,SAAO;AACT;AAEA,IAAO,kBAAQ;;;ACTf,SAAS,KAAK,SAAS;AACrB,MAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,OAAK,MAAM;AACX,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,QAAQ,KAAK;AACzB,SAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EAC7B;AACF;AAGA,KAAK,UAAU,QAAQ;AACvB,KAAK,UAAU,QAAQ,IAAI;AAC3B,KAAK,UAAU,MAAM;AACrB,KAAK,UAAU,MAAM;AACrB,KAAK,UAAU,MAAM;AAErB,IAAO,eAAQ;;;ACxBf,SAAS,iBAAiB;AACxB,OAAK,WAAW,CAAC;AACjB,OAAK,OAAO;AACd;AAEA,IAAO,yBAAQ;;;ACFf,SAAS,aAAa,OAAO,KAAK;AAChC,MAAI,SAAS,MAAM;AACnB,SAAO,UAAU;AACf,QAAI,WAAG,MAAM,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG;AAC7B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACjBf,IAAI,aAAa,MAAM;AAGvB,IAAI,SAAS,WAAW;AAWxB,SAAS,gBAAgB,KAAK;AAC5B,MAAI,OAAO,KAAK,UACZ,QAAQ,qBAAa,MAAM,GAAG;AAElC,MAAI,QAAQ,GAAG;AACb,WAAO;AAAA,EACT;AACA,MAAI,YAAY,KAAK,SAAS;AAC9B,MAAI,SAAS,WAAW;AACtB,SAAK,IAAI;AAAA,EACX,OAAO;AACL,WAAO,KAAK,MAAM,OAAO,CAAC;AAAA,EAC5B;AACA,IAAE,KAAK;AACP,SAAO;AACT;AAEA,IAAO,0BAAQ;;;ACvBf,SAAS,aAAa,KAAK;AACzB,MAAI,OAAO,KAAK,UACZ,QAAQ,qBAAa,MAAM,GAAG;AAElC,SAAO,QAAQ,IAAI,SAAY,KAAK,KAAK,EAAE,CAAC;AAC9C;AAEA,IAAO,uBAAQ;;;ACPf,SAAS,aAAa,KAAK;AACzB,SAAO,qBAAa,KAAK,UAAU,GAAG,IAAI;AAC5C;AAEA,IAAO,uBAAQ;;;ACHf,SAAS,aAAa,KAAK,OAAO;AAChC,MAAI,OAAO,KAAK,UACZ,QAAQ,qBAAa,MAAM,GAAG;AAElC,MAAI,QAAQ,GAAG;AACb,MAAE,KAAK;AACP,SAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,EACxB,OAAO;AACL,SAAK,KAAK,EAAE,CAAC,IAAI;AAAA,EACnB;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACZf,SAAS,UAAU,SAAS;AAC1B,MAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,OAAK,MAAM;AACX,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,QAAQ,KAAK;AACzB,SAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EAC7B;AACF;AAGA,UAAU,UAAU,QAAQ;AAC5B,UAAU,UAAU,QAAQ,IAAI;AAChC,UAAU,UAAU,MAAM;AAC1B,UAAU,UAAU,MAAM;AAC1B,UAAU,UAAU,MAAM;AAE1B,IAAO,oBAAQ;;;AC3Bf,IAAIC,OAAM,kBAAU,cAAM,KAAK;AAE/B,IAAO,cAAQA;;;ACKf,SAAS,gBAAgB;AACvB,OAAK,OAAO;AACZ,OAAK,WAAW;AAAA,IACd,QAAQ,IAAI;AAAA,IACZ,OAAO,KAAK,eAAO;AAAA,IACnB,UAAU,IAAI;AAAA,EAChB;AACF;AAEA,IAAO,wBAAQ;;;ACbf,SAAS,UAAU,OAAO;AACxB,MAAI,OAAO,OAAO;AAClB,SAAQ,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YACvE,UAAU,cACV,UAAU;AACjB;AAEA,IAAO,oBAAQ;;;ACJf,SAAS,WAAWC,MAAK,KAAK;AAC5B,MAAI,OAAOA,KAAI;AACf,SAAO,kBAAU,GAAG,IAChB,KAAK,OAAO,OAAO,WAAW,WAAW,MAAM,IAC/C,KAAK;AACX;AAEA,IAAO,qBAAQ;;;ACNf,SAAS,eAAe,KAAK;AAC3B,MAAI,SAAS,mBAAW,MAAM,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,OAAK,QAAQ,SAAS,IAAI;AAC1B,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACNf,SAAS,YAAY,KAAK;AACxB,SAAO,mBAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AACtC;AAEA,IAAO,sBAAQ;;;ACJf,SAAS,YAAY,KAAK;AACxB,SAAO,mBAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AACtC;AAEA,IAAO,sBAAQ;;;ACHf,SAAS,YAAY,KAAK,OAAO;AAC/B,MAAI,OAAO,mBAAW,MAAM,GAAG,GAC3B,OAAO,KAAK;AAEhB,OAAK,IAAI,KAAK,KAAK;AACnB,OAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI;AACrC,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACRf,SAAS,SAAS,SAAS;AACzB,MAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,OAAK,MAAM;AACX,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,QAAQ,KAAK;AACzB,SAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EAC7B;AACF;AAGA,SAAS,UAAU,QAAQ;AAC3B,SAAS,UAAU,QAAQ,IAAI;AAC/B,SAAS,UAAU,MAAM;AACzB,SAAS,UAAU,MAAM;AACzB,SAAS,UAAU,MAAM;AAEzB,IAAO,mBAAQ;;;AC5Bf,IAAI,kBAAkB;AA8CtB,SAAS,QAAQ,MAAM,UAAU;AAC/B,MAAI,OAAO,QAAQ,cAAe,YAAY,QAAQ,OAAO,YAAY,YAAa;AACpF,UAAM,IAAI,UAAU,eAAe;AAAA,EACrC;AACA,MAAI,WAAW,WAAW;AACxB,QAAI,OAAO,WACP,MAAM,WAAW,SAAS,MAAM,MAAM,IAAI,IAAI,KAAK,CAAC,GACpD,QAAQ,SAAS;AAErB,QAAI,MAAM,IAAI,GAAG,GAAG;AAClB,aAAO,MAAM,IAAI,GAAG;AAAA,IACtB;AACA,QAAI,SAAS,KAAK,MAAM,MAAM,IAAI;AAClC,aAAS,QAAQ,MAAM,IAAI,KAAK,MAAM,KAAK;AAC3C,WAAO;AAAA,EACT;AACA,WAAS,QAAQ,KAAK,QAAQ,SAAS;AACvC,SAAO;AACT;AAGA,QAAQ,QAAQ;AAEhB,IAAO,kBAAQ;;;ACrEf,IAAI,mBAAmB;AAUvB,SAAS,cAAc,MAAM;AAC3B,MAAI,SAAS,gBAAQ,MAAM,SAAS,KAAK;AACvC,QAAI,MAAM,SAAS,kBAAkB;AACnC,YAAM,MAAM;AAAA,IACd;AACA,WAAO;AAAA,EACT,CAAC;AAED,MAAI,QAAQ,OAAO;AACnB,SAAO;AACT;AAEA,IAAO,wBAAQ;;;ACtBf,IAAI,aAAa;AAGjB,IAAI,eAAe;AASnB,IAAI,eAAe,sBAAc,SAAS,QAAQ;AAChD,MAAI,SAAS,CAAC;AACd,MAAI,OAAO,WAAW,CAAC,MAAM,IAAY;AACvC,WAAO,KAAK,EAAE;AAAA,EAChB;AACA,SAAO,QAAQ,YAAY,SAAS,OAAO,QAAQ,OAAO,WAAW;AACnE,WAAO,KAAK,QAAQ,UAAU,QAAQ,cAAc,IAAI,IAAK,UAAU,KAAM;AAAA,EAC/E,CAAC;AACD,SAAO;AACT,CAAC;AAED,IAAO,uBAAQ;;;ACHf,SAAS,SAAS,OAAO;AACvB,SAAO,SAAS,OAAO,KAAK,qBAAa,KAAK;AAChD;AAEA,IAAO,mBAAQ;;;ACdf,SAAS,SAAS,OAAO,QAAQ;AAC/B,MAAI,gBAAQ,KAAK,GAAG;AAClB,WAAO;AAAA,EACT;AACA,SAAO,cAAM,OAAO,MAAM,IAAI,CAAC,KAAK,IAAI,qBAAa,iBAAS,KAAK,CAAC;AACtE;AAEA,IAAO,mBAAQ;;;ACjBf,IAAIC,YAAW,IAAI;AASnB,SAAS,MAAM,OAAO;AACpB,MAAI,OAAO,SAAS,YAAY,iBAAS,KAAK,GAAG;AAC/C,WAAO;AAAA,EACT;AACA,MAAI,SAAU,QAAQ;AACtB,SAAQ,UAAU,OAAQ,IAAI,SAAU,CAACA,YAAY,OAAO;AAC9D;AAEA,IAAO,gBAAQ;;;ACTf,SAAS,QAAQ,QAAQ,MAAM;AAC7B,SAAO,iBAAS,MAAM,MAAM;AAE5B,MAAI,QAAQ,GACR,SAAS,KAAK;AAElB,SAAO,UAAU,QAAQ,QAAQ,QAAQ;AACvC,aAAS,OAAO,cAAM,KAAK,OAAO,CAAC,CAAC;AAAA,EACtC;AACA,SAAQ,SAAS,SAAS,SAAU,SAAS;AAC/C;AAEA,IAAO,kBAAQ;;;ACIf,SAAS,IAAI,QAAQ,MAAM,cAAc;AACvC,MAAI,SAAS,UAAU,OAAO,SAAY,gBAAQ,QAAQ,IAAI;AAC9D,SAAO,WAAW,SAAY,eAAe;AAC/C;AAEA,IAAO,cAAQ;;;ACxBf,SAAS,UAAU,OAAOC,SAAQ;AAChC,MAAI,QAAQ,IACR,SAASA,QAAO,QAChB,SAAS,MAAM;AAEnB,SAAO,EAAE,QAAQ,QAAQ;AACvB,UAAM,SAAS,KAAK,IAAIA,QAAO,KAAK;AAAA,EACtC;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACdf,IAAI,mBAAmB,iBAAS,eAAO,qBAAqB;AAS5D,SAAS,cAAc,OAAO;AAC5B,SAAO,gBAAQ,KAAK,KAAK,oBAAY,KAAK,KACxC,CAAC,EAAE,oBAAoB,SAAS,MAAM,gBAAgB;AAC1D;AAEA,IAAO,wBAAQ;;;ACLf,SAAS,YAAY,OAAO,OAAO,WAAW,UAAU,QAAQ;AAC9D,MAAI,QAAQ,IACR,SAAS,MAAM;AAEnB,gBAAc,YAAY;AAC1B,aAAW,SAAS,CAAC;AAErB,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,MAAM,KAAK;AACvB,QAAI,QAAQ,KAAK,UAAU,KAAK,GAAG;AACjC,UAAI,QAAQ,GAAG;AAEb,oBAAY,OAAO,QAAQ,GAAG,WAAW,UAAU,MAAM;AAAA,MAC3D,OAAO;AACL,0BAAU,QAAQ,KAAK;AAAA,MACzB;AAAA,IACF,WAAW,CAAC,UAAU;AACpB,aAAO,OAAO,MAAM,IAAI;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACrBf,SAAS,QAAQ,OAAO;AACtB,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,SAAO,SAAS,oBAAY,OAAO,CAAC,IAAI,CAAC;AAC3C;AAEA,IAAO,kBAAQ;;;AClBf,IAAI,eAAe,gBAAQ,OAAO,gBAAgB,MAAM;AAExD,IAAO,uBAAQ;;;ACIf,SAAS,UAAU,OAAO,OAAO,KAAK;AACpC,MAAI,QAAQ,IACR,SAAS,MAAM;AAEnB,MAAI,QAAQ,GAAG;AACb,YAAQ,CAAC,QAAQ,SAAS,IAAK,SAAS;AAAA,EAC1C;AACA,QAAM,MAAM,SAAS,SAAS;AAC9B,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AACA,WAAS,QAAQ,MAAM,IAAM,MAAM,UAAW;AAC9C,aAAW;AAEX,MAAI,SAAS,MAAM,MAAM;AACzB,SAAO,EAAE,QAAQ,QAAQ;AACvB,WAAO,KAAK,IAAI,MAAM,QAAQ,KAAK;AAAA,EACrC;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AClBf,SAAS,YAAY,OAAO,UAAU,aAAa,WAAW;AAC5D,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,MAAI,aAAa,QAAQ;AACvB,kBAAc,MAAM,EAAE,KAAK;AAAA,EAC7B;AACA,SAAO,EAAE,QAAQ,QAAQ;AACvB,kBAAc,SAAS,aAAa,MAAM,KAAK,GAAG,OAAO,KAAK;AAAA,EAChE;AACA,SAAO;AACT;AAEA,IAAO,sBAAQ;;;AChBf,SAAS,aAAa;AACpB,OAAK,WAAW,IAAI;AACpB,OAAK,OAAO;AACd;AAEA,IAAO,qBAAQ;;;ACLf,SAAS,YAAY,KAAK;AACxB,MAAI,OAAO,KAAK,UACZ,SAAS,KAAK,QAAQ,EAAE,GAAG;AAE/B,OAAK,OAAO,KAAK;AACjB,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACRf,SAAS,SAAS,KAAK;AACrB,SAAO,KAAK,SAAS,IAAI,GAAG;AAC9B;AAEA,IAAO,mBAAQ;;;ACJf,SAAS,SAAS,KAAK;AACrB,SAAO,KAAK,SAAS,IAAI,GAAG;AAC9B;AAEA,IAAO,mBAAQ;;;ACRf,IAAI,mBAAmB;AAYvB,SAAS,SAAS,KAAK,OAAO;AAC5B,MAAI,OAAO,KAAK;AAChB,MAAI,gBAAgB,mBAAW;AAC7B,QAAI,QAAQ,KAAK;AACjB,QAAI,CAAC,eAAQ,MAAM,SAAS,mBAAmB,GAAI;AACjD,YAAM,KAAK,CAAC,KAAK,KAAK,CAAC;AACvB,WAAK,OAAO,EAAE,KAAK;AACnB,aAAO;AAAA,IACT;AACA,WAAO,KAAK,WAAW,IAAI,iBAAS,KAAK;AAAA,EAC3C;AACA,OAAK,IAAI,KAAK,KAAK;AACnB,OAAK,OAAO,KAAK;AACjB,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACnBf,SAAS,MAAM,SAAS;AACtB,MAAI,OAAO,KAAK,WAAW,IAAI,kBAAU,OAAO;AAChD,OAAK,OAAO,KAAK;AACnB;AAGA,MAAM,UAAU,QAAQ;AACxB,MAAM,UAAU,QAAQ,IAAI;AAC5B,MAAM,UAAU,MAAM;AACtB,MAAM,UAAU,MAAM;AACtB,MAAM,UAAU,MAAM;AAEtB,IAAO,gBAAQ;;;ACdf,SAAS,WAAW,QAAQ,QAAQ;AAClC,SAAO,UAAU,mBAAW,QAAQ,aAAK,MAAM,GAAG,MAAM;AAC1D;AAEA,IAAO,qBAAQ;;;ACJf,SAAS,aAAa,QAAQ,QAAQ;AACpC,SAAO,UAAU,mBAAW,QAAQ,eAAO,MAAM,GAAG,MAAM;AAC5D;AAEA,IAAO,uBAAQ;;;ACbf,IAAIC,eAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,IAAIC,cAAaD,gBAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,IAAIE,iBAAgBD,eAAcA,YAAW,YAAYD;AAGzD,IAAIG,UAASD,iBAAgB,aAAK,SAAS;AAA3C,IACI,cAAcC,UAASA,QAAO,cAAc;AAUhD,SAAS,YAAY,QAAQ,QAAQ;AACnC,MAAI,QAAQ;AACV,WAAO,OAAO,MAAM;AAAA,EACtB;AACA,MAAI,SAAS,OAAO,QAChB,SAAS,cAAc,YAAY,MAAM,IAAI,IAAI,OAAO,YAAY,MAAM;AAE9E,SAAO,KAAK,MAAM;AAClB,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACzBf,SAAS,YAAY,OAAO,WAAW;AACrC,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM,QACnC,WAAW,GACX,SAAS,CAAC;AAEd,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,MAAM,KAAK;AACvB,QAAI,UAAU,OAAO,OAAO,KAAK,GAAG;AAClC,aAAO,UAAU,IAAI;AAAA,IACvB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACNf,SAAS,YAAY;AACnB,SAAO,CAAC;AACV;AAEA,IAAO,oBAAQ;;;AClBf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,wBAAuBD,cAAY;AAGvC,IAAI,mBAAmB,OAAO;AAS9B,IAAI,aAAa,CAAC,mBAAmB,oBAAY,SAAS,QAAQ;AAChE,MAAI,UAAU,MAAM;AAClB,WAAO,CAAC;AAAA,EACV;AACA,WAAS,OAAO,MAAM;AACtB,SAAO,oBAAY,iBAAiB,MAAM,GAAG,SAAS,QAAQ;AAC5D,WAAOC,sBAAqB,KAAK,QAAQ,MAAM;AAAA,EACjD,CAAC;AACH;AAEA,IAAO,qBAAQ;;;AClBf,SAAS,YAAY,QAAQ,QAAQ;AACnC,SAAO,mBAAW,QAAQ,mBAAW,MAAM,GAAG,MAAM;AACtD;AAEA,IAAO,sBAAQ;;;ACTf,IAAIC,oBAAmB,OAAO;AAS9B,IAAI,eAAe,CAACA,oBAAmB,oBAAY,SAAS,QAAQ;AAClE,MAAI,SAAS,CAAC;AACd,SAAO,QAAQ;AACb,sBAAU,QAAQ,mBAAW,MAAM,CAAC;AACpC,aAAS,qBAAa,MAAM;AAAA,EAC9B;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACbf,SAAS,cAAc,QAAQ,QAAQ;AACrC,SAAO,mBAAW,QAAQ,qBAAa,MAAM,GAAG,MAAM;AACxD;AAEA,IAAO,wBAAQ;;;ACDf,SAAS,eAAe,QAAQ,UAAU,aAAa;AACrD,MAAI,SAAS,SAAS,MAAM;AAC5B,SAAO,gBAAQ,MAAM,IAAI,SAAS,kBAAU,QAAQ,YAAY,MAAM,CAAC;AACzE;AAEA,IAAO,yBAAQ;;;ACRf,SAAS,WAAW,QAAQ;AAC1B,SAAO,uBAAe,QAAQ,cAAM,kBAAU;AAChD;AAEA,IAAO,qBAAQ;;;ACHf,SAAS,aAAa,QAAQ;AAC5B,SAAO,uBAAe,QAAQ,gBAAQ,oBAAY;AACpD;AAEA,IAAO,uBAAQ;;;ACZf,IAAI,WAAW,kBAAU,cAAM,UAAU;AAEzC,IAAO,mBAAQ;;;ACFf,IAAIC,WAAU,kBAAU,cAAM,SAAS;AAEvC,IAAO,kBAAQA;;;ACFf,IAAI,MAAM,kBAAU,cAAM,KAAK;AAE/B,IAAO,cAAQ;;;ACGf,IAAIC,UAAS;AAAb,IACIC,aAAY;AADhB,IAEI,aAAa;AAFjB,IAGIC,UAAS;AAHb,IAIIC,cAAa;AAEjB,IAAIC,eAAc;AAGlB,IAAI,qBAAqB,iBAAS,gBAAQ;AAA1C,IACI,gBAAgB,iBAAS,WAAG;AADhC,IAEI,oBAAoB,iBAAS,eAAO;AAFxC,IAGI,gBAAgB,iBAAS,WAAG;AAHhC,IAII,oBAAoB,iBAAS,eAAO;AASxC,IAAI,SAAS;AAGb,IAAK,oBAAY,OAAO,IAAI,iBAAS,IAAI,YAAY,CAAC,CAAC,CAAC,KAAKA,gBACxD,eAAO,OAAO,IAAI,aAAG,KAAKJ,WAC1B,mBAAW,OAAO,gBAAQ,QAAQ,CAAC,KAAK,cACxC,eAAO,OAAO,IAAI,aAAG,KAAKE,WAC1B,mBAAW,OAAO,IAAI,iBAAO,KAAKC,aAAa;AAClD,WAAS,SAAS,OAAO;AACvB,QAAI,SAAS,mBAAW,KAAK,GACzB,OAAO,UAAUF,aAAY,MAAM,cAAc,QACjD,aAAa,OAAO,iBAAS,IAAI,IAAI;AAEzC,QAAI,YAAY;AACd,cAAQ,YAAY;AAAA,QAClB,KAAK;AAAoB,iBAAOG;AAAA,QAChC,KAAK;AAAe,iBAAOJ;AAAA,QAC3B,KAAK;AAAmB,iBAAO;AAAA,QAC/B,KAAK;AAAe,iBAAOE;AAAA,QAC3B,KAAK;AAAmB,iBAAOC;AAAA,MACjC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEA,IAAO,iBAAQ;;;ACxDf,IAAIE,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AASjC,SAAS,eAAe,OAAO;AAC7B,MAAI,SAAS,MAAM,QACf,SAAS,IAAI,MAAM,YAAY,MAAM;AAGzC,MAAI,UAAU,OAAO,MAAM,CAAC,KAAK,YAAYC,iBAAe,KAAK,OAAO,OAAO,GAAG;AAChF,WAAO,QAAQ,MAAM;AACrB,WAAO,QAAQ,MAAM;AAAA,EACvB;AACA,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACtBf,IAAIC,cAAa,aAAK;AAEtB,IAAO,qBAAQA;;;ACIf,SAAS,iBAAiB,aAAa;AACrC,MAAI,SAAS,IAAI,YAAY,YAAY,YAAY,UAAU;AAC/D,MAAI,mBAAW,MAAM,EAAE,IAAI,IAAI,mBAAW,WAAW,CAAC;AACtD,SAAO;AACT;AAEA,IAAO,2BAAQ;;;ACLf,SAAS,cAAc,UAAU,QAAQ;AACvC,MAAI,SAAS,SAAS,yBAAiB,SAAS,MAAM,IAAI,SAAS;AACnE,SAAO,IAAI,SAAS,YAAY,QAAQ,SAAS,YAAY,SAAS,UAAU;AAClF;AAEA,IAAO,wBAAQ;;;ACdf,IAAI,UAAU;AASd,SAAS,YAAY,QAAQ;AAC3B,MAAI,SAAS,IAAI,OAAO,YAAY,OAAO,QAAQ,QAAQ,KAAK,MAAM,CAAC;AACvE,SAAO,YAAY,OAAO;AAC1B,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACbf,IAAIC,eAAc,iBAAS,eAAO,YAAY;AAA9C,IACI,gBAAgBA,eAAcA,aAAY,UAAU;AASxD,SAAS,YAAY,QAAQ;AAC3B,SAAO,gBAAgB,OAAO,cAAc,KAAK,MAAM,CAAC,IAAI,CAAC;AAC/D;AAEA,IAAO,sBAAQ;;;ACPf,SAAS,gBAAgB,YAAY,QAAQ;AAC3C,MAAI,SAAS,SAAS,yBAAiB,WAAW,MAAM,IAAI,WAAW;AACvE,SAAO,IAAI,WAAW,YAAY,QAAQ,WAAW,YAAY,WAAW,MAAM;AACpF;AAEA,IAAO,0BAAQ;;;ACRf,IAAIC,WAAU;AAAd,IACIC,WAAU;AADd,IAEIC,UAAS;AAFb,IAGIC,aAAY;AAHhB,IAIIC,aAAY;AAJhB,IAKIC,UAAS;AALb,IAMIC,aAAY;AANhB,IAOIC,aAAY;AAEhB,IAAIC,kBAAiB;AAArB,IACIC,eAAc;AADlB,IAEIC,cAAa;AAFjB,IAGIC,cAAa;AAHjB,IAIIC,WAAU;AAJd,IAKIC,YAAW;AALf,IAMIC,YAAW;AANf,IAOIC,YAAW;AAPf,IAQIC,mBAAkB;AARtB,IASIC,aAAY;AAThB,IAUIC,aAAY;AAchB,SAAS,eAAe,QAAQ,KAAK,QAAQ;AAC3C,MAAI,OAAO,OAAO;AAClB,UAAQ,KAAK;AAAA,IACX,KAAKV;AACH,aAAO,yBAAiB,MAAM;AAAA,IAEhC,KAAKR;AAAA,IACL,KAAKC;AACH,aAAO,IAAI,KAAK,CAAC,MAAM;AAAA,IAEzB,KAAKQ;AACH,aAAO,sBAAc,QAAQ,MAAM;AAAA,IAErC,KAAKC;AAAA,IAAY,KAAKC;AAAA,IACtB,KAAKC;AAAA,IAAS,KAAKC;AAAA,IAAU,KAAKC;AAAA,IAClC,KAAKC;AAAA,IAAU,KAAKC;AAAA,IAAiB,KAAKC;AAAA,IAAW,KAAKC;AACxD,aAAO,wBAAgB,QAAQ,MAAM;AAAA,IAEvC,KAAKhB;AACH,aAAO,IAAI;AAAA,IAEb,KAAKC;AAAA,IACL,KAAKG;AACH,aAAO,IAAI,KAAK,MAAM;AAAA,IAExB,KAAKF;AACH,aAAO,oBAAY,MAAM;AAAA,IAE3B,KAAKC;AACH,aAAO,IAAI;AAAA,IAEb,KAAKE;AACH,aAAO,oBAAY,MAAM;AAAA,EAC7B;AACF;AAEA,IAAO,yBAAQ;;;ACjEf,SAAS,gBAAgB,QAAQ;AAC/B,SAAQ,OAAO,OAAO,eAAe,cAAc,CAAC,oBAAY,MAAM,IAClE,mBAAW,qBAAa,MAAM,CAAC,IAC/B,CAAC;AACP;AAEA,IAAO,0BAAQ;;;ACbf,IAAIY,UAAS;AASb,SAAS,UAAU,OAAO;AACxB,SAAO,qBAAa,KAAK,KAAK,eAAO,KAAK,KAAKA;AACjD;AAEA,IAAO,oBAAQ;;;ACZf,IAAI,YAAY,oBAAY,iBAAS;AAmBrC,IAAI,QAAQ,YAAY,kBAAU,SAAS,IAAI;AAE/C,IAAO,gBAAQ;;;ACtBf,IAAIC,UAAS;AASb,SAAS,UAAU,OAAO;AACxB,SAAO,qBAAa,KAAK,KAAK,eAAO,KAAK,KAAKA;AACjD;AAEA,IAAO,oBAAQ;;;ACZf,IAAI,YAAY,oBAAY,iBAAS;AAmBrC,IAAI,QAAQ,YAAY,kBAAU,SAAS,IAAI;AAE/C,IAAO,gBAAQ;;;ACFf,IAAI,kBAAkB;AAAtB,IACI,kBAAkB;AADtB,IAEI,qBAAqB;AAGzB,IAAIC,WAAU;AAAd,IACIC,YAAW;AADf,IAEIC,WAAU;AAFd,IAGIC,WAAU;AAHd,IAIIC,YAAW;AAJf,IAKIC,WAAU;AALd,IAMIC,UAAS;AANb,IAOIC,UAAS;AAPb,IAQIC,aAAY;AARhB,IASIC,aAAY;AAThB,IAUIC,aAAY;AAVhB,IAWIC,UAAS;AAXb,IAYIC,aAAY;AAZhB,IAaIC,aAAY;AAbhB,IAcIC,cAAa;AAEjB,IAAIC,kBAAiB;AAArB,IACIC,eAAc;AADlB,IAEIC,cAAa;AAFjB,IAGIC,cAAa;AAHjB,IAIIC,WAAU;AAJd,IAKIC,YAAW;AALf,IAMIC,YAAW;AANf,IAOIC,YAAW;AAPf,IAQIC,mBAAkB;AARtB,IASIC,aAAY;AAThB,IAUIC,aAAY;AAGhB,IAAI,gBAAgB,CAAC;AACrB,cAAczB,QAAO,IAAI,cAAcC,SAAQ,IAC/C,cAAcc,eAAc,IAAI,cAAcC,YAAW,IACzD,cAAcd,QAAO,IAAI,cAAcC,QAAO,IAC9C,cAAcc,WAAU,IAAI,cAAcC,WAAU,IACpD,cAAcC,QAAO,IAAI,cAAcC,SAAQ,IAC/C,cAAcC,SAAQ,IAAI,cAAcd,OAAM,IAC9C,cAAcC,UAAS,IAAI,cAAcC,UAAS,IAClD,cAAcC,UAAS,IAAI,cAAcC,OAAM,IAC/C,cAAcC,UAAS,IAAI,cAAcC,UAAS,IAClD,cAAcS,SAAQ,IAAI,cAAcC,gBAAe,IACvD,cAAcC,UAAS,IAAI,cAAcC,UAAS,IAAI;AACtD,cAAcrB,SAAQ,IAAI,cAAcC,QAAO,IAC/C,cAAcS,WAAU,IAAI;AAkB5B,SAAS,UAAU,OAAO,SAAS,YAAY,KAAK,QAAQ,OAAO;AACjE,MAAI,QACA,SAAS,UAAU,iBACnB,SAAS,UAAU,iBACnB,SAAS,UAAU;AAEvB,MAAI,YAAY;AACd,aAAS,SAAS,WAAW,OAAO,KAAK,QAAQ,KAAK,IAAI,WAAW,KAAK;AAAA,EAC5E;AACA,MAAI,WAAW,QAAW;AACxB,WAAO;AAAA,EACT;AACA,MAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,gBAAQ,KAAK;AACzB,MAAI,OAAO;AACT,aAAS,uBAAe,KAAK;AAC7B,QAAI,CAAC,QAAQ;AACX,aAAO,kBAAU,OAAO,MAAM;AAAA,IAChC;AAAA,EACF,OAAO;AACL,QAAI,MAAM,eAAO,KAAK,GAClB,SAAS,OAAOT,YAAW,OAAOC;AAEtC,QAAI,iBAAS,KAAK,GAAG;AACnB,aAAO,oBAAY,OAAO,MAAM;AAAA,IAClC;AACA,QAAI,OAAOG,cAAa,OAAOT,YAAY,UAAU,CAAC,QAAS;AAC7D,eAAU,UAAU,SAAU,CAAC,IAAI,wBAAgB,KAAK;AACxD,UAAI,CAAC,QAAQ;AACX,eAAO,SACH,sBAAc,OAAO,qBAAa,QAAQ,KAAK,CAAC,IAChD,oBAAY,OAAO,mBAAW,QAAQ,KAAK,CAAC;AAAA,MAClD;AAAA,IACF,OAAO;AACL,UAAI,CAAC,cAAc,GAAG,GAAG;AACvB,eAAO,SAAS,QAAQ,CAAC;AAAA,MAC3B;AACA,eAAS,uBAAe,OAAO,KAAK,MAAM;AAAA,IAC5C;AAAA,EACF;AAEA,YAAU,QAAQ,IAAI;AACtB,MAAI,UAAU,MAAM,IAAI,KAAK;AAC7B,MAAI,SAAS;AACX,WAAO;AAAA,EACT;AACA,QAAM,IAAI,OAAO,MAAM;AAEvB,MAAI,cAAM,KAAK,GAAG;AAChB,UAAM,QAAQ,SAAS,UAAU;AAC/B,aAAO,IAAI,UAAU,UAAU,SAAS,YAAY,UAAU,OAAO,KAAK,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH,WAAW,cAAM,KAAK,GAAG;AACvB,UAAM,QAAQ,SAAS,UAAU0B,MAAK;AACpC,aAAO,IAAIA,MAAK,UAAU,UAAU,SAAS,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH;AAEA,MAAI,WAAW,SACV,SAAS,uBAAe,qBACxB,SAAS,iBAAS;AAEvB,MAAI,QAAQ,QAAQ,SAAY,SAAS,KAAK;AAC9C,oBAAU,SAAS,OAAO,SAAS,UAAUA,MAAK;AAChD,QAAI,OAAO;AACT,MAAAA,OAAM;AACN,iBAAW,MAAMA,IAAG;AAAA,IACtB;AAEA,wBAAY,QAAQA,MAAK,UAAU,UAAU,SAAS,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,EACtF,CAAC;AACD,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AClKf,IAAIC,sBAAqB;AA4BzB,SAAS,MAAM,OAAO;AACpB,SAAO,kBAAU,OAAOA,mBAAkB;AAC5C;AAEA,IAAO,gBAAQ;;;ACpBf,SAAS,QAAQ,OAAO;AACtB,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM,QACnC,WAAW,GACX,SAAS,CAAC;AAEd,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,MAAM,KAAK;AACvB,QAAI,OAAO;AACT,aAAO,UAAU,IAAI;AAAA,IACvB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,kBAAQ;;;AC7Bf,IAAIC,kBAAiB;AAYrB,SAAS,YAAY,OAAO;AAC1B,OAAK,SAAS,IAAI,OAAOA,eAAc;AACvC,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACTf,SAAS,YAAY,OAAO;AAC1B,SAAO,KAAK,SAAS,IAAI,KAAK;AAChC;AAEA,IAAO,sBAAQ;;;ACDf,SAAS,SAASC,SAAQ;AACxB,MAAI,QAAQ,IACR,SAASA,WAAU,OAAO,IAAIA,QAAO;AAEzC,OAAK,WAAW,IAAI;AACpB,SAAO,EAAE,QAAQ,QAAQ;AACvB,SAAK,IAAIA,QAAO,KAAK,CAAC;AAAA,EACxB;AACF;AAGA,SAAS,UAAU,MAAM,SAAS,UAAU,OAAO;AACnD,SAAS,UAAU,MAAM;AAEzB,IAAO,mBAAQ;;;AChBf,SAAS,UAAU,OAAO,WAAW;AACnC,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,UAAU,MAAM,KAAK,GAAG,OAAO,KAAK,GAAG;AACzC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACdf,SAAS,SAAS,OAAO,KAAK;AAC5B,SAAO,MAAM,IAAI,GAAG;AACtB;AAEA,IAAO,mBAAQ;;;ACPf,IAAI,uBAAuB;AAA3B,IACI,yBAAyB;AAe7B,SAAS,YAAY,OAAO,OAAO,SAAS,YAAY,WAAW,OAAO;AACxE,MAAI,YAAY,UAAU,sBACtB,YAAY,MAAM,QAClB,YAAY,MAAM;AAEtB,MAAI,aAAa,aAAa,EAAE,aAAa,YAAY,YAAY;AACnE,WAAO;AAAA,EACT;AAEA,MAAI,aAAa,MAAM,IAAI,KAAK;AAChC,MAAI,aAAa,MAAM,IAAI,KAAK;AAChC,MAAI,cAAc,YAAY;AAC5B,WAAO,cAAc,SAAS,cAAc;AAAA,EAC9C;AACA,MAAI,QAAQ,IACR,SAAS,MACT,OAAQ,UAAU,yBAA0B,IAAI,qBAAW;AAE/D,QAAM,IAAI,OAAO,KAAK;AACtB,QAAM,IAAI,OAAO,KAAK;AAGtB,SAAO,EAAE,QAAQ,WAAW;AAC1B,QAAI,WAAW,MAAM,KAAK,GACtB,WAAW,MAAM,KAAK;AAE1B,QAAI,YAAY;AACd,UAAI,WAAW,YACX,WAAW,UAAU,UAAU,OAAO,OAAO,OAAO,KAAK,IACzD,WAAW,UAAU,UAAU,OAAO,OAAO,OAAO,KAAK;AAAA,IAC/D;AACA,QAAI,aAAa,QAAW;AAC1B,UAAI,UAAU;AACZ;AAAA,MACF;AACA,eAAS;AACT;AAAA,IACF;AAEA,QAAI,MAAM;AACR,UAAI,CAAC,kBAAU,OAAO,SAASC,WAAU,UAAU;AAC7C,YAAI,CAAC,iBAAS,MAAM,QAAQ,MACvB,aAAaA,aAAY,UAAU,UAAUA,WAAU,SAAS,YAAY,KAAK,IAAI;AACxF,iBAAO,KAAK,KAAK,QAAQ;AAAA,QAC3B;AAAA,MACF,CAAC,GAAG;AACN,iBAAS;AACT;AAAA,MACF;AAAA,IACF,WAAW,EACL,aAAa,YACX,UAAU,UAAU,UAAU,SAAS,YAAY,KAAK,IACzD;AACL,eAAS;AACT;AAAA,IACF;AAAA,EACF;AACA,QAAM,QAAQ,EAAE,KAAK;AACrB,QAAM,QAAQ,EAAE,KAAK;AACrB,SAAO;AACT;AAEA,IAAO,sBAAQ;;;AC5Ef,SAAS,WAAWC,MAAK;AACvB,MAAI,QAAQ,IACR,SAAS,MAAMA,KAAI,IAAI;AAE3B,EAAAA,KAAI,QAAQ,SAAS,OAAO,KAAK;AAC/B,WAAO,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK;AAAA,EAC/B,CAAC;AACD,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACVf,SAAS,WAAW,KAAK;AACvB,MAAI,QAAQ,IACR,SAAS,MAAM,IAAI,IAAI;AAE3B,MAAI,QAAQ,SAAS,OAAO;AAC1B,WAAO,EAAE,KAAK,IAAI;AAAA,EACpB,CAAC;AACD,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACTf,IAAIC,wBAAuB;AAA3B,IACIC,0BAAyB;AAG7B,IAAIC,WAAU;AAAd,IACIC,WAAU;AADd,IAEIC,YAAW;AAFf,IAGIC,UAAS;AAHb,IAIIC,aAAY;AAJhB,IAKIC,aAAY;AALhB,IAMIC,UAAS;AANb,IAOIC,aAAY;AAPhB,IAQIC,aAAY;AAEhB,IAAIC,kBAAiB;AAArB,IACIC,eAAc;AAGlB,IAAIC,eAAc,iBAAS,eAAO,YAAY;AAA9C,IACIC,iBAAgBD,eAAcA,aAAY,UAAU;AAmBxD,SAAS,WAAW,QAAQ,OAAO,KAAK,SAAS,YAAY,WAAW,OAAO;AAC7E,UAAQ,KAAK;AAAA,IACX,KAAKD;AACH,UAAK,OAAO,cAAc,MAAM,cAC3B,OAAO,cAAc,MAAM,YAAa;AAC3C,eAAO;AAAA,MACT;AACA,eAAS,OAAO;AAChB,cAAQ,MAAM;AAAA,IAEhB,KAAKD;AACH,UAAK,OAAO,cAAc,MAAM,cAC5B,CAAC,UAAU,IAAI,mBAAW,MAAM,GAAG,IAAI,mBAAW,KAAK,CAAC,GAAG;AAC7D,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IAET,KAAKT;AAAA,IACL,KAAKC;AAAA,IACL,KAAKG;AAGH,aAAO,WAAG,CAAC,QAAQ,CAAC,KAAK;AAAA,IAE3B,KAAKF;AACH,aAAO,OAAO,QAAQ,MAAM,QAAQ,OAAO,WAAW,MAAM;AAAA,IAE9D,KAAKG;AAAA,IACL,KAAKE;AAIH,aAAO,UAAW,QAAQ;AAAA,IAE5B,KAAKJ;AACH,UAAI,UAAU;AAAA,IAEhB,KAAKG;AACH,UAAI,YAAY,UAAUR;AAC1B,kBAAY,UAAU;AAEtB,UAAI,OAAO,QAAQ,MAAM,QAAQ,CAAC,WAAW;AAC3C,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM,IAAI,MAAM;AAC9B,UAAI,SAAS;AACX,eAAO,WAAW;AAAA,MACpB;AACA,iBAAWC;AAGX,YAAM,IAAI,QAAQ,KAAK;AACvB,UAAI,SAAS,oBAAY,QAAQ,MAAM,GAAG,QAAQ,KAAK,GAAG,SAAS,YAAY,WAAW,KAAK;AAC/F,YAAM,QAAQ,EAAE,MAAM;AACtB,aAAO;AAAA,IAET,KAAKS;AACH,UAAII,gBAAe;AACjB,eAAOA,eAAc,KAAK,MAAM,KAAKA,eAAc,KAAK,KAAK;AAAA,MAC/D;AAAA,EACJ;AACA,SAAO;AACT;AAEA,IAAO,qBAAQ;;;AC5Gf,IAAIC,wBAAuB;AAG3B,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAejC,SAAS,aAAa,QAAQ,OAAO,SAAS,YAAY,WAAW,OAAO;AAC1E,MAAI,YAAY,UAAUD,uBACtB,WAAW,mBAAW,MAAM,GAC5B,YAAY,SAAS,QACrB,WAAW,mBAAW,KAAK,GAC3B,YAAY,SAAS;AAEzB,MAAI,aAAa,aAAa,CAAC,WAAW;AACxC,WAAO;AAAA,EACT;AACA,MAAI,QAAQ;AACZ,SAAO,SAAS;AACd,QAAI,MAAM,SAAS,KAAK;AACxB,QAAI,EAAE,YAAY,OAAO,QAAQE,iBAAe,KAAK,OAAO,GAAG,IAAI;AACjE,aAAO;AAAA,IACT;AAAA,EACF;AAEA,MAAI,aAAa,MAAM,IAAI,MAAM;AACjC,MAAI,aAAa,MAAM,IAAI,KAAK;AAChC,MAAI,cAAc,YAAY;AAC5B,WAAO,cAAc,SAAS,cAAc;AAAA,EAC9C;AACA,MAAI,SAAS;AACb,QAAM,IAAI,QAAQ,KAAK;AACvB,QAAM,IAAI,OAAO,MAAM;AAEvB,MAAI,WAAW;AACf,SAAO,EAAE,QAAQ,WAAW;AAC1B,UAAM,SAAS,KAAK;AACpB,QAAI,WAAW,OAAO,GAAG,GACrB,WAAW,MAAM,GAAG;AAExB,QAAI,YAAY;AACd,UAAI,WAAW,YACX,WAAW,UAAU,UAAU,KAAK,OAAO,QAAQ,KAAK,IACxD,WAAW,UAAU,UAAU,KAAK,QAAQ,OAAO,KAAK;AAAA,IAC9D;AAEA,QAAI,EAAE,aAAa,SACV,aAAa,YAAY,UAAU,UAAU,UAAU,SAAS,YAAY,KAAK,IAClF,WACD;AACL,eAAS;AACT;AAAA,IACF;AACA,iBAAa,WAAW,OAAO;AAAA,EACjC;AACA,MAAI,UAAU,CAAC,UAAU;AACvB,QAAI,UAAU,OAAO,aACjB,UAAU,MAAM;AAGpB,QAAI,WAAW,YACV,iBAAiB,UAAU,iBAAiB,UAC7C,EAAE,OAAO,WAAW,cAAc,mBAAmB,WACnD,OAAO,WAAW,cAAc,mBAAmB,UAAU;AACjE,eAAS;AAAA,IACX;AAAA,EACF;AACA,QAAM,QAAQ,EAAE,MAAM;AACtB,QAAM,QAAQ,EAAE,KAAK;AACrB,SAAO;AACT;AAEA,IAAO,uBAAQ;;;AC/Ef,IAAIC,wBAAuB;AAG3B,IAAIC,WAAU;AAAd,IACIC,YAAW;AADf,IAEIC,aAAY;AAGhB,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAgBjC,SAAS,gBAAgB,QAAQ,OAAO,SAAS,YAAY,WAAW,OAAO;AAC7E,MAAI,WAAW,gBAAQ,MAAM,GACzB,WAAW,gBAAQ,KAAK,GACxB,SAAS,WAAWF,YAAW,eAAO,MAAM,GAC5C,SAAS,WAAWA,YAAW,eAAO,KAAK;AAE/C,WAAS,UAAUD,WAAUE,aAAY;AACzC,WAAS,UAAUF,WAAUE,aAAY;AAEzC,MAAI,WAAW,UAAUA,YACrB,WAAW,UAAUA,YACrB,YAAY,UAAU;AAE1B,MAAI,aAAa,iBAAS,MAAM,GAAG;AACjC,QAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,aAAO;AAAA,IACT;AACA,eAAW;AACX,eAAW;AAAA,EACb;AACA,MAAI,aAAa,CAAC,UAAU;AAC1B,cAAU,QAAQ,IAAI;AACtB,WAAQ,YAAY,qBAAa,MAAM,IACnC,oBAAY,QAAQ,OAAO,SAAS,YAAY,WAAW,KAAK,IAChE,mBAAW,QAAQ,OAAO,QAAQ,SAAS,YAAY,WAAW,KAAK;AAAA,EAC7E;AACA,MAAI,EAAE,UAAUH,wBAAuB;AACrC,QAAI,eAAe,YAAYK,iBAAe,KAAK,QAAQ,aAAa,GACpE,eAAe,YAAYA,iBAAe,KAAK,OAAO,aAAa;AAEvE,QAAI,gBAAgB,cAAc;AAChC,UAAI,eAAe,eAAe,OAAO,MAAM,IAAI,QAC/C,eAAe,eAAe,MAAM,MAAM,IAAI;AAElD,gBAAU,QAAQ,IAAI;AACtB,aAAO,UAAU,cAAc,cAAc,SAAS,YAAY,KAAK;AAAA,IACzE;AAAA,EACF;AACA,MAAI,CAAC,WAAW;AACd,WAAO;AAAA,EACT;AACA,YAAU,QAAQ,IAAI;AACtB,SAAO,qBAAa,QAAQ,OAAO,SAAS,YAAY,WAAW,KAAK;AAC1E;AAEA,IAAO,0BAAQ;;;ACjEf,SAAS,YAAY,OAAO,OAAO,SAAS,YAAY,OAAO;AAC7D,MAAI,UAAU,OAAO;AACnB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,QAAQ,SAAS,QAAS,CAAC,qBAAa,KAAK,KAAK,CAAC,qBAAa,KAAK,GAAI;AACpF,WAAO,UAAU,SAAS,UAAU;AAAA,EACtC;AACA,SAAO,wBAAgB,OAAO,OAAO,SAAS,YAAY,aAAa,KAAK;AAC9E;AAEA,IAAO,sBAAQ;;;ACvBf,IAAIC,wBAAuB;AAA3B,IACIC,0BAAyB;AAY7B,SAAS,YAAY,QAAQ,QAAQ,WAAW,YAAY;AAC1D,MAAI,QAAQ,UAAU,QAClB,SAAS,OACT,eAAe,CAAC;AAEpB,MAAI,UAAU,MAAM;AAClB,WAAO,CAAC;AAAA,EACV;AACA,WAAS,OAAO,MAAM;AACtB,SAAO,SAAS;AACd,QAAI,OAAO,UAAU,KAAK;AAC1B,QAAK,gBAAgB,KAAK,CAAC,IACnB,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,CAAC,IAC1B,EAAE,KAAK,CAAC,KAAK,SACf;AACJ,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO,EAAE,QAAQ,QAAQ;AACvB,WAAO,UAAU,KAAK;AACtB,QAAI,MAAM,KAAK,CAAC,GACZ,WAAW,OAAO,GAAG,GACrB,WAAW,KAAK,CAAC;AAErB,QAAI,gBAAgB,KAAK,CAAC,GAAG;AAC3B,UAAI,aAAa,UAAa,EAAE,OAAO,SAAS;AAC9C,eAAO;AAAA,MACT;AAAA,IACF,OAAO;AACL,UAAI,QAAQ,IAAI;AAChB,UAAI,YAAY;AACd,YAAI,SAAS,WAAW,UAAU,UAAU,KAAK,QAAQ,QAAQ,KAAK;AAAA,MACxE;AACA,UAAI,EAAE,WAAW,SACT,oBAAY,UAAU,UAAUD,wBAAuBC,yBAAwB,YAAY,KAAK,IAChG,SACD;AACL,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACnDf,SAAS,mBAAmB,OAAO;AACjC,SAAO,UAAU,SAAS,CAAC,iBAAS,KAAK;AAC3C;AAEA,IAAO,6BAAQ;;;ACJf,SAAS,aAAa,QAAQ;AAC5B,MAAI,SAAS,aAAK,MAAM,GACpB,SAAS,OAAO;AAEpB,SAAO,UAAU;AACf,QAAI,MAAM,OAAO,MAAM,GACnB,QAAQ,OAAO,GAAG;AAEtB,WAAO,MAAM,IAAI,CAAC,KAAK,OAAO,2BAAmB,KAAK,CAAC;AAAA,EACzD;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACdf,SAAS,wBAAwB,KAAK,UAAU;AAC9C,SAAO,SAAS,QAAQ;AACtB,QAAI,UAAU,MAAM;AAClB,aAAO;AAAA,IACT;AACA,WAAO,OAAO,GAAG,MAAM,aACpB,aAAa,UAAc,OAAO,OAAO,MAAM;AAAA,EACpD;AACF;AAEA,IAAO,kCAAQ;;;ACRf,SAAS,YAAY,QAAQ;AAC3B,MAAI,YAAY,qBAAa,MAAM;AACnC,MAAI,UAAU,UAAU,KAAK,UAAU,CAAC,EAAE,CAAC,GAAG;AAC5C,WAAO,gCAAwB,UAAU,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAAA,EACjE;AACA,SAAO,SAAS,QAAQ;AACtB,WAAO,WAAW,UAAU,oBAAY,QAAQ,QAAQ,SAAS;AAAA,EACnE;AACF;AAEA,IAAO,sBAAQ;;;ACbf,SAAS,UAAU,QAAQ,KAAK;AAC9B,SAAO,UAAU,QAAQ,OAAO,OAAO,MAAM;AAC/C;AAEA,IAAO,oBAAQ;;;ACIf,SAAS,QAAQ,QAAQ,MAAM,SAAS;AACtC,SAAO,iBAAS,MAAM,MAAM;AAE5B,MAAI,QAAQ,IACR,SAAS,KAAK,QACd,SAAS;AAEb,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,MAAM,cAAM,KAAK,KAAK,CAAC;AAC3B,QAAI,EAAE,SAAS,UAAU,QAAQ,QAAQ,QAAQ,GAAG,IAAI;AACtD;AAAA,IACF;AACA,aAAS,OAAO,GAAG;AAAA,EACrB;AACA,MAAI,UAAU,EAAE,SAAS,QAAQ;AAC/B,WAAO;AAAA,EACT;AACA,WAAS,UAAU,OAAO,IAAI,OAAO;AACrC,SAAO,CAAC,CAAC,UAAU,iBAAS,MAAM,KAAK,gBAAQ,KAAK,MAAM,MACvD,gBAAQ,MAAM,KAAK,oBAAY,MAAM;AAC1C;AAEA,IAAO,kBAAQ;;;ACTf,SAAS,MAAM,QAAQ,MAAM;AAC3B,SAAO,UAAU,QAAQ,gBAAQ,QAAQ,MAAM,iBAAS;AAC1D;AAEA,IAAO,gBAAQ;;;ACxBf,IAAIC,wBAAuB;AAA3B,IACIC,0BAAyB;AAU7B,SAAS,oBAAoB,MAAM,UAAU;AAC3C,MAAI,cAAM,IAAI,KAAK,2BAAmB,QAAQ,GAAG;AAC/C,WAAO,gCAAwB,cAAM,IAAI,GAAG,QAAQ;AAAA,EACtD;AACA,SAAO,SAAS,QAAQ;AACtB,QAAI,WAAW,YAAI,QAAQ,IAAI;AAC/B,WAAQ,aAAa,UAAa,aAAa,WAC3C,cAAM,QAAQ,IAAI,IAClB,oBAAY,UAAU,UAAUD,wBAAuBC,uBAAsB;AAAA,EACnF;AACF;AAEA,IAAO,8BAAQ;;;ACzBf,SAAS,aAAa,KAAK;AACzB,SAAO,SAAS,QAAQ;AACtB,WAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,EAChD;AACF;AAEA,IAAO,uBAAQ;;;ACJf,SAAS,iBAAiB,MAAM;AAC9B,SAAO,SAAS,QAAQ;AACtB,WAAO,gBAAQ,QAAQ,IAAI;AAAA,EAC7B;AACF;AAEA,IAAO,2BAAQ;;;ACYf,SAAS,SAAS,MAAM;AACtB,SAAO,cAAM,IAAI,IAAI,qBAAa,cAAM,IAAI,CAAC,IAAI,yBAAiB,IAAI;AACxE;AAEA,IAAO,mBAAQ;;;AClBf,SAAS,aAAa,OAAO;AAG3B,MAAI,OAAO,SAAS,YAAY;AAC9B,WAAO;AAAA,EACT;AACA,MAAI,SAAS,MAAM;AACjB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,gBAAQ,KAAK,IAChB,4BAAoB,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,IACtC,oBAAY,KAAK;AAAA,EACvB;AACA,SAAO,iBAAS,KAAK;AACvB;AAEA,IAAO,uBAAQ;;;ACpBf,SAAS,gBAAgB,OAAO,QAAQ,UAAU,aAAa;AAC7D,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,MAAM,KAAK;AACvB,WAAO,aAAa,OAAO,SAAS,KAAK,GAAG,KAAK;AAAA,EACnD;AACA,SAAO;AACT;AAEA,IAAO,0BAAQ;;;ACdf,SAAS,cAAc,WAAW;AAChC,SAAO,SAAS,QAAQ,UAAU,UAAU;AAC1C,QAAI,QAAQ,IACR,WAAW,OAAO,MAAM,GACxB,QAAQ,SAAS,MAAM,GACvB,SAAS,MAAM;AAEnB,WAAO,UAAU;AACf,UAAI,MAAM,MAAM,YAAY,SAAS,EAAE,KAAK;AAC5C,UAAI,SAAS,SAAS,GAAG,GAAG,KAAK,QAAQ,MAAM,OAAO;AACpD;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEA,IAAO,wBAAQ;;;ACXf,IAAI,UAAU,sBAAc;AAE5B,IAAO,kBAAQ;;;ACJf,SAAS,WAAW,QAAQ,UAAU;AACpC,SAAO,UAAU,gBAAQ,QAAQ,UAAU,YAAI;AACjD;AAEA,IAAO,qBAAQ;;;ACLf,SAAS,eAAe,UAAU,WAAW;AAC3C,SAAO,SAAS,YAAY,UAAU;AACpC,QAAI,cAAc,MAAM;AACtB,aAAO;AAAA,IACT;AACA,QAAI,CAAC,oBAAY,UAAU,GAAG;AAC5B,aAAO,SAAS,YAAY,QAAQ;AAAA,IACtC;AACA,QAAI,SAAS,WAAW,QACpB,QAAQ,YAAY,SAAS,IAC7B,WAAW,OAAO,UAAU;AAEhC,WAAQ,YAAY,UAAU,EAAE,QAAQ,QAAS;AAC/C,UAAI,SAAS,SAAS,KAAK,GAAG,OAAO,QAAQ,MAAM,OAAO;AACxD;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEA,IAAO,yBAAQ;;;ACpBf,IAAI,WAAW,uBAAe,kBAAU;AAExC,IAAO,mBAAQ;;;ACAf,SAAS,eAAe,YAAY,QAAQ,UAAU,aAAa;AACjE,mBAAS,YAAY,SAAS,OAAO,KAAKC,aAAY;AACpD,WAAO,aAAa,OAAO,SAAS,KAAK,GAAGA,WAAU;AAAA,EACxD,CAAC;AACD,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACPf,SAAS,iBAAiB,QAAQ,aAAa;AAC7C,SAAO,SAAS,YAAY,UAAU;AACpC,QAAI,OAAO,gBAAQ,UAAU,IAAI,0BAAkB,wBAC/C,cAAc,cAAc,YAAY,IAAI,CAAC;AAEjD,WAAO,KAAK,YAAY,QAAQ,qBAAa,UAAU,CAAC,GAAG,WAAW;AAAA,EACxE;AACF;AAEA,IAAO,2BAAQ;;;AChBf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAuBjC,IAAI,WAAW,iBAAS,SAAS,QAAQ,SAAS;AAChD,WAAS,OAAO,MAAM;AAEtB,MAAI,QAAQ;AACZ,MAAI,SAAS,QAAQ;AACrB,MAAI,QAAQ,SAAS,IAAI,QAAQ,CAAC,IAAI;AAEtC,MAAI,SAAS,uBAAe,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,KAAK,GAAG;AAC1D,aAAS;AAAA,EACX;AAEA,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,SAAS,QAAQ,KAAK;AAC1B,QAAI,QAAQ,eAAO,MAAM;AACzB,QAAI,aAAa;AACjB,QAAI,cAAc,MAAM;AAExB,WAAO,EAAE,aAAa,aAAa;AACjC,UAAI,MAAM,MAAM,UAAU;AAC1B,UAAI,QAAQ,OAAO,GAAG;AAEtB,UAAI,UAAU,UACT,WAAG,OAAOA,cAAY,GAAG,CAAC,KAAK,CAACC,iBAAe,KAAK,QAAQ,GAAG,GAAI;AACtE,eAAO,GAAG,IAAI,OAAO,GAAG;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT,CAAC;AAED,IAAO,mBAAQ;;;ACnCf,SAAS,kBAAkB,OAAO;AAChC,SAAO,qBAAa,KAAK,KAAK,oBAAY,KAAK;AACjD;AAEA,IAAO,4BAAQ;;;ACvBf,SAAS,kBAAkB,OAAO,OAAO,YAAY;AACnD,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,WAAW,OAAO,MAAM,KAAK,CAAC,GAAG;AACnC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,4BAAQ;;;ACbf,IAAIC,oBAAmB;AAavB,SAAS,eAAe,OAAOC,SAAQ,UAAU,YAAY;AAC3D,MAAI,QAAQ,IACRC,YAAW,uBACX,WAAW,MACX,SAAS,MAAM,QACf,SAAS,CAAC,GACV,eAAeD,QAAO;AAE1B,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AACA,MAAI,UAAU;AACZ,IAAAA,UAAS,iBAASA,SAAQ,kBAAU,QAAQ,CAAC;AAAA,EAC/C;AACA,MAAI,YAAY;AACd,IAAAC,YAAW;AACX,eAAW;AAAA,EACb,WACSD,QAAO,UAAUD,mBAAkB;AAC1C,IAAAE,YAAW;AACX,eAAW;AACX,IAAAD,UAAS,IAAI,iBAASA,OAAM;AAAA,EAC9B;AACA;AACA,WAAO,EAAE,QAAQ,QAAQ;AACvB,UAAI,QAAQ,MAAM,KAAK,GACnB,WAAW,YAAY,OAAO,QAAQ,SAAS,KAAK;AAExD,cAAS,cAAc,UAAU,IAAK,QAAQ;AAC9C,UAAI,YAAY,aAAa,UAAU;AACrC,YAAI,cAAc;AAClB,eAAO,eAAe;AACpB,cAAIA,QAAO,WAAW,MAAM,UAAU;AACpC,qBAAS;AAAA,UACX;AAAA,QACF;AACA,eAAO,KAAK,KAAK;AAAA,MACnB,WACS,CAACC,UAASD,SAAQ,UAAU,UAAU,GAAG;AAChD,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AACA,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACxCf,IAAI,aAAa,iBAAS,SAAS,OAAOE,SAAQ;AAChD,SAAO,0BAAkB,KAAK,IAC1B,uBAAe,OAAO,oBAAYA,SAAQ,GAAG,2BAAmB,IAAI,CAAC,IACrE,CAAC;AACP,CAAC;AAED,IAAO,qBAAQ;;;AClBf,SAAS,KAAK,OAAO;AACnB,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,SAAO,SAAS,MAAM,SAAS,CAAC,IAAI;AACtC;AAEA,IAAO,eAAQ;;;ACSf,SAAS,KAAK,OAAO,GAAG,OAAO;AAC7B,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,MAAI,CAAC,QAAQ;AACX,WAAO,CAAC;AAAA,EACV;AACA,MAAK,SAAS,MAAM,SAAa,IAAI,kBAAU,CAAC;AAChD,SAAO,kBAAU,OAAO,IAAI,IAAI,IAAI,GAAG,MAAM;AAC/C;AAEA,IAAO,eAAQ;;;ACTf,SAAS,UAAU,OAAO,GAAG,OAAO;AAClC,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,MAAI,CAAC,QAAQ;AACX,WAAO,CAAC;AAAA,EACV;AACA,MAAK,SAAS,MAAM,SAAa,IAAI,kBAAU,CAAC;AAChD,MAAI,SAAS;AACb,SAAO,kBAAU,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC;AAC1C;AAEA,IAAO,oBAAQ;;;AC7Bf,SAAS,aAAa,OAAO;AAC3B,SAAO,OAAO,SAAS,aAAa,QAAQ;AAC9C;AAEA,IAAO,uBAAQ;;;ACsBf,SAAS,QAAQ,YAAY,UAAU;AACrC,MAAI,OAAO,gBAAQ,UAAU,IAAI,oBAAY;AAC7C,SAAO,KAAK,YAAY,qBAAa,QAAQ,CAAC;AAChD;AAEA,IAAO,kBAAQ;;;AC9Bf,SAAS,WAAW,OAAO,WAAW;AACpC,MAAI,QAAQ,IACR,SAAS,SAAS,OAAO,IAAI,MAAM;AAEvC,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,CAAC,UAAU,MAAM,KAAK,GAAG,OAAO,KAAK,GAAG;AAC1C,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACXf,SAAS,UAAU,YAAY,WAAW;AACxC,MAAI,SAAS;AACb,mBAAS,YAAY,SAAS,OAAO,OAAOC,aAAY;AACtD,aAAS,CAAC,CAAC,UAAU,OAAO,OAAOA,WAAU;AAC7C,WAAO;AAAA,EACT,CAAC;AACD,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AC2Bf,SAAS,MAAM,YAAY,WAAW,OAAO;AAC3C,MAAI,OAAO,gBAAQ,UAAU,IAAI,qBAAa;AAC9C,MAAI,SAAS,uBAAe,YAAY,WAAW,KAAK,GAAG;AACzD,gBAAY;AAAA,EACd;AACA,SAAO,KAAK,YAAY,qBAAa,WAAW,CAAC,CAAC;AACpD;AAEA,IAAO,gBAAQ;;;AC7Cf,SAAS,WAAW,YAAY,WAAW;AACzC,MAAI,SAAS,CAAC;AACd,mBAAS,YAAY,SAAS,OAAO,OAAOC,aAAY;AACtD,QAAI,UAAU,OAAO,OAAOA,WAAU,GAAG;AACvC,aAAO,KAAK,KAAK;AAAA,IACnB;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAEA,IAAO,qBAAQ;;;AC0Bf,SAAS,OAAO,YAAY,WAAW;AACrC,MAAI,OAAO,gBAAQ,UAAU,IAAI,sBAAc;AAC/C,SAAO,KAAK,YAAY,qBAAa,WAAW,CAAC,CAAC;AACpD;AAEA,IAAO,iBAAQ;;;ACxCf,SAAS,WAAW,eAAe;AACjC,SAAO,SAAS,YAAY,WAAW,WAAW;AAChD,QAAI,WAAW,OAAO,UAAU;AAChC,QAAI,CAAC,oBAAY,UAAU,GAAG;AAC5B,UAAI,WAAW,qBAAa,WAAW,CAAC;AACxC,mBAAa,aAAK,UAAU;AAC5B,kBAAY,SAAS,KAAK;AAAE,eAAO,SAAS,SAAS,GAAG,GAAG,KAAK,QAAQ;AAAA,MAAG;AAAA,IAC7E;AACA,QAAI,QAAQ,cAAc,YAAY,WAAW,SAAS;AAC1D,WAAO,QAAQ,KAAK,SAAS,WAAW,WAAW,KAAK,IAAI,KAAK,IAAI;AAAA,EACvE;AACF;AAEA,IAAO,qBAAQ;;;ACnBf,IAAIC,aAAY,KAAK;AAqCrB,SAAS,UAAU,OAAO,WAAW,WAAW;AAC9C,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,aAAa,OAAO,IAAI,kBAAU,SAAS;AACvD,MAAI,QAAQ,GAAG;AACb,YAAQA,WAAU,SAAS,OAAO,CAAC;AAAA,EACrC;AACA,SAAO,sBAAc,OAAO,qBAAa,WAAW,CAAC,GAAG,KAAK;AAC/D;AAEA,IAAO,oBAAQ;;;ACff,IAAI,OAAO,mBAAW,iBAAS;AAE/B,IAAO,eAAQ;;;ACvBf,SAAS,KAAK,OAAO;AACnB,SAAQ,SAAS,MAAM,SAAU,MAAM,CAAC,IAAI;AAC9C;AAEA,IAAO,eAAQ;;;ACXf,SAAS,QAAQ,YAAY,UAAU;AACrC,MAAI,QAAQ,IACR,SAAS,oBAAY,UAAU,IAAI,MAAM,WAAW,MAAM,IAAI,CAAC;AAEnE,mBAAS,YAAY,SAAS,OAAO,KAAKC,aAAY;AACpD,WAAO,EAAE,KAAK,IAAI,SAAS,OAAO,KAAKA,WAAU;AAAA,EACnD,CAAC;AACD,SAAO;AACT;AAEA,IAAO,kBAAQ;;;AC0Bf,SAAS,IAAI,YAAY,UAAU;AACjC,MAAI,OAAO,gBAAQ,UAAU,IAAI,mBAAW;AAC5C,SAAO,KAAK,YAAY,qBAAa,UAAU,CAAC,CAAC;AACnD;AAEA,IAAO,cAAQ;;;AC5Bf,SAAS,QAAQ,YAAY,UAAU;AACrC,SAAO,oBAAY,YAAI,YAAY,QAAQ,GAAG,CAAC;AACjD;AAEA,IAAO,kBAAQ;;;ACxBf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAyBjC,IAAI,UAAU,yBAAiB,SAAS,QAAQ,OAAO,KAAK;AAC1D,MAAIC,iBAAe,KAAK,QAAQ,GAAG,GAAG;AACpC,WAAO,GAAG,EAAE,KAAK,KAAK;AAAA,EACxB,OAAO;AACL,4BAAgB,QAAQ,KAAK,CAAC,KAAK,CAAC;AAAA,EACtC;AACF,CAAC;AAED,IAAO,kBAAQ;;;ACvCf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAUjC,SAAS,QAAQ,QAAQ,KAAK;AAC5B,SAAO,UAAU,QAAQC,iBAAe,KAAK,QAAQ,GAAG;AAC1D;AAEA,IAAO,kBAAQ;;;ACYf,SAAS,IAAI,QAAQ,MAAM;AACzB,SAAO,UAAU,QAAQ,gBAAQ,QAAQ,MAAM,eAAO;AACxD;AAEA,IAAO,cAAQ;;;AC7Bf,IAAIC,aAAY;AAmBhB,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,SAAS,YACpB,CAAC,gBAAQ,KAAK,KAAK,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAKA;AACpE;AAEA,IAAO,mBAAQ;;;ACjBf,SAAS,WAAW,QAAQ,OAAO;AACjC,SAAO,iBAAS,OAAO,SAAS,KAAK;AACnC,WAAO,OAAO,GAAG;AAAA,EACnB,CAAC;AACH;AAEA,IAAO,qBAAQ;;;ACWf,SAAS,OAAO,QAAQ;AACtB,SAAO,UAAU,OAAO,CAAC,IAAI,mBAAW,QAAQ,aAAK,MAAM,CAAC;AAC9D;AAEA,IAAO,iBAAQ;;;AC1Bf,IAAIC,aAAY,KAAK;AAgCrB,SAAS,SAAS,YAAY,OAAO,WAAW,OAAO;AACrD,eAAa,oBAAY,UAAU,IAAI,aAAa,eAAO,UAAU;AACrE,cAAa,aAAa,CAAC,QAAS,kBAAU,SAAS,IAAI;AAE3D,MAAI,SAAS,WAAW;AACxB,MAAI,YAAY,GAAG;AACjB,gBAAYA,WAAU,SAAS,WAAW,CAAC;AAAA,EAC7C;AACA,SAAO,iBAAS,UAAU,IACrB,aAAa,UAAU,WAAW,QAAQ,OAAO,SAAS,IAAI,KAC9D,CAAC,CAAC,UAAU,oBAAY,YAAY,OAAO,SAAS,IAAI;AAC/D;AAEA,IAAO,mBAAQ;;;AChDf,IAAIC,aAAY,KAAK;AAyBrB,SAAS,QAAQ,OAAO,OAAO,WAAW;AACxC,MAAI,SAAS,SAAS,OAAO,IAAI,MAAM;AACvC,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,aAAa,OAAO,IAAI,kBAAU,SAAS;AACvD,MAAI,QAAQ,GAAG;AACb,YAAQA,WAAU,SAAS,OAAO,CAAC;AAAA,EACrC;AACA,SAAO,oBAAY,OAAO,OAAO,KAAK;AACxC;AAEA,IAAO,kBAAQ;;;AC/Bf,IAAIC,UAAS;AAAb,IACIC,UAAS;AAGb,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AAmCjC,SAAS,QAAQ,OAAO;AACtB,MAAI,SAAS,MAAM;AACjB,WAAO;AAAA,EACT;AACA,MAAI,oBAAY,KAAK,MAChB,gBAAQ,KAAK,KAAK,OAAO,SAAS,YAAY,OAAO,MAAM,UAAU,cACpE,iBAAS,KAAK,KAAK,qBAAa,KAAK,KAAK,oBAAY,KAAK,IAAI;AACnE,WAAO,CAAC,MAAM;AAAA,EAChB;AACA,MAAI,MAAM,eAAO,KAAK;AACtB,MAAI,OAAOF,WAAU,OAAOC,SAAQ;AAClC,WAAO,CAAC,MAAM;AAAA,EAChB;AACA,MAAI,oBAAY,KAAK,GAAG;AACtB,WAAO,CAAC,iBAAS,KAAK,EAAE;AAAA,EAC1B;AACA,WAAS,OAAO,OAAO;AACrB,QAAIE,iBAAe,KAAK,OAAO,GAAG,GAAG;AACnC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,kBAAQ;;;ACxEf,IAAIC,aAAY;AAShB,SAAS,aAAa,OAAO;AAC3B,SAAO,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAKA;AACrD;AAEA,IAAO,uBAAQ;;;ACZf,IAAI,eAAe,oBAAY,iBAAS;AAmBxC,IAAI,WAAW,eAAe,kBAAU,YAAY,IAAI;AAExD,IAAO,mBAAQ;;;ACTf,SAAS,YAAY,OAAO;AAC1B,SAAO,UAAU;AACnB;AAEA,IAAO,sBAAQ;;;ACpBf,IAAIC,mBAAkB;AAsBtB,SAAS,OAAO,WAAW;AACzB,MAAI,OAAO,aAAa,YAAY;AAClC,UAAM,IAAI,UAAUA,gBAAe;AAAA,EACrC;AACA,SAAO,WAAW;AAChB,QAAI,OAAO;AACX,YAAQ,KAAK,QAAQ;AAAA,MACnB,KAAK;AAAG,eAAO,CAAC,UAAU,KAAK,IAAI;AAAA,MACnC,KAAK;AAAG,eAAO,CAAC,UAAU,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,MAC5C,KAAK;AAAG,eAAO,CAAC,UAAU,KAAK,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,MACrD,KAAK;AAAG,eAAO,CAAC,UAAU,KAAK,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,IAChE;AACA,WAAO,CAAC,UAAU,MAAM,MAAM,IAAI;AAAA,EACpC;AACF;AAEA,IAAO,iBAAQ;;;ACvBf,SAAS,QAAQ,QAAQ,MAAM,OAAO,YAAY;AAChD,MAAI,CAAC,iBAAS,MAAM,GAAG;AACrB,WAAO;AAAA,EACT;AACA,SAAO,iBAAS,MAAM,MAAM;AAE5B,MAAI,QAAQ,IACR,SAAS,KAAK,QACd,YAAY,SAAS,GACrB,SAAS;AAEb,SAAO,UAAU,QAAQ,EAAE,QAAQ,QAAQ;AACzC,QAAI,MAAM,cAAM,KAAK,KAAK,CAAC,GACvB,WAAW;AAEf,QAAI,QAAQ,eAAe,QAAQ,iBAAiB,QAAQ,aAAa;AACvE,aAAO;AAAA,IACT;AAEA,QAAI,SAAS,WAAW;AACtB,UAAI,WAAW,OAAO,GAAG;AACzB,iBAAW,aAAa,WAAW,UAAU,KAAK,MAAM,IAAI;AAC5D,UAAI,aAAa,QAAW;AAC1B,mBAAW,iBAAS,QAAQ,IACxB,WACC,gBAAQ,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAAA,MACxC;AAAA,IACF;AACA,wBAAY,QAAQ,KAAK,QAAQ;AACjC,aAAS,OAAO,GAAG;AAAA,EACrB;AACA,SAAO;AACT;AAEA,IAAO,kBAAQ;;;ACrCf,SAAS,WAAW,QAAQ,OAAO,WAAW;AAC5C,MAAI,QAAQ,IACR,SAAS,MAAM,QACf,SAAS,CAAC;AAEd,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,OAAO,MAAM,KAAK,GAClB,QAAQ,gBAAQ,QAAQ,IAAI;AAEhC,QAAI,UAAU,OAAO,IAAI,GAAG;AAC1B,sBAAQ,QAAQ,iBAAS,MAAM,MAAM,GAAG,KAAK;AAAA,IAC/C;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACNf,SAAS,OAAO,QAAQ,WAAW;AACjC,MAAI,UAAU,MAAM;AAClB,WAAO,CAAC;AAAA,EACV;AACA,MAAI,QAAQ,iBAAS,qBAAa,MAAM,GAAG,SAAS,MAAM;AACxD,WAAO,CAAC,IAAI;AAAA,EACd,CAAC;AACD,cAAY,qBAAa,SAAS;AAClC,SAAO,mBAAW,QAAQ,OAAO,SAAS,OAAO,MAAM;AACrD,WAAO,UAAU,OAAO,KAAK,CAAC,CAAC;AAAA,EACjC,CAAC;AACH;AAEA,IAAO,iBAAQ;;;ACvBf,SAAS,WAAW,YAAY,UAAU,aAAa,WAAW,UAAU;AAC1E,WAAS,YAAY,SAAS,OAAO,OAAOC,aAAY;AACtD,kBAAc,aACT,YAAY,OAAO,SACpB,SAAS,aAAa,OAAO,OAAOA,WAAU;AAAA,EACpD,CAAC;AACD,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACqBf,SAAS,OAAO,YAAY,UAAU,aAAa;AACjD,MAAI,OAAO,gBAAQ,UAAU,IAAI,sBAAc,oBAC3C,YAAY,UAAU,SAAS;AAEnC,SAAO,KAAK,YAAY,qBAAa,UAAU,CAAC,GAAG,aAAa,WAAW,gBAAQ;AACrF;AAEA,IAAO,iBAAQ;;;ACVf,SAAS,OAAO,YAAY,WAAW;AACrC,MAAI,OAAO,gBAAQ,UAAU,IAAI,sBAAc;AAC/C,SAAO,KAAK,YAAY,eAAO,qBAAa,WAAW,CAAC,CAAC,CAAC;AAC5D;AAEA,IAAO,iBAAQ;;;AClCf,SAAS,SAAS,YAAY,WAAW;AACvC,MAAI;AAEJ,mBAAS,YAAY,SAAS,OAAO,OAAOC,aAAY;AACtD,aAAS,UAAU,OAAO,OAAOA,WAAU;AAC3C,WAAO,CAAC;AAAA,EACV,CAAC;AACD,SAAO,CAAC,CAAC;AACX;AAEA,IAAO,mBAAQ;;;ACqBf,SAAS,KAAK,YAAY,WAAW,OAAO;AAC1C,MAAI,OAAO,gBAAQ,UAAU,IAAI,oBAAY;AAC7C,MAAI,SAAS,uBAAe,YAAY,WAAW,KAAK,GAAG;AACzD,gBAAY;AAAA,EACd;AACA,SAAO,KAAK,YAAY,qBAAa,WAAW,CAAC,CAAC;AACpD;AAEA,IAAO,eAAQ;;;AC7Cf,IAAIC,YAAW,IAAI;AASnB,IAAI,YAAY,EAAE,eAAQ,IAAI,mBAAW,IAAI,YAAI,CAAC,EAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAMA,aAAY,eAAO,SAASC,SAAQ;AAClG,SAAO,IAAI,YAAIA,OAAM;AACvB;AAEA,IAAO,oBAAQ;;;ACVf,IAAIC,oBAAmB;AAWvB,SAAS,SAAS,OAAO,UAAU,YAAY;AAC7C,MAAI,QAAQ,IACRC,YAAW,uBACX,SAAS,MAAM,QACf,WAAW,MACX,SAAS,CAAC,GACV,OAAO;AAEX,MAAI,YAAY;AACd,eAAW;AACX,IAAAA,YAAW;AAAA,EACb,WACS,UAAUD,mBAAkB;AACnC,QAAI,MAAM,WAAW,OAAO,kBAAU,KAAK;AAC3C,QAAI,KAAK;AACP,aAAO,mBAAW,GAAG;AAAA,IACvB;AACA,eAAW;AACX,IAAAC,YAAW;AACX,WAAO,IAAI;AAAA,EACb,OACK;AACH,WAAO,WAAW,CAAC,IAAI;AAAA,EACzB;AACA;AACA,WAAO,EAAE,QAAQ,QAAQ;AACvB,UAAI,QAAQ,MAAM,KAAK,GACnB,WAAW,WAAW,SAAS,KAAK,IAAI;AAE5C,cAAS,cAAc,UAAU,IAAK,QAAQ;AAC9C,UAAI,YAAY,aAAa,UAAU;AACrC,YAAI,YAAY,KAAK;AACrB,eAAO,aAAa;AAClB,cAAI,KAAK,SAAS,MAAM,UAAU;AAChC,qBAAS;AAAA,UACX;AAAA,QACF;AACA,YAAI,UAAU;AACZ,eAAK,KAAK,QAAQ;AAAA,QACpB;AACA,eAAO,KAAK,KAAK;AAAA,MACnB,WACS,CAACA,UAAS,MAAM,UAAU,UAAU,GAAG;AAC9C,YAAI,SAAS,QAAQ;AACnB,eAAK,KAAK,QAAQ;AAAA,QACpB;AACA,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACnDf,SAAS,KAAK,OAAO;AACnB,SAAQ,SAAS,MAAM,SAAU,iBAAS,KAAK,IAAI,CAAC;AACtD;AAEA,IAAO,eAAQ;;;ACxBR,SAAS,YAAY,KAAK;AAE7B,MAAI,WAAW,QAAQ,OAAO;AAC1B,YAAQ,MAAM,UAAU,GAAG,EAAE;AAAA,EACjC;AACJ;AACO,SAAS,cAAc,KAAK;AAE/B,MAAI,WAAW,QAAQ,MAAM;AAEzB,YAAQ,KAAK,YAAY,GAAG,EAAE;AAAA,EAClC;AACJ;;;ACZO,SAAS,MAAM,MAAM;AACxB,QAAM,SAAQ,oBAAI,KAAK,GAAE,QAAQ;AACjC,QAAM,MAAM,KAAK;AACjB,QAAM,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAC/B,QAAM,QAAQ,MAAM;AACpB,SAAO,EAAE,MAAM,OAAO,OAAO,IAAI;AACrC;;;ACLO,SAAS,iBAAiB,cAAc;AAC3C,WAAS,kBAAkB;AAAA,EAAE;AAE7B,kBAAgB,YAAY;AAC5B,QAAM,eAAe,IAAI,gBAAgB;AACzC,WAAS,aAAa;AAClB,WAAO,OAAO,aAAa;AAAA,EAC/B;AAGA,aAAW;AACX,aAAW;AAGX,MAAI;AACA,WAAO;AAKX,GAAC,GAAG,MAAM,YAAY;AAC1B;;;ACpBA,SAAS,WAAW,SAAS;AACzB,MAAI,cAAc,OAAO,GAAG;AACxB,WAAO,QAAQ;AAAA,EACnB,OACK;AACD,WAAO,QAAQ;AAAA,EACnB;AACJ;AAEA,SAAS,cAAc,KAAK;AACxB,SAAO,iBAAS,IAAI,KAAK,KAAK,IAAI,UAAU;AAChD;AACO,IAAM,qBAAN,MAAyB;AAAA,EAC5B,IAAI,aAAa;AACb,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,WAAW,OAAO;AAClB,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,YAAY,aAAa;AACrB,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,OAAO,SAAS;AACZ,YAAQ,MAAM,IAAI;AAClB,oBAAQ,KAAK,YAAY,CAAC,SAAS;AAC/B,WAAK,OAAO,OAAO;AAAA,IACvB,CAAC;AAAA,EACL;AACJ;AACO,IAAM,cAAN,cAA0B,mBAAmB;AAAA,EAChD,YAAY,SAAS;AACjB,UAAM,CAAC,CAAC;AACR,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AAAA,EACA,IAAI,WAAW,YAAY;AAAA,EAE3B;AAAA,EACA,IAAI,aAAa;AACb,QAAI,KAAK,mBAAmB,QAAW;AACnC,aAAO,KAAK,eAAe;AAAA,IAC/B;AACA,WAAO,CAAC;AAAA,EACZ;AAAA,EACA,OAAO,SAAS;AACZ,YAAQ,MAAM,IAAI;AAAA,EAEtB;AACJ;AACO,IAAM,OAAN,cAAmB,mBAAmB;AAAA,EACzC,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,UAAU;AACf,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,cAAN,cAA0B,mBAAmB;AAAA,EAChD,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,oBAAoB;AACzB,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,SAAN,cAAqB,mBAAmB;AAAA,EAC3C,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,sBAAN,cAAkC,mBAAmB;AAAA,EACxD,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,mCAAN,cAA+C,mBAAmB;AAAA,EACrE,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,aAAN,cAAyB,mBAAmB;AAAA,EAC/C,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,0BAAN,cAAsC,mBAAmB;AAAA,EAC5D,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,cAAN,cAA0B,mBAAmB;AAAA,EAChD,IAAI,aAAa;AACb,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,WAAW,OAAO;AAClB,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,YAAY,SAAS;AACjB,UAAM,QAAQ,UAAU;AACxB,SAAK,MAAM;AACX,SAAK,oBAAoB;AACzB,SAAK,gBAAgB;AACrB,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AACJ;AACO,IAAM,WAAN,MAAe;AAAA,EAClB,YAAY,SAAS;AACjB,SAAK,MAAM;AACX,mBAAO,MAAM,eAAO,SAAS,CAAC,MAAM,MAAM,MAAS,CAAC;AAAA,EACxD;AAAA,EACA,OAAO,SAAS;AACZ,YAAQ,MAAM,IAAI;AAAA,EACtB;AACJ;AACO,SAAS,iBAAiB,UAAU;AACvC,SAAO,YAAI,UAAU,mBAAmB;AAC5C;AACO,SAAS,oBAAoB,MAAM;AACtC,WAAS,kBAAkB,YAAY;AACnC,WAAO,YAAI,YAAY,mBAAmB;AAAA,EAC9C;AAEA,MAAI,gBAAgB,aAAa;AAC7B,UAAM,wBAAwB;AAAA,MAC1B,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,KAAK,KAAK;AAAA,IACd;AACA,QAAI,iBAAS,KAAK,KAAK,GAAG;AACtB,4BAAsB,QAAQ,KAAK;AAAA,IACvC;AACA,WAAO;AAAA,EACX,WACS,gBAAgB,aAAa;AAClC,WAAO;AAAA,MACH,MAAM;AAAA,MACN,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,QAAQ;AAC7B,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,qBAAqB;AAC1C,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,kCAAkC;AACvD,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,WAAY,oBAAoB,IAAI,SAAS,EAAE,cAAc,KAAK,UAAU,CAAC,CAAC;AAAA,MAC9E,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,yBAAyB;AAC9C,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,WAAY,oBAAoB,IAAI,SAAS,EAAE,cAAc,KAAK,UAAU,CAAC,CAAC;AAAA,MAC9E,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,YAAY;AACjC,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,aAAa;AAClC,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EACJ,WACS,gBAAgB,UAAU;AAC/B,UAAM,qBAAqB;AAAA,MACvB,MAAM;AAAA,MACN,MAAM,KAAK,aAAa;AAAA,MACxB,OAAO,WAAW,KAAK,YAAY;AAAA,MACnC,KAAK,KAAK;AAAA,IACd;AACA,QAAI,iBAAS,KAAK,KAAK,GAAG;AACtB,yBAAmB,gBAAgB,KAAK;AAAA,IAC5C;AACA,UAAM,UAAU,KAAK,aAAa;AAClC,QAAI,KAAK,aAAa,SAAS;AAC3B,yBAAmB,UAAU,iBAAS,OAAO,IACvC,QAAQ,SACR;AAAA,IACV;AACA,WAAO;AAAA,EACX,WACS,gBAAgB,MAAM;AAC3B,WAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,YAAY,kBAAkB,KAAK,UAAU;AAAA,IACjD;AAAA,EAEJ,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;;;AC9NO,IAAM,cAAN,MAAkB;AAAA,EACrB,MAAM,MAAM;AACR,UAAM,UAAU;AAChB,YAAQ,QAAQ,aAAa;AAAA,MACzB,KAAK;AACD,eAAO,KAAK,iBAAiB,OAAO;AAAA,MACxC,KAAK;AACD,eAAO,KAAK,iBAAiB,OAAO;AAAA,MACxC,KAAK;AACD,eAAO,KAAK,YAAY,OAAO;AAAA,MACnC,KAAK;AACD,eAAO,KAAK,yBAAyB,OAAO;AAAA,MAChD,KAAK;AACD,eAAO,KAAK,sCAAsC,OAAO;AAAA,MAC7D,KAAK;AACD,eAAO,KAAK,6BAA6B,OAAO;AAAA,MACpD,KAAK;AACD,eAAO,KAAK,gBAAgB,OAAO;AAAA,MACvC,KAAK;AACD,eAAO,KAAK,iBAAiB,OAAO;AAAA,MACxC,KAAK;AACD,eAAO,KAAK,cAAc,OAAO;AAAA,MACrC,KAAK;AACD,eAAO,KAAK,UAAU,OAAO;AAAA,MAEjC;AACI,cAAM,MAAM,sBAAsB;AAAA,IAC1C;AAAA,EACJ;AAAA;AAAA,EAEA,iBAAiB,MAAM;AAAA,EAAE;AAAA;AAAA,EAEzB,iBAAiB,MAAM;AAAA,EAAE;AAAA;AAAA,EAEzB,YAAY,MAAM;AAAA,EAAE;AAAA;AAAA,EAEpB,gBAAgB,MAAM;AAAA,EAAE;AAAA;AAAA,EAExB,yBAAyB,MAAM;AAAA,EAAE;AAAA;AAAA,EAEjC,sCAAsC,MAAM;AAAA,EAAE;AAAA;AAAA,EAE9C,6BAA6B,MAAM;AAAA,EAAE;AAAA;AAAA,EAErC,iBAAiB,MAAM;AAAA,EAAE;AAAA;AAAA,EAEzB,cAAc,MAAM;AAAA,EAAE;AAAA;AAAA,EAEtB,UAAU,MAAM;AAAA,EAAE;AACtB;;;AChDO,SAAS,eAAe,MAAM;AACjC,SAAQ,gBAAgB,eACpB,gBAAgB,UAChB,gBAAgB,cAChB,gBAAgB,uBAChB,gBAAgB,oCAChB,gBAAgB,2BAChB,gBAAgB,YAChB,gBAAgB;AACxB;AACO,SAAS,eAAe,MAAM,iBAAiB,CAAC,GAAG;AACtD,QAAM,qBAAqB,gBAAgB,UACvC,gBAAgB,cAChB,gBAAgB;AACpB,MAAI,oBAAoB;AACpB,WAAO;AAAA,EACX;AAIA,MAAI,gBAAgB,aAAa;AAE7B,WAAO,aAAK,KAAK,YAAY,CAAC,YAAY;AACtC,aAAO,eAAe,SAAS,cAAc;AAAA,IACjD,CAAC;AAAA,EACL,WACS,gBAAgB,eAAe,iBAAS,gBAAgB,IAAI,GAAG;AAEpE,WAAO;AAAA,EACX,WACS,gBAAgB,oBAAoB;AACzC,QAAI,gBAAgB,aAAa;AAC7B,qBAAe,KAAK,IAAI;AAAA,IAC5B;AACA,WAAO,cAAM,KAAK,YAAY,CAAC,YAAY;AACvC,aAAO,eAAe,SAAS,cAAc;AAAA,IACjD,CAAC;AAAA,EACL,OACK;AACD,WAAO;AAAA,EACX;AACJ;AACO,SAAS,gBAAgB,MAAM;AAClC,SAAO,gBAAgB;AAC3B;AACO,SAAS,qBAAqB,MAAM;AAEvC,MAAI,gBAAgB,aAAa;AAC7B,WAAO;AAAA,EACX,WACS,gBAAgB,QAAQ;AAC7B,WAAO;AAAA,EACX,WACS,gBAAgB,aAAa;AAClC,WAAO;AAAA,EACX,WACS,gBAAgB,qBAAqB;AAC1C,WAAO;AAAA,EACX,WACS,gBAAgB,kCAAkC;AACvD,WAAO;AAAA,EACX,WACS,gBAAgB,yBAAyB;AAC9C,WAAO;AAAA,EACX,WACS,gBAAgB,YAAY;AACjC,WAAO;AAAA,EACX,WACS,gBAAgB,UAAU;AAC/B,WAAO;AAAA,EAEX,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;;;ACxEO,IAAM,aAAN,MAAiB;AAAA,EACpB,KAAK,MAAM,WAAW,CAAC,GAAG;AACtB,oBAAQ,KAAK,YAAY,CAAC,SAAS,UAAU;AACzC,YAAM,WAAW,aAAK,KAAK,YAAY,QAAQ,CAAC;AAEhD,UAAI,mBAAmB,aAAa;AAChC,aAAK,YAAY,SAAS,UAAU,QAAQ;AAAA,MAChD,WACS,mBAAmB,UAAU;AAClC,aAAK,aAAa,SAAS,UAAU,QAAQ;AAAA,MACjD,WACS,mBAAmB,aAAa;AACrC,aAAK,SAAS,SAAS,UAAU,QAAQ;AAAA,MAC7C,WACS,mBAAmB,QAAQ;AAChC,aAAK,WAAW,SAAS,UAAU,QAAQ;AAAA,MAC/C,WACS,mBAAmB,qBAAqB;AAC7C,aAAK,eAAe,SAAS,UAAU,QAAQ;AAAA,MACnD,WACS,mBAAmB,kCAAkC;AAC1D,aAAK,kBAAkB,SAAS,UAAU,QAAQ;AAAA,MACtD,WACS,mBAAmB,yBAAyB;AACjD,aAAK,YAAY,SAAS,UAAU,QAAQ;AAAA,MAChD,WACS,mBAAmB,YAAY;AACpC,aAAK,SAAS,SAAS,UAAU,QAAQ;AAAA,MAC7C,WACS,mBAAmB,aAAa;AACrC,aAAK,OAAO,SAAS,UAAU,QAAQ;AAAA,MAC3C,OACK;AACD,cAAM,MAAM,sBAAsB;AAAA,MACtC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,aAAa,UAAU,UAAU,UAAU;AAAA,EAAE;AAAA,EAC7C,YAAY,SAAS,UAAU,UAAU;AAAA,EAAE;AAAA,EAC3C,SAAS,UAAU,UAAU,UAAU;AAEnC,UAAM,aAAa,SAAS,OAAO,QAAQ;AAC3C,SAAK,KAAK,UAAU,UAAU;AAAA,EAClC;AAAA,EACA,WAAW,YAAY,UAAU,UAAU;AAEvC,UAAM,aAAa,SAAS,OAAO,QAAQ;AAC3C,SAAK,KAAK,YAAY,UAAU;AAAA,EACpC;AAAA,EACA,eAAe,gBAAgB,UAAU,UAAU;AAE/C,UAAM,qBAAqB;AAAA,MACvB,IAAI,OAAO,EAAE,YAAY,eAAe,WAAW,CAAC;AAAA,IACxD,EAAE,OAAO,UAAU,QAAQ;AAC3B,SAAK,KAAK,gBAAgB,kBAAkB;AAAA,EAChD;AAAA,EACA,kBAAkB,mBAAmB,UAAU,UAAU;AAErD,UAAM,wBAAwB,+BAA+B,mBAAmB,UAAU,QAAQ;AAClG,SAAK,KAAK,mBAAmB,qBAAqB;AAAA,EACtD;AAAA,EACA,SAAS,UAAU,UAAU,UAAU;AAEnC,UAAM,eAAe;AAAA,MACjB,IAAI,OAAO,EAAE,YAAY,SAAS,WAAW,CAAC;AAAA,IAClD,EAAE,OAAO,UAAU,QAAQ;AAC3B,SAAK,KAAK,UAAU,YAAY;AAAA,EACpC;AAAA,EACA,YAAY,aAAa,UAAU,UAAU;AAEzC,UAAM,kBAAkB,+BAA+B,aAAa,UAAU,QAAQ;AACtF,SAAK,KAAK,aAAa,eAAe;AAAA,EAC1C;AAAA,EACA,OAAO,QAAQ,UAAU,UAAU;AAE/B,UAAM,aAAa,SAAS,OAAO,QAAQ;AAE3C,oBAAQ,OAAO,YAAY,CAAC,QAAQ;AAIhC,YAAM,cAAc,IAAI,YAAY,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC;AACzD,WAAK,KAAK,aAAa,UAAU;AAAA,IACrC,CAAC;AAAA,EACL;AACJ;AACA,SAAS,+BAA+B,YAAY,UAAU,UAAU;AACpE,QAAM,aAAa;AAAA,IACf,IAAI,OAAO;AAAA,MACP,YAAY;AAAA,QACR,IAAI,SAAS,EAAE,cAAc,WAAW,UAAU,CAAC;AAAA,MACvD,EAAE,OAAO,WAAW,UAAU;AAAA,IAClC,CAAC;AAAA,EACL;AACA,QAAM,iBAAiB,WAAW,OAAO,UAAU,QAAQ;AAC3D,SAAO;AACX;;;ACnGO,SAAS,MAAM,MAAM;AAExB,MAAI,gBAAgB,aAAa;AAS7B,WAAO,MAAM,KAAK,cAAc;AAAA,EACpC,WACS,gBAAgB,UAAU;AAC/B,WAAO,iBAAiB,IAAI;AAAA,EAChC,WACS,eAAe,IAAI,GAAG;AAC3B,WAAO,iBAAiB,IAAI;AAAA,EAChC,WACS,gBAAgB,IAAI,GAAG;AAC5B,WAAO,kBAAkB,IAAI;AAAA,EACjC,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;AACO,SAAS,iBAAiB,MAAM;AACnC,MAAI,WAAW,CAAC;AAChB,QAAM,MAAM,KAAK;AACjB,MAAI,iBAAiB;AACrB,MAAI,yBAAyB,IAAI,SAAS;AAC1C,MAAI;AAEJ,MAAI,0BAA0B;AAE9B,SAAO,0BAA0B,yBAAyB;AACtD,kBAAc,IAAI,cAAc;AAChC,8BAA0B,eAAe,WAAW;AACpD,eAAW,SAAS,OAAO,MAAM,WAAW,CAAC;AAC7C,qBAAiB,iBAAiB;AAClC,6BAAyB,IAAI,SAAS;AAAA,EAC1C;AACA,SAAO,aAAK,QAAQ;AACxB;AACO,SAAS,kBAAkB,MAAM;AACpC,QAAM,wBAAwB,YAAI,KAAK,YAAY,CAAC,cAAc;AAC9D,WAAO,MAAM,SAAS;AAAA,EAC1B,CAAC;AACD,SAAO,aAAK,gBAAQ,qBAAqB,CAAC;AAC9C;AACO,SAAS,iBAAiB,UAAU;AACvC,SAAO,CAAC,SAAS,YAAY;AACjC;;;ACrDO,IAAM,KAAK;;;ACMX,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAChD,YAAY,SAAS;AACjB,UAAM;AACN,SAAK,UAAU;AACf,SAAK,UAAU,CAAC;AAAA,EACpB;AAAA,EACA,eAAe;AACX,SAAK,KAAK,KAAK,OAAO;AACtB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,aAAa,UAAU,UAAU,UAAU;AAAA,EAE3C;AAAA,EACA,YAAY,SAAS,UAAU,UAAU;AACrC,UAAM,aAAa,8BAA8B,QAAQ,gBAAgB,QAAQ,GAAG,IAChF,KAAK,QAAQ;AACjB,UAAM,WAAW,SAAS,OAAO,QAAQ;AACzC,UAAM,WAAW,IAAI,YAAY,EAAE,YAAY,SAAS,CAAC;AACzD,UAAM,uBAAuB,MAAM,QAAQ;AAC3C,SAAK,QAAQ,UAAU,IAAI;AAAA,EAC/B;AACJ;AACO,SAAS,uBAAuB,gBAAgB;AACnD,QAAM,gBAAgB,CAAC;AACvB,kBAAQ,gBAAgB,CAAC,YAAY;AACjC,UAAM,iBAAiB,IAAI,oBAAoB,OAAO,EAAE,aAAa;AACrE,mBAAO,eAAe,cAAc;AAAA,EACxC,CAAC;AACD,SAAO;AACX;AACO,SAAS,8BAA8B,OAAO,mBAAmB;AACpE,SAAO,MAAM,OAAO,oBAAoB;AAC5C;;;ACvCO,SAAS,GAAG,MAAM;AACrB,SAAO,KAAK,WAAW,CAAC;AAC5B;AACO,SAAS,YAAY,MAAM,KAAK;AACnC,MAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,SAAK,QAAQ,SAAU,SAAS;AAC5B,UAAI,KAAK,OAAO;AAAA,IACpB,CAAC;AAAA,EACL,OACK;AACD,QAAI,KAAK,IAAI;AAAA,EACjB;AACJ;AACO,SAAS,QAAQ,SAAS,SAAS;AACtC,MAAI,QAAQ,OAAO,MAAM,MAAM;AAC3B,UAAM,oBAAoB;AAAA,EAC9B;AACA,QAAM,IAAI,QAAQ,OAAO;AACzB,UAAQ,OAAO,IAAI;AACvB;AACO,SAAS,cAAc,KAAK;AAE/B,MAAI,QAAQ,QAAW;AACnB,UAAM,MAAM,yCAAyC;AAAA,EACzD;AACA,SAAO;AACX;AAEO,SAAS,0BAA0B;AACtC,QAAM,MAAM,yCAAyC;AACzD;AACO,SAAS,YAAY,KAAK;AAC7B,SAAO,IAAI,MAAM,MAAM;AAC3B;;;AChCO,IAAM,kBAAkB,CAAC;AAChC,SAAS,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK;AACrC,kBAAgB,KAAK,CAAC;AAC1B;AACO,IAAM,gBAAgB,CAAC,GAAG,GAAG,CAAC,EAAE,OAAO,eAAe;AAC7D,SAAS,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK;AACrC,gBAAc,KAAK,CAAC;AACxB;AACA,SAAS,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK;AACrC,gBAAc,KAAK,CAAC;AACxB;AAEO,IAAM,kBAAkB;AAAA,EAC3B,GAAG,GAAG;AAAA,EACN,GAAG,IAAI;AAAA,EACP,GAAG,IAAI;AAAA,EACP,GAAG,IAAI;AAAA,EACP,GAAG,GAAI;AAAA,EACP,GAAG,IAAI;AAAA,EACP,GAAG,GAAI;AAAA,EACP,GAAG,MAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AAAA,EACX,GAAG,QAAQ;AACf;;;ACrCA,IAAM,kBAAkB;AACxB,IAAM,iBAAiB;AACvB,IAAM,uBAAuB;AAGtB,IAAM,eAAN,MAAmB;AAAA,EACtB,cAAc;AACV,SAAK,MAAM;AACX,SAAK,QAAQ;AACb,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,YAAY;AACR,WAAO;AAAA,MACH,KAAK,KAAK;AAAA,MACV,OAAO,KAAK;AAAA,MACZ,UAAU,KAAK;AAAA,IACnB;AAAA,EACJ;AAAA,EACA,aAAa,UAAU;AACnB,SAAK,MAAM,SAAS;AACpB,SAAK,QAAQ,SAAS;AACtB,SAAK,WAAW,SAAS;AAAA,EAC7B;AAAA,EACA,QAAQ,OAAO;AAEX,SAAK,MAAM;AACX,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,YAAY,GAAG;AACpB,UAAM,QAAQ,KAAK,YAAY;AAC/B,SAAK,YAAY,GAAG;AACpB,UAAM,QAAQ;AAAA,MACV,MAAM;AAAA,MACN,KAAK,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,OAAO;AAAA,MAC1C,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACZ;AACA,WAAO,KAAK,aAAa,GAAG;AACxB,cAAQ,KAAK,QAAQ,GAAG;AAAA,QACpB,KAAK;AACD,kBAAQ,OAAO,QAAQ;AACvB;AAAA,QACJ,KAAK;AACD,kBAAQ,OAAO,YAAY;AAC3B;AAAA,QACJ,KAAK;AACD,kBAAQ,OAAO,WAAW;AAC1B;AAAA,QACJ,KAAK;AACD,kBAAQ,OAAO,SAAS;AACxB;AAAA,QACJ,KAAK;AACD,kBAAQ,OAAO,QAAQ;AACvB;AAAA,MACR;AAAA,IACJ;AACA,QAAI,KAAK,QAAQ,KAAK,MAAM,QAAQ;AAChC,YAAM,MAAM,sBAAsB,KAAK,MAAM,UAAU,KAAK,GAAG,CAAC;AAAA,IACpE;AACA,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA,KAAK,KAAK,IAAI,CAAC;AAAA,IACnB;AAAA,EACJ;AAAA,EACA,cAAc;AACV,UAAM,OAAO,CAAC;AACd,UAAM,QAAQ,KAAK;AACnB,SAAK,KAAK,KAAK,YAAY,CAAC;AAC5B,WAAO,KAAK,SAAS,MAAM,KAAK;AAC5B,WAAK,YAAY,GAAG;AACpB,WAAK,KAAK,KAAK,YAAY,CAAC;AAAA,IAChC;AACA,WAAO,EAAE,MAAM,eAAe,OAAO,MAAM,KAAK,KAAK,IAAI,KAAK,EAAE;AAAA,EACpE;AAAA,EACA,cAAc;AACV,UAAM,QAAQ,CAAC;AACf,UAAM,QAAQ,KAAK;AACnB,WAAO,KAAK,OAAO,GAAG;AAClB,YAAM,KAAK,KAAK,KAAK,CAAC;AAAA,IAC1B;AACA,WAAO,EAAE,MAAM,eAAe,OAAO,OAAO,KAAK,KAAK,IAAI,KAAK,EAAE;AAAA,EACrE;AAAA,EACA,OAAO;AACH,QAAI,KAAK,YAAY,GAAG;AACpB,aAAO,KAAK,UAAU;AAAA,IAC1B,OACK;AACD,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,EACJ;AAAA,EACA,YAAY;AACR,UAAM,QAAQ,KAAK;AACnB,YAAQ,KAAK,QAAQ,GAAG;AAAA,MACpB,KAAK;AACD,eAAO;AAAA,UACH,MAAM;AAAA,UACN,KAAK,KAAK,IAAI,KAAK;AAAA,QACvB;AAAA,MACJ,KAAK;AACD,eAAO,EAAE,MAAM,aAAa,KAAK,KAAK,IAAI,KAAK,EAAE;AAAA,MAErD,KAAK;AACD,gBAAQ,KAAK,QAAQ,GAAG;AAAA,UACpB,KAAK;AACD,mBAAO;AAAA,cACH,MAAM;AAAA,cACN,KAAK,KAAK,IAAI,KAAK;AAAA,YACvB;AAAA,UACJ,KAAK;AACD,mBAAO;AAAA,cACH,MAAM;AAAA,cACN,KAAK,KAAK,IAAI,KAAK;AAAA,YACvB;AAAA,QACR;AAEA,cAAM,MAAM,0BAA0B;AAAA,MAE1C,KAAK;AACD,aAAK,YAAY,GAAG;AACpB,YAAI;AACJ,gBAAQ,KAAK,QAAQ,GAAG;AAAA,UACpB,KAAK;AACD,mBAAO;AACP;AAAA,UACJ,KAAK;AACD,mBAAO;AACP;AAAA,QACR;AACA,sBAAc,IAAI;AAClB,cAAM,cAAc,KAAK,YAAY;AACrC,aAAK,YAAY,GAAG;AACpB,eAAO;AAAA,UACH;AAAA,UACA,OAAO;AAAA,UACP,KAAK,KAAK,IAAI,KAAK;AAAA,QACvB;AAAA,IACR;AAEA,WAAO,wBAAwB;AAAA,EACnC;AAAA,EACA,WAAW,iBAAiB,OAAO;AAC/B,QAAI,QAAQ;AACZ,UAAM,QAAQ,KAAK;AACnB,YAAQ,KAAK,QAAQ,GAAG;AAAA,MACpB,KAAK;AACD,gBAAQ;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AACA;AAAA,MACJ,KAAK;AACD,gBAAQ;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AACA;AAAA,MACJ,KAAK;AACD,gBAAQ;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AACA;AAAA,MACJ,KAAK;AACD,cAAM,UAAU,KAAK,qBAAqB;AAC1C,gBAAQ,KAAK,QAAQ,GAAG;AAAA,UACpB,KAAK;AACD,oBAAQ;AAAA,cACJ;AAAA,cACA,QAAQ;AAAA,YACZ;AACA;AAAA,UACJ,KAAK;AACD,gBAAI;AACJ,gBAAI,KAAK,QAAQ,GAAG;AAChB,uBAAS,KAAK,qBAAqB;AACnC,sBAAQ;AAAA,gBACJ;AAAA,gBACA;AAAA,cACJ;AAAA,YACJ,OACK;AACD,sBAAQ;AAAA,gBACJ;AAAA,gBACA,QAAQ;AAAA,cACZ;AAAA,YACJ;AACA,iBAAK,YAAY,GAAG;AACpB;AAAA,QACR;AAGA,YAAI,mBAAmB,QAAQ,UAAU,QAAW;AAChD,iBAAO;AAAA,QACX;AACA,sBAAc,KAAK;AACnB;AAAA,IACR;AAGA,QAAI,mBAAmB,QAAQ,UAAU,QAAW;AAChD,aAAO;AAAA,IACX;AAEA,QAAI,cAAc,KAAK,GAAG;AACtB,UAAI,KAAK,SAAS,CAAC,MAAM,KAAK;AAC1B,aAAK,YAAY,GAAG;AACpB,cAAM,SAAS;AAAA,MACnB,OACK;AACD,cAAM,SAAS;AAAA,MACnB;AACA,YAAM,OAAO;AACb,YAAM,MAAM,KAAK,IAAI,KAAK;AAC1B,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EACA,OAAO;AACH,QAAI;AACJ,UAAM,QAAQ,KAAK;AACnB,YAAQ,KAAK,SAAS,GAAG;AAAA,MACrB,KAAK;AACD,eAAO,KAAK,OAAO;AACnB;AAAA,MACJ,KAAK;AACD,eAAO,KAAK,WAAW;AACvB;AAAA,MACJ,KAAK;AACD,eAAO,KAAK,eAAe;AAC3B;AAAA,MACJ,KAAK;AACD,eAAO,KAAK,MAAM;AAClB;AAAA,IACR;AACA,QAAI,SAAS,UAAa,KAAK,mBAAmB,GAAG;AACjD,aAAO,KAAK,iBAAiB;AAAA,IACjC;AAEA,QAAI,cAAc,IAAI,GAAG;AACrB,WAAK,MAAM,KAAK,IAAI,KAAK;AACzB,UAAI,KAAK,aAAa,GAAG;AACrB,aAAK,aAAa,KAAK,WAAW;AAAA,MACtC;AACA,aAAO;AAAA,IACX;AAEA,WAAO,wBAAwB;AAAA,EACnC;AAAA,EACA,SAAS;AACL,SAAK,YAAY,GAAG;AACpB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,OAAO,CAAC,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,QAAQ,GAAG,GAAG,QAAQ,CAAC;AAAA,IAC1D;AAAA,EACJ;AAAA,EACA,aAAa;AACT,SAAK,YAAY,IAAI;AACrB,YAAQ,KAAK,SAAS,GAAG;AAAA,MACrB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,KAAK,kBAAkB;AAAA,MAClC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,KAAK,qBAAqB;AAAA,MACrC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,KAAK,kBAAkB;AAAA,MAClC,KAAK;AACD,eAAO,KAAK,wBAAwB;AAAA,MACxC,KAAK;AACD,eAAO,KAAK,iBAAiB;AAAA,MACjC,KAAK;AACD,eAAO,KAAK,sBAAsB;AAAA,MACtC,KAAK;AACD,eAAO,KAAK,gCAAgC;AAAA,MAChD;AACI,eAAO,KAAK,mBAAmB;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,oBAAoB;AAChB,UAAM,QAAQ,KAAK,gBAAgB;AACnC,WAAO,EAAE,MAAM,sBAAsB,MAAa;AAAA,EACtD;AAAA,EACA,uBAAuB;AACnB,QAAI;AACJ,QAAI,aAAa;AACjB,YAAQ,KAAK,QAAQ,GAAG;AAAA,MACpB,KAAK;AACD,cAAM;AACN;AAAA,MACJ,KAAK;AACD,cAAM;AACN,qBAAa;AACb;AAAA,MACJ,KAAK;AACD,cAAM;AACN;AAAA,MACJ,KAAK;AACD,cAAM;AACN,qBAAa;AACb;AAAA,MACJ,KAAK;AACD,cAAM;AACN;AAAA,MACJ,KAAK;AACD,cAAM;AACN,qBAAa;AACb;AAAA,IACR;AAEA,QAAI,cAAc,GAAG,GAAG;AACpB,aAAO,EAAE,MAAM,OAAO,OAAO,KAAK,WAAuB;AAAA,IAC7D;AAEA,WAAO,wBAAwB;AAAA,EACnC;AAAA,EACA,oBAAoB;AAChB,QAAI;AACJ,YAAQ,KAAK,QAAQ,GAAG;AAAA,MACpB,KAAK;AACD,qBAAa,GAAG,IAAI;AACpB;AAAA,MACJ,KAAK;AACD,qBAAa,GAAG,IAAI;AACpB;AAAA,MACJ,KAAK;AACD,qBAAa,GAAG,IAAI;AACpB;AAAA,MACJ,KAAK;AACD,qBAAa,GAAG,GAAI;AACpB;AAAA,MACJ,KAAK;AACD,qBAAa,GAAG,IAAI;AACpB;AAAA,IACR;AAEA,QAAI,cAAc,UAAU,GAAG;AAC3B,aAAO,EAAE,MAAM,aAAa,OAAO,WAAW;AAAA,IAClD;AAEA,WAAO,wBAAwB;AAAA,EACnC;AAAA,EACA,0BAA0B;AACtB,SAAK,YAAY,GAAG;AACpB,UAAM,SAAS,KAAK,QAAQ;AAC5B,QAAI,WAAW,KAAK,MAAM,MAAM,OAAO;AACnC,YAAM,MAAM,UAAU;AAAA,IAC1B;AACA,UAAM,aAAa,OAAO,YAAY,EAAE,WAAW,CAAC,IAAI;AACxD,WAAO,EAAE,MAAM,aAAa,OAAO,WAAW;AAAA,EAClD;AAAA,EACA,mBAAmB;AAGf,SAAK,YAAY,GAAG;AACpB,WAAO,EAAE,MAAM,aAAa,OAAO,GAAG,IAAI,EAAE;AAAA,EAChD;AAAA,EACA,wBAAwB;AACpB,SAAK,YAAY,GAAG;AACpB,WAAO,KAAK,eAAe,CAAC;AAAA,EAChC;AAAA,EACA,kCAAkC;AAC9B,SAAK,YAAY,GAAG;AACpB,WAAO,KAAK,eAAe,CAAC;AAAA,EAChC;AAAA,EACA,qBAAqB;AAGjB,UAAM,cAAc,KAAK,QAAQ;AACjC,WAAO,EAAE,MAAM,aAAa,OAAO,GAAG,WAAW,EAAE;AAAA,EACvD;AAAA,EACA,4BAA4B;AACxB,YAAQ,KAAK,SAAS,GAAG;AAAA,MAErB,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AACD,cAAM,MAAM,KAAK;AAAA,MACrB;AACI,cAAM,WAAW,KAAK,QAAQ;AAC9B,eAAO,EAAE,MAAM,aAAa,OAAO,GAAG,QAAQ,EAAE;AAAA,IACxD;AAAA,EACJ;AAAA,EACA,iBAAiB;AACb,UAAM,MAAM,CAAC;AACb,QAAI,aAAa;AACjB,SAAK,YAAY,GAAG;AACpB,QAAI,KAAK,SAAS,CAAC,MAAM,KAAK;AAC1B,WAAK,YAAY,GAAG;AACpB,mBAAa;AAAA,IACjB;AACA,WAAO,KAAK,YAAY,GAAG;AACvB,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,mBAAmB,KAAK,SAAS;AACvC,UAAI,YAAY,IAAI,KAAK,KAAK,YAAY,GAAG;AACzC,aAAK,YAAY,GAAG;AACpB,cAAM,KAAK,KAAK,UAAU;AAC1B,cAAM,iBAAiB,GAAG,SAAS;AAEnC,YAAI,YAAY,EAAE,GAAG;AACjB,cAAI,GAAG,QAAQ,KAAK,OAAO;AACvB,kBAAM,MAAM,uCAAuC;AAAA,UACvD;AACA,cAAI,KAAK,EAAE,MAAM,KAAK,OAAO,IAAI,GAAG,MAAM,CAAC;AAAA,QAC/C,OACK;AAED,sBAAY,KAAK,OAAO,GAAG;AAC3B,cAAI,KAAK,GAAG,GAAG,CAAC;AAChB,sBAAY,GAAG,OAAO,GAAG;AAAA,QAC7B;AAAA,MACJ,OACK;AACD,oBAAY,KAAK,OAAO,GAAG;AAAA,MAC/B;AAAA,IACJ;AACA,SAAK,YAAY,GAAG;AACpB,WAAO,EAAE,MAAM,OAAO,YAAwB,OAAO,IAAI;AAAA,EAC7D;AAAA,EACA,YAAY;AACR,YAAQ,KAAK,SAAS,GAAG;AAAA,MAErB,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AACD,cAAM,MAAM,KAAK;AAAA,MACrB,KAAK;AACD,eAAO,KAAK,YAAY;AAAA,MAC5B;AACI,eAAO,KAAK,0BAA0B;AAAA,IAC9C;AAAA,EACJ;AAAA,EACA,cAAc;AACV,SAAK,YAAY,IAAI;AACrB,YAAQ,KAAK,SAAS,GAAG;AAAA,MAGrB,KAAK;AACD,aAAK,YAAY,GAAG;AACpB,eAAO,EAAE,MAAM,aAAa,OAAO,GAAG,IAAQ,EAAE;AAAA,MACpD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,KAAK,qBAAqB;AAAA,MACrC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,KAAK,kBAAkB;AAAA,MAClC,KAAK;AACD,eAAO,KAAK,wBAAwB;AAAA,MACxC,KAAK;AACD,eAAO,KAAK,iBAAiB;AAAA,MACjC,KAAK;AACD,eAAO,KAAK,sBAAsB;AAAA,MACtC,KAAK;AACD,eAAO,KAAK,gCAAgC;AAAA,MAChD;AACI,eAAO,KAAK,mBAAmB;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,QAAQ;AACJ,QAAI,YAAY;AAChB,SAAK,YAAY,GAAG;AACpB,YAAQ,KAAK,SAAS,CAAC,GAAG;AAAA,MACtB,KAAK;AACD,aAAK,YAAY,GAAG;AACpB,aAAK,YAAY,GAAG;AACpB,oBAAY;AACZ;AAAA,MACJ;AACI,aAAK;AACL;AAAA,IACR;AACA,UAAM,QAAQ,KAAK,YAAY;AAC/B,SAAK,YAAY,GAAG;AACpB,UAAM,WAAW;AAAA,MACb,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ;AACA,QAAI,WAAW;AACX,eAAS,KAAK,IAAI,KAAK;AAAA,IAC3B;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAAkB;AACd,QAAI,SAAS,KAAK,QAAQ;AAG1B,QAAI,qBAAqB,KAAK,MAAM,MAAM,OAAO;AAC7C,YAAM,MAAM,8BAA8B;AAAA,IAC9C;AACA,WAAO,eAAe,KAAK,KAAK,SAAS,CAAC,CAAC,GAAG;AAC1C,gBAAU,KAAK,QAAQ;AAAA,IAC3B;AACA,WAAO,SAAS,QAAQ,EAAE;AAAA,EAC9B;AAAA,EACA,uBAAuB;AACnB,QAAI,SAAS,KAAK,QAAQ;AAC1B,QAAI,eAAe,KAAK,MAAM,MAAM,OAAO;AACvC,YAAM,MAAM,sBAAsB;AAAA,IACtC;AACA,WAAO,eAAe,KAAK,KAAK,SAAS,CAAC,CAAC,GAAG;AAC1C,gBAAU,KAAK,QAAQ;AAAA,IAC3B;AACA,WAAO,SAAS,QAAQ,EAAE;AAAA,EAC9B;AAAA,EACA,mBAAmB;AACf,UAAM,WAAW,KAAK,QAAQ;AAC9B,YAAQ,UAAU;AAAA,MAEd,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAED,cAAM,MAAM,KAAK;AAAA,MACrB;AACI,eAAO,EAAE,MAAM,aAAa,OAAO,GAAG,QAAQ,EAAE;AAAA,IACxD;AAAA,EACJ;AAAA,EACA,eAAe;AACX,YAAQ,KAAK,SAAS,CAAC,GAAG;AAAA,MACtB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,MACX;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACA,cAAc;AACV,WAAO,KAAK,SAAS,MAAM,OAAO,KAAK,YAAY,CAAC;AAAA,EACxD;AAAA,EACA,UAAU;AACN,WAAO,eAAe,KAAK,KAAK,SAAS,CAAC,CAAC;AAAA,EAC/C;AAAA,EACA,YAAY,UAAU,GAAG;AACrB,YAAQ,KAAK,SAAS,OAAO,GAAG;AAAA,MAC5B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,MACX;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACA,SAAS;AACL,WAAO,KAAK,OAAO,KAAK,KAAK,YAAY;AAAA,EAC7C;AAAA,EACA,SAAS;AACL,QAAI,KAAK,mBAAmB,GAAG;AAC3B,aAAO;AAAA,IACX;AACA,YAAQ,KAAK,SAAS,CAAC,GAAG;AAAA,MACtB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MAEL,KAAK;AACD,eAAO;AAAA,MACX;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACA,cAAc;AACV,YAAQ,KAAK,SAAS,CAAC,GAAG;AAAA,MACtB,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,MAEX,KAAK;AACD,gBAAQ,KAAK,SAAS,CAAC,GAAG;AAAA,UACtB,KAAK;AAAA,UACL,KAAK;AACD,mBAAO;AAAA,UACX;AACI,mBAAO;AAAA,QACf;AAAA,MAEJ,KAAK;AACD,eAAQ,KAAK,SAAS,CAAC,MAAM,QACxB,KAAK,SAAS,CAAC,MAAM,OAAO,KAAK,SAAS,CAAC,MAAM;AAAA,MAC1D;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACA,eAAe;AACX,UAAM,YAAY,KAAK,UAAU;AACjC,QAAI;AACA,aAAO,KAAK,WAAW,IAAI,MAAM;AAAA,IACrC,SACO,GAAG;AACN,aAAO;AAAA,IACX,UACA;AACI,WAAK,aAAa,SAAS;AAAA,IAC/B;AAAA,EACJ;AAAA,EACA,qBAAqB;AACjB,YAAQ,KAAK,SAAS,GAAG;AAAA,MACrB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,MACX;AACI,eAAO;AAAA,IACf;AAAA,EACJ;AAAA,EACA,eAAe,SAAS;AACpB,QAAI,YAAY;AAChB,aAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,YAAM,UAAU,KAAK,QAAQ;AAC7B,UAAI,gBAAgB,KAAK,OAAO,MAAM,OAAO;AACzC,cAAM,MAAM,+BAA+B;AAAA,MAC/C;AACA,mBAAa;AAAA,IACjB;AACA,UAAM,WAAW,SAAS,WAAW,EAAE;AACvC,WAAO,EAAE,MAAM,aAAa,OAAO,SAAS;AAAA,EAChD;AAAA,EACA,SAAS,UAAU,GAAG;AAClB,WAAO,KAAK,MAAM,KAAK,MAAM,OAAO;AAAA,EACxC;AAAA,EACA,UAAU;AACN,UAAM,WAAW,KAAK,SAAS,CAAC;AAChC,SAAK,YAAY,MAAS;AAC1B,WAAO;AAAA,EACX;AAAA,EACA,YAAY,MAAM;AACd,QAAI,SAAS,UAAa,KAAK,MAAM,KAAK,GAAG,MAAM,MAAM;AACrD,YAAM,MAAM,gBACR,OACA,mBACA,KAAK,MAAM,KAAK,GAAG,IACnB,kBACA,KAAK,GAAG;AAAA,IAChB;AACA,QAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAC/B,YAAM,MAAM,yBAAyB;AAAA,IACzC;AACA,SAAK;AAAA,EACT;AAAA,EACA,IAAI,OAAO;AACP,WAAO,EAAE,OAAc,KAAK,KAAK,IAAI;AAAA,EACzC;AACJ;;;ACztBO,IAAM,oBAAN,MAAwB;AAAA,EAC3B,cAAc,MAAM;AAChB,eAAW,OAAO,MAAM;AACpB,YAAM,QAAQ,KAAK,GAAG;AAEtB,UAAI,KAAK,eAAe,GAAG,GAAG;AAC1B,YAAI,MAAM,SAAS,QAAW;AAC1B,eAAK,MAAM,KAAK;AAAA,QACpB,WACS,MAAM,QAAQ,KAAK,GAAG;AAC3B,gBAAM,QAAQ,CAAC,aAAa;AACxB,iBAAK,MAAM,QAAQ;AAAA,UACvB,GAAG,IAAI;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,MAAM,MAAM;AACR,YAAQ,KAAK,MAAM;AAAA,MACf,KAAK;AACD,aAAK,aAAa,IAAI;AACtB;AAAA,MACJ,KAAK;AACD,aAAK,WAAW,IAAI;AACpB;AAAA,MACJ,KAAK;AACD,aAAK,iBAAiB,IAAI;AAC1B;AAAA,MACJ,KAAK;AACD,aAAK,iBAAiB,IAAI;AAC1B;AAAA,MACJ,KAAK;AACD,aAAK,iBAAiB,IAAI;AAC1B;AAAA,MACJ,KAAK;AACD,aAAK,eAAe,IAAI;AACxB;AAAA,MACJ,KAAK;AACD,aAAK,kBAAkB,IAAI;AAC3B;AAAA,MACJ,KAAK;AACD,aAAK,qBAAqB,IAAI;AAC9B;AAAA,MACJ,KAAK;AACD,aAAK,eAAe,IAAI;AACxB;AAAA,MACJ,KAAK;AACD,aAAK,uBAAuB,IAAI;AAChC;AAAA,MACJ,KAAK;AACD,aAAK,eAAe,IAAI;AACxB;AAAA,MACJ,KAAK;AACD,aAAK,SAAS,IAAI;AAClB;AAAA,MACJ,KAAK;AACD,aAAK,WAAW,IAAI;AACpB;AAAA,MACJ,KAAK;AACD,aAAK,wBAAwB,IAAI;AACjC;AAAA,MACJ,KAAK;AACD,aAAK,gBAAgB,IAAI;AACzB;AAAA,IACR;AACA,SAAK,cAAc,IAAI;AAAA,EAC3B;AAAA,EACA,aAAa,MAAM;AAAA,EAAE;AAAA,EACrB,WAAW,MAAM;AAAA,EAAE;AAAA,EACnB,iBAAiB,MAAM;AAAA,EAAE;AAAA,EACzB,iBAAiB,MAAM;AAAA,EAAE;AAAA;AAAA,EAEzB,iBAAiB,MAAM;AAAA,EAAE;AAAA,EACzB,eAAe,MAAM;AAAA,EAAE;AAAA,EACvB,kBAAkB,MAAM;AAAA,EAAE;AAAA,EAC1B,qBAAqB,MAAM;AAAA,EAAE;AAAA,EAC7B,eAAe,MAAM;AAAA,EAAE;AAAA,EACvB,uBAAuB,MAAM;AAAA,EAAE;AAAA;AAAA,EAE/B,eAAe,MAAM;AAAA,EAAE;AAAA,EACvB,SAAS,MAAM;AAAA,EAAE;AAAA,EACjB,WAAW,MAAM;AAAA,EAAE;AAAA,EACnB,wBAAwB,MAAM;AAAA,EAAE;AAAA,EAChC,gBAAgB,MAAM;AAAA,EAAE;AAC5B;;;ACnFA,IAAI,iBAAiB,CAAC;AACtB,IAAM,eAAe,IAAI,aAAa;AAC/B,SAAS,aAAa,QAAQ;AACjC,QAAM,YAAY,OAAO,SAAS;AAClC,MAAI,eAAe,eAAe,SAAS,GAAG;AAC1C,WAAO,eAAe,SAAS;AAAA,EACnC,OACK;AACD,UAAM,YAAY,aAAa,QAAQ,SAAS;AAChD,mBAAe,SAAS,IAAI;AAC5B,WAAO;AAAA,EACX;AACJ;AACO,SAAS,yBAAyB;AACrC,mBAAiB,CAAC;AACtB;;;ACXA,IAAM,yBAAyB;AACxB,IAAM,8BAA8B;AACpC,SAAS,8BAA8B,QAAQ,sBAAsB,OAAO;AAC/E,MAAI;AACA,UAAM,MAAM,aAAa,MAAM;AAC/B,UAAM,aAAa,0BAA0B,IAAI,OAAO,CAAC,GAAG,IAAI,MAAM,UAAU;AAChF,WAAO;AAAA,EACX,SACO,GAAG;AAIN,QAAI,EAAE,YAAY,wBAAwB;AACtC,UAAI,qBAAqB;AACrB,sBAAc,GAAG,2BAA2B,0BACb,OAAO,SAAS,CAAC;AAAA;AAAA;AAAA,2FAGiD;AAAA,MACrG;AAAA,IACJ,OACK;AACD,UAAI,YAAY;AAChB,UAAI,qBAAqB;AACrB,oBACI;AAAA,MAER;AACA,kBAAY,GAAG,2BAA2B;AAAA,qBACf,OAAO,SAAS,CAAC;AAAA;AAAA,6EAGxC,SAAS;AAAA,IACjB;AAAA,EACJ;AACA,SAAO,CAAC;AACZ;AACO,SAAS,0BAA0B,KAAK,QAAQ,YAAY;AAC/D,UAAQ,IAAI,MAAM;AAAA,IACd,KAAK;AACD,eAAS,IAAI,GAAG,IAAI,IAAI,MAAM,QAAQ,KAAK;AACvC,kCAA0B,IAAI,MAAM,CAAC,GAAG,QAAQ,UAAU;AAAA,MAC9D;AACA;AAAA,IACJ,KAAK;AACD,YAAM,QAAQ,IAAI;AAClB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,cAAM,OAAO,MAAM,CAAC;AAEpB,gBAAQ,KAAK,MAAM;AAAA,UACf,KAAK;AAAA,UAIL,KAAK;AAAA,UAEL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD;AAAA,QACR;AACA,cAAM,OAAO;AACb,gBAAQ,KAAK,MAAM;AAAA,UACf,KAAK;AACD,oCAAwB,KAAK,OAAO,QAAQ,UAAU;AACtD;AAAA,UACJ,KAAK;AACD,gBAAI,KAAK,eAAe,MAAM;AAC1B,oBAAM,MAAM,sBAAsB;AAAA,YACtC;AACA,4BAAQ,KAAK,OAAO,CAAC,SAAS;AAC1B,kBAAI,OAAO,SAAS,UAAU;AAC1B,wCAAwB,MAAM,QAAQ,UAAU;AAAA,cACpD,OACK;AAED,sBAAM,QAAQ;AAEd,oBAAI,eAAe,MAAM;AACrB,2BAAS,YAAY,MAAM,MAAM,aAAa,MAAM,IAAI,aAAa;AACjE,4CAAwB,WAAW,QAAQ,UAAU;AAAA,kBACzD;AAAA,gBACJ,OAEK;AAED,2BAAS,YAAY,MAAM,MAAM,aAAa,MAAM,MAAM,YAAY,oBAAoB,aAAa;AACnG,4CAAwB,WAAW,QAAQ,UAAU;AAAA,kBACzD;AAEA,sBAAI,MAAM,MAAM,oBAAoB;AAChC,0BAAM,cAAc,MAAM,QAAQ,qBAC5B,MAAM,OACN;AACN,0BAAM,cAAc,MAAM;AAC1B,0BAAM,YAAY,yBAAyB,WAAW;AACtD,0BAAM,YAAY,yBAAyB,WAAW;AACtD,6BAAS,aAAa,WAAW,cAAc,WAAW,cAAc;AACpE,6BAAO,UAAU,IAAI;AAAA,oBACzB;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ,CAAC;AACD;AAAA,UACJ,KAAK;AACD,sCAA0B,KAAK,OAAO,QAAQ,UAAU;AACxD;AAAA,UAEJ;AACI,kBAAM,MAAM,sBAAsB;AAAA,QAC1C;AAEA,cAAM,uBAAuB,KAAK,eAAe,UAAa,KAAK,WAAW,YAAY;AAC1F;AAAA;AAAA;AAAA,UAGC,KAAK,SAAS,WAAW,gBAAgB,IAAI,MAAM;AAAA,UAE/C,KAAK,SAAS,WAAW,yBAAyB;AAAA,UAAQ;AAC3D;AAAA,QACJ;AAAA,MACJ;AACA;AAAA,IAEJ;AACI,YAAM,MAAM,uBAAuB;AAAA,EAC3C;AAEA,SAAO,eAAO,MAAM;AACxB;AACA,SAAS,wBAAwB,MAAM,QAAQ,YAAY;AACvD,QAAM,mBAAmB,yBAAyB,IAAI;AACtD,SAAO,gBAAgB,IAAI;AAC3B,MAAI,eAAe,MAAM;AACrB,qBAAiB,MAAM,MAAM;AAAA,EACjC;AACJ;AACA,SAAS,iBAAiB,MAAM,QAAQ;AACpC,QAAM,OAAO,OAAO,aAAa,IAAI;AACrC,QAAM,YAAY,KAAK,YAAY;AAEnC,MAAI,cAAc,MAAM;AACpB,UAAM,mBAAmB,yBAAyB,UAAU,WAAW,CAAC,CAAC;AACzE,WAAO,gBAAgB,IAAI;AAAA,EAC/B,OACK;AACD,UAAM,YAAY,KAAK,YAAY;AACnC,QAAI,cAAc,MAAM;AACpB,YAAM,mBAAmB,yBAAyB,UAAU,WAAW,CAAC,CAAC;AACzE,aAAO,gBAAgB,IAAI;AAAA,IAC/B;AAAA,EACJ;AACJ;AACA,SAAS,SAAS,SAAS,iBAAiB;AACxC,SAAO,aAAK,QAAQ,OAAO,CAAC,gBAAgB;AACxC,QAAI,OAAO,gBAAgB,UAAU;AACjC,aAAO,iBAAS,iBAAiB,WAAW;AAAA,IAChD,OACK;AAED,YAAM,QAAQ;AACd,aAAQ,aAAK,iBAAiB,CAAC,eAAe,MAAM,QAAQ,cAAc,cAAc,MAAM,EAAE,MAAM;AAAA,IAC1G;AAAA,EACJ,CAAC;AACL;AACA,SAAS,gBAAgB,KAAK;AAC1B,QAAM,aAAa,IAAI;AACvB,MAAI,cAAc,WAAW,YAAY,GAAG;AACxC,WAAO;AAAA,EACX;AACA,MAAI,CAAC,IAAI,OAAO;AACZ,WAAO;AAAA,EACX;AACA,SAAO,gBAAQ,IAAI,KAAK,IAClB,cAAM,IAAI,OAAO,eAAe,IAChC,gBAAgB,IAAI,KAAK;AACnC;AACA,IAAM,iBAAN,cAA6B,kBAAkB;AAAA,EAC3C,YAAY,iBAAiB;AACzB,UAAM;AACN,SAAK,kBAAkB;AACvB,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,cAAc,MAAM;AAEhB,QAAI,KAAK,UAAU,MAAM;AACrB;AAAA,IACJ;AAGA,YAAQ,KAAK,MAAM;AAAA,MACf,KAAK;AACD,aAAK,eAAe,IAAI;AACxB;AAAA,MACJ,KAAK;AACD,aAAK,uBAAuB,IAAI;AAChC;AAAA,IACR;AACA,UAAM,cAAc,IAAI;AAAA,EAC5B;AAAA,EACA,eAAe,MAAM;AACjB,QAAI,iBAAS,KAAK,iBAAiB,KAAK,KAAK,GAAG;AAC5C,WAAK,QAAQ;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,SAAS,MAAM;AACX,QAAI,KAAK,YAAY;AACjB,UAAI,SAAS,MAAM,KAAK,eAAe,MAAM,QAAW;AACpD,aAAK,QAAQ;AAAA,MACjB;AAAA,IACJ,OACK;AACD,UAAI,SAAS,MAAM,KAAK,eAAe,MAAM,QAAW;AACpD,aAAK,QAAQ;AAAA,MACjB;AAAA,IACJ;AAAA,EACJ;AACJ;AACO,SAAS,iBAAiB,WAAW,SAAS;AACjD,MAAI,mBAAmB,QAAQ;AAC3B,UAAM,MAAM,aAAa,OAAO;AAChC,UAAM,iBAAiB,IAAI,eAAe,SAAS;AACnD,mBAAe,MAAM,GAAG;AACxB,WAAO,eAAe;AAAA,EAC1B,OACK;AACD,WAAQ,aAAK,SAAS,CAAC,SAAS;AAC5B,aAAO,iBAAS,WAAW,KAAK,WAAW,CAAC,CAAC;AAAA,IACjD,CAAC,MAAM;AAAA,EACX;AACJ;;;ACxOA,IAAM,UAAU;AACT,IAAM,eAAe;AACrB,IAAM,QAAQ;AACd,IAAI,iBAAiB,OAAO,IAAI,OAAO,MAAM,EAAE,WAAW;AAO1D,SAAS,kBAAkB,YAAY,SAAS;AACnD,YAAU,iBAAS,SAAS;AAAA,IACxB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,0BAA0B,CAAC,MAAM,IAAI;AAAA,IACrC,QAAQ,CAAC,KAAK,WAAW,OAAO;AAAA,EACpC,CAAC;AACD,QAAM,SAAS,QAAQ;AACvB,SAAO,mCAAmC,MAAM;AAC5C,oCAAgC;AAAA,EACpC,CAAC;AACD,MAAI;AACJ,SAAO,mBAAmB,MAAM;AAC5B,wBAAoB,eAAO,YAAY,CAAC,aAAa;AACjD,aAAO,SAAS,OAAO,MAAM,MAAM;AAAA,IACvC,CAAC;AAAA,EACL,CAAC;AACD,MAAI,YAAY;AAChB,MAAI;AACJ,SAAO,sBAAsB,MAAM;AAC/B,gBAAY;AACZ,6BAAyB,YAAI,mBAAmB,CAAC,aAAa;AAC1D,YAAM,cAAc,SAAS,OAAO;AAEpC,UAAI,iBAAS,WAAW,GAAG;AACvB,cAAM,eAAe,YAAY;AACjC,YAAI,aAAa,WAAW;AAAA,QAExB,iBAAiB,OACjB,iBAAiB,OACjB,iBAAiB,OACjB,CAAC,YAAY,YAAY;AACzB,iBAAO;AAAA,QACX,WACS,aAAa,WAAW,KAC7B,aAAa,CAAC,MAAM;AAAA,QAEpB,CAAC,iBAAS;AAAA,UACN;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ,GAAG,aAAa,CAAC,CAAC,GAAG;AAIrB,iBAAO,aAAa,CAAC;AAAA,QACzB,OACK;AACD,iBAAO,QAAQ,YACT,cAAc,WAAW,IACzB,gBAAgB,WAAW;AAAA,QACrC;AAAA,MACJ,WACS,mBAAW,WAAW,GAAG;AAC9B,oBAAY;AAEZ,eAAO,EAAE,MAAM,YAAY;AAAA,MAC/B,WACS,OAAO,gBAAgB,UAAU;AACtC,oBAAY;AAEZ,eAAO;AAAA,MACX,WACS,OAAO,gBAAgB,UAAU;AACtC,YAAI,YAAY,WAAW,GAAG;AAC1B,iBAAO;AAAA,QACX,OACK;AACD,gBAAM,sBAAsB,YAAY,QAAQ,uBAAuB,MAAM;AAC7E,gBAAM,gBAAgB,IAAI,OAAO,mBAAmB;AACpD,iBAAO,QAAQ,YACT,cAAc,aAAa,IAC3B,gBAAgB,aAAa;AAAA,QACvC;AAAA,MACJ,OACK;AACD,cAAM,MAAM,sBAAsB;AAAA,MACtC;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,SAAO,gBAAgB,MAAM;AACzB,uBAAmB,YAAI,mBAAmB,CAAC,aAAa,SAAS,YAAY;AAC7E,wBAAoB,YAAI,mBAAmB,CAAC,UAAU;AAClD,YAAM,YAAY,MAAM;AAExB,UAAI,cAAc,MAAM,SAAS;AAC7B,eAAO;AAAA,MACX,WACS,iBAAS,SAAS,GAAG;AAC1B,eAAO;AAAA,MACX,WACS,oBAAY,SAAS,GAAG;AAC7B,eAAO;AAAA,MACX,OACK;AACD,cAAM,MAAM,sBAAsB;AAAA,MACtC;AAAA,IACJ,CAAC;AACD,kCAA8B,YAAI,mBAAmB,CAAC,UAAU;AAC5D,YAAM,gBAAgB,MAAM;AAC5B,UAAI,eAAe;AACf,cAAM,kBAAkB,gBAAQ,aAAa,IACvC,YAAI,eAAe,CAAC,SAAS,gBAAQ,mBAAmB,IAAI,CAAC,IAC7D,CAAC,gBAAQ,mBAAmB,aAAa,CAAC;AAChD,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AACD,2BAAuB,YAAI,mBAAmB,CAAC,UAAU,MAAM,SAAS;AACxE,0BAAsB,YAAI,mBAAmB,CAAC,UAAU,YAAI,OAAO,UAAU,CAAC;AAAA,EAClF,CAAC;AACD,MAAI;AACJ,SAAO,4BAA4B,MAAM;AACrC,UAAM,0BAA0B,aAAa,QAAQ,wBAAwB;AAC7E,oCAAgC,YAAI,mBAAmB,CAAC,YAAY,KAAK;AACzE,QAAI,QAAQ,qBAAqB,cAAc;AAC3C,sCAAgC,YAAI,mBAAmB,CAAC,YAAY;AAChE,YAAI,YAAI,SAAS,aAAa,GAAG;AAC7B,iBAAO,CAAC,CAAC,QAAQ;AAAA,QACrB,OACK;AACD,iBAAQ,sBAAsB,SAAS,uBAAuB,MAAM,SAChE,iBAAiB,yBAAyB,QAAQ,OAAO;AAAA,QACjE;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACD,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,SAAO,mBAAmB,MAAM;AAC5B,2BAAuB,YAAI,mBAAmB,eAAe;AAC7D,wBAAoB,YAAI,wBAAwB,cAAc;AAC9D,kBAAc,eAAO,mBAAmB,CAAC,KAAK,UAAU;AACpD,YAAM,YAAY,MAAM;AACxB,UAAI,iBAAS,SAAS,KAAK,EAAE,cAAc,MAAM,UAAU;AACvD,YAAI,SAAS,IAAI,CAAC;AAAA,MACtB;AACA,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AACL,yBAAqB,YAAI,wBAAwB,CAAC,GAAG,QAAQ;AACzD,aAAO;AAAA,QACH,SAAS,uBAAuB,GAAG;AAAA,QACnC,WAAW,4BAA4B,GAAG;AAAA,QAC1C,mBAAmB,8BAA8B,GAAG;AAAA,QACpD,UAAU,qBAAqB,GAAG;AAAA,QAClC,OAAO,kBAAkB,GAAG;AAAA,QAC5B,OAAO,kBAAkB,GAAG;AAAA,QAC5B,MAAM,qBAAqB,GAAG;AAAA,QAC9B,KAAK,oBAAoB,GAAG;AAAA,QAC5B,cAAc,iBAAiB,GAAG;AAAA,QAClC,WAAW,kBAAkB,GAAG;AAAA,MACpC;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,MAAI,iBAAiB;AACrB,MAAI,+BAA+B,CAAC;AACpC,MAAI,CAAC,QAAQ,UAAU;AACnB,WAAO,2BAA2B,MAAM;AACpC,qCAA+B,eAAO,mBAAmB,CAAC,QAAQ,aAAa,QAAQ;AACnF,YAAI,OAAO,YAAY,YAAY,UAAU;AACzC,gBAAM,WAAW,YAAY,QAAQ,WAAW,CAAC;AACjD,gBAAM,eAAe,yBAAyB,QAAQ;AACtD,2BAAiB,QAAQ,cAAc,mBAAmB,GAAG,CAAC;AAAA,QAClE,WACS,gBAAQ,YAAY,gBAAgB,GAAG;AAC5C,cAAI;AACJ,0BAAQ,YAAY,kBAAkB,CAAC,cAAc;AACjD,kBAAM,WAAW,OAAO,cAAc,WAChC,UAAU,WAAW,CAAC,IACtB;AACN,kBAAM,mBAAmB,yBAAyB,QAAQ;AAK1D,gBAAI,qBAAqB,kBAAkB;AACvC,iCAAmB;AACnB,+BAAiB,QAAQ,kBAAkB,mBAAmB,GAAG,CAAC;AAAA,YACtE;AAAA,UACJ,CAAC;AAAA,QACL,WACS,iBAAS,YAAY,OAAO,GAAG;AACpC,cAAI,YAAY,QAAQ,SAAS;AAC7B,6BAAiB;AACjB,gBAAI,QAAQ,qBAAqB;AAC7B,0BAAY,GAAG,2BAA2B,wBACb,YAAY,QAAQ,SAAS,CAAC;AAAA;AAAA;AAAA,gGAG2C;AAAA,YAC1G;AAAA,UACJ,OACK;AACD,kBAAM,iBAAiB,8BAA8B,YAAY,SAAS,QAAQ,mBAAmB;AAIrG,gBAAI,gBAAQ,cAAc,GAAG;AAIzB,+BAAiB;AAAA,YACrB;AACA,4BAAQ,gBAAgB,CAAC,SAAS;AAC9B,+BAAiB,QAAQ,MAAM,mBAAmB,GAAG,CAAC;AAAA,YAC1D,CAAC;AAAA,UACL;AAAA,QACJ,OACK;AACD,cAAI,QAAQ,qBAAqB;AAC7B,wBAAY,GAAG,2BAA2B,gBACrB,YAAY,IAAI;AAAA;AAAA,+FAEgE;AAAA,UACzG;AACA,2BAAiB;AAAA,QACrB;AACA,eAAO;AAAA,MACX,GAAG,CAAC,CAAC;AAAA,IACT,CAAC;AAAA,EACL;AACA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;AACO,SAAS,iBAAiB,YAAY,iBAAiB;AAC1D,MAAI,SAAS,CAAC;AACd,QAAM,gBAAgB,oBAAoB,UAAU;AACpD,WAAS,OAAO,OAAO,cAAc,MAAM;AAC3C,QAAM,gBAAgB,oBAAoB,cAAc,KAAK;AAC7D,QAAM,kBAAkB,cAAc;AACtC,WAAS,OAAO,OAAO,cAAc,MAAM;AAC3C,WAAS,OAAO,OAAO,sBAAsB,eAAe,CAAC;AAC7D,WAAS,OAAO,OAAO,qBAAqB,eAAe,CAAC;AAC5D,WAAS,OAAO,OAAO,wBAAwB,iBAAiB,eAAe,CAAC;AAChF,WAAS,OAAO,OAAO,wBAAwB,eAAe,CAAC;AAC/D,SAAO;AACX;AACA,SAAS,sBAAsB,YAAY;AACvC,MAAI,SAAS,CAAC;AACd,QAAM,qBAAqB,eAAO,YAAY,CAAC,gBAAgB,iBAAS,YAAY,OAAO,CAAC,CAAC;AAC7F,WAAS,OAAO,OAAO,qBAAqB,kBAAkB,CAAC;AAC/D,WAAS,OAAO,OAAO,uBAAuB,kBAAkB,CAAC;AACjE,WAAS,OAAO,OAAO,qBAAqB,kBAAkB,CAAC;AAC/D,WAAS,OAAO,OAAO,sBAAsB,kBAAkB,CAAC;AAChE,WAAS,OAAO,OAAO,sBAAsB,kBAAkB,CAAC;AAChE,SAAO;AACX;AACO,SAAS,oBAAoB,YAAY;AAC5C,QAAM,+BAA+B,eAAO,YAAY,CAAC,aAAa;AAClE,WAAO,CAAC,YAAI,UAAU,OAAO;AAAA,EACjC,CAAC;AACD,QAAM,SAAS,YAAI,8BAA8B,CAAC,aAAa;AAC3D,WAAO;AAAA,MACH,SAAS,mBACL,SAAS,OACT;AAAA,MACJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,QAAM,QAAQ,mBAAW,YAAY,4BAA4B;AACjE,SAAO,EAAE,QAAQ,MAAM;AAC3B;AACO,SAAS,oBAAoB,YAAY;AAC5C,QAAM,+BAA+B,eAAO,YAAY,CAAC,aAAa;AAClE,UAAM,UAAU,SAAS,OAAO;AAChC,WAAQ,CAAC,iBAAS,OAAO,KACrB,CAAC,mBAAW,OAAO,KACnB,CAAC,YAAI,SAAS,MAAM,KACpB,CAAC,iBAAS,OAAO;AAAA,EACzB,CAAC;AACD,QAAM,SAAS,YAAI,8BAA8B,CAAC,aAAa;AAC3D,WAAO;AAAA,MACH,SAAS,mBACL,SAAS,OACT;AAAA,MAEJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,QAAM,QAAQ,mBAAW,YAAY,4BAA4B;AACjE,SAAO,EAAE,QAAQ,MAAM;AAC3B;AACA,IAAM,eAAe;AACd,SAAS,qBAAqB,YAAY;AAAA,EAC7C,MAAM,wBAAwB,kBAAkB;AAAA,IAC5C,cAAc;AACV,YAAM,GAAG,SAAS;AAClB,WAAK,QAAQ;AAAA,IACjB;AAAA,IACA,eAAe,MAAM;AACjB,WAAK,QAAQ;AAAA,IACjB;AAAA,EACJ;AACA,QAAM,eAAe,eAAO,YAAY,CAAC,aAAa;AAClD,UAAM,UAAU,SAAS;AACzB,QAAI;AACA,YAAM,YAAY,aAAa,OAAO;AACtC,YAAM,mBAAmB,IAAI,gBAAgB;AAC7C,uBAAiB,MAAM,SAAS;AAChC,aAAO,iBAAiB;AAAA,IAC5B,SACO,GAAG;AAGN,aAAO,aAAa,KAAK,QAAQ,MAAM;AAAA,IAC3C;AAAA,EACJ,CAAC;AACD,QAAM,SAAS,YAAI,cAAc,CAAC,aAAa;AAC3C,WAAO;AAAA,MACH,SAAS,qDAEL,SAAS,OACT;AAAA,MAGJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,sBAAsB,YAAY;AAC9C,QAAM,qBAAqB,eAAO,YAAY,CAAC,aAAa;AACxD,UAAM,UAAU,SAAS;AACzB,WAAO,QAAQ,KAAK,EAAE;AAAA,EAC1B,CAAC;AACD,QAAM,SAAS,YAAI,oBAAoB,CAAC,aAAa;AACjD,WAAO;AAAA,MACH,SAAS,mBACL,SAAS,OACT;AAAA,MACJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACA,IAAM,iBAAiB;AAChB,SAAS,uBAAuB,YAAY;AAAA,EAC/C,MAAM,0BAA0B,kBAAkB;AAAA,IAC9C,cAAc;AACV,YAAM,GAAG,SAAS;AAClB,WAAK,QAAQ;AAAA,IACjB;AAAA,IACA,iBAAiB,MAAM;AACnB,WAAK,QAAQ;AAAA,IACjB;AAAA,EACJ;AACA,QAAM,eAAe,eAAO,YAAY,CAAC,aAAa;AAClD,UAAM,UAAU,SAAS;AACzB,QAAI;AACA,YAAM,YAAY,aAAa,OAAO;AACtC,YAAM,qBAAqB,IAAI,kBAAkB;AACjD,yBAAmB,MAAM,SAAS;AAClC,aAAO,mBAAmB;AAAA,IAC9B,SACO,GAAG;AAGN,aAAO,eAAe,KAAK,QAAQ,MAAM;AAAA,IAC7C;AAAA,EACJ,CAAC;AACD,QAAM,SAAS,YAAI,cAAc,CAAC,aAAa;AAC3C,WAAO;AAAA,MACH,SAAS,qDAEL,SAAS,OACT;AAAA,MAGJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,qBAAqB,YAAY;AAC7C,QAAM,eAAe,eAAO,YAAY,CAAC,aAAa;AAClD,UAAM,UAAU,SAAS,OAAO;AAChC,WAAO,mBAAmB,WAAW,QAAQ,aAAa,QAAQ;AAAA,EACtE,CAAC;AACD,QAAM,SAAS,YAAI,cAAc,CAAC,aAAa;AAC3C,WAAO;AAAA,MACH,SAAS,mBACL,SAAS,OACT;AAAA,MACJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AAEO,SAAS,sBAAsB,YAAY;AAC9C,QAAM,QAAQ,CAAC;AACf,MAAI,oBAAoB,YAAI,YAAY,CAAC,cAAc;AACnD,WAAO,eAAO,YAAY,CAAC,QAAQ,cAAc;AAC7C,UAAI,UAAU,QAAQ,WAAW,UAAU,QAAQ,UAC/C,CAAC,iBAAS,OAAO,SAAS,KAC1B,UAAU,YAAY,MAAM,IAAI;AAGhC,cAAM,KAAK,SAAS;AACpB,eAAO,KAAK,SAAS;AACrB,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AAAA,EACT,CAAC;AACD,sBAAoB,gBAAQ,iBAAiB;AAC7C,QAAM,oBAAoB,eAAO,mBAAmB,CAAC,qBAAqB;AACtE,WAAO,iBAAiB,SAAS;AAAA,EACrC,CAAC;AACD,QAAM,SAAS,YAAI,mBAAmB,CAAC,mBAAmB;AACtD,UAAM,iBAAiB,YAAI,gBAAgB,CAAC,aAAa;AACrD,aAAO,SAAS;AAAA,IACpB,CAAC;AACD,UAAM,gBAAgB,aAAM,cAAc,EAAE;AAC5C,WAAO;AAAA,MACH,SAAS,6BAA6B,aAAa,wDACO,eAAe,KAAK,IAAI,CAAC;AAAA,MACnF,MAAM,yBAAyB;AAAA,MAC/B,YAAY;AAAA,IAChB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,qBAAqB,YAAY;AAC7C,QAAM,eAAe,eAAO,YAAY,CAAC,UAAU;AAC/C,QAAI,CAAC,YAAI,OAAO,OAAO,GAAG;AACtB,aAAO;AAAA,IACX;AACA,UAAM,QAAQ,MAAM;AACpB,WAAO,UAAU,MAAM,WAAW,UAAU,MAAM,MAAM,CAAC,iBAAS,KAAK;AAAA,EAC3E,CAAC;AACD,QAAM,SAAS,YAAI,cAAc,CAAC,aAAa;AAC3C,WAAO;AAAA,MACH,SAAS,mBACL,SAAS,OACT;AAAA,MACJ,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,QAAQ;AAAA,IACzB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,wBAAwB,YAAY,YAAY;AAC5D,QAAM,eAAe,eAAO,YAAY,CAAC,UAAU;AAC/C,WAAQ,MAAM,cAAc,UAAa,CAAC,iBAAS,YAAY,MAAM,SAAS;AAAA,EAClF,CAAC;AACD,QAAM,SAAS,YAAI,cAAc,CAAC,YAAY;AAC1C,UAAM,MAAM,iBAAiB,QAAQ,IAAI,8DAA8D,QAAQ,SAAS;AAExH,WAAO;AAAA,MACH,SAAS;AAAA,MACT,MAAM,yBAAyB;AAAA,MAC/B,YAAY,CAAC,OAAO;AAAA,IACxB;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,wBAAwB,YAAY;AAChD,QAAM,SAAS,CAAC;AAChB,QAAM,cAAc,eAAO,YAAY,CAAC,QAAQ,SAAS,QAAQ;AAC7D,UAAM,UAAU,QAAQ;AACxB,QAAI,YAAY,MAAM,IAAI;AACtB,aAAO;AAAA,IACX;AAGA,QAAI,iBAAS,OAAO,GAAG;AACnB,aAAO,KAAK,EAAE,KAAK,SAAS,KAAK,WAAW,QAAQ,CAAC;AAAA,IACzD,WACS,iBAAS,OAAO,KAAK,WAAW,OAAO,GAAG;AAC/C,aAAO,KAAK,EAAE,KAAK,QAAQ,QAAQ,KAAK,WAAW,QAAQ,CAAC;AAAA,IAChE;AACA,WAAO;AAAA,EACX,GAAG,CAAC,CAAC;AACL,kBAAQ,YAAY,CAAC,SAAS,YAAY;AACtC,oBAAQ,aAAa,CAAC,EAAE,KAAK,KAAK,UAAU,MAAM;AAC9C,UAAI,UAAU,OAAO,cAAc,KAAK,QAAQ,OAAO,GAAG;AACtD,cAAM,MAAM,YAAY,UAAU,IAAI;AAAA,4CACW,QAAQ,IAAI;AAAA;AAG7D,eAAO,KAAK;AAAA,UACR,SAAS;AAAA,UACT,MAAM,yBAAyB;AAAA,UAC/B,YAAY,CAAC,SAAS,SAAS;AAAA,QACnC,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,SAAO;AACX;AACA,SAAS,cAAc,KAAK,SAAS;AAEjC,MAAI,iBAAS,OAAO,GAAG;AACnB,UAAM,cAAc,QAAQ,KAAK,GAAG;AACpC,WAAO,gBAAgB,QAAQ,YAAY,UAAU;AAAA,EACzD,WACS,mBAAW,OAAO,GAAG;AAE1B,WAAO,QAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAAA,EACjC,WACS,YAAI,SAAS,MAAM,GAAG;AAE3B,WAAO,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAAA,EACtC,WACS,OAAO,YAAY,UAAU;AAClC,WAAO,YAAY;AAAA,EACvB,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;AACA,SAAS,WAAW,QAAQ;AAExB,QAAM,YAAY;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACA,SAAQ,aAAK,WAAW,CAAC,SAAS,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,MAAM;AAC9E;AACO,SAAS,gBAAgB,SAAS;AACrC,QAAM,QAAQ,QAAQ,aAAa,MAAM;AAGzC,SAAO,IAAI,OAAO,OAAO,QAAQ,MAAM,KAAK,KAAK;AACrD;AACO,SAAS,cAAc,SAAS;AACnC,QAAM,QAAQ,QAAQ,aAAa,OAAO;AAG1C,SAAO,IAAI,OAAO,GAAG,QAAQ,MAAM,IAAI,KAAK;AAChD;AACO,SAAS,qBAAqB,iBAAiB,YAAY,0BAA0B;AACxF,QAAM,SAAS,CAAC;AAEhB,MAAI,CAAC,YAAI,iBAAiB,YAAY,GAAG;AACrC,WAAO,KAAK;AAAA,MACR,SAAS,wDACL,eACA;AAAA,MACJ,MAAM,yBAAyB;AAAA,IACnC,CAAC;AAAA,EACL;AACA,MAAI,CAAC,YAAI,iBAAiB,KAAK,GAAG;AAC9B,WAAO,KAAK;AAAA,MACR,SAAS,wDACL,QACA;AAAA,MACJ,MAAM,yBAAyB;AAAA,IACnC,CAAC;AAAA,EACL;AACA,MAAI,YAAI,iBAAiB,KAAK,KAC1B,YAAI,iBAAiB,YAAY,KACjC,CAAC,YAAI,gBAAgB,OAAO,gBAAgB,WAAW,GAAG;AAC1D,WAAO,KAAK;AAAA,MACR,SAAS,kDAAkD,YAAY,MAAM,gBAAgB,WAAW;AAAA;AAAA,MAExG,MAAM,yBAAyB;AAAA,IACnC,CAAC;AAAA,EACL;AACA,MAAI,YAAI,iBAAiB,KAAK,GAAG;AAC7B,oBAAQ,gBAAgB,OAAO,CAAC,eAAe,iBAAiB;AAC5D,sBAAQ,eAAe,CAAC,aAAa,YAAY;AAC7C,YAAI,oBAAY,WAAW,GAAG;AAC1B,iBAAO,KAAK;AAAA,YACR,SAAS,sEACD,YAAY,gBAAgB,OAAO;AAAA;AAAA,YAC3C,MAAM,yBAAyB;AAAA,UACnC,CAAC;AAAA,QACL,WACS,YAAI,aAAa,YAAY,GAAG;AACrC,gBAAM,YAAY,gBAAQ,YAAY,UAAU,IAC1C,YAAY,aACZ,CAAC,YAAY,UAAU;AAC7B,0BAAQ,WAAW,CAAC,kBAAkB;AAClC,gBAAI,CAAC,oBAAY,aAAa,KAC1B,CAAC,iBAAS,eAAe,aAAa,GAAG;AACzC,qBAAO,KAAK;AAAA,gBACR,SAAS,8DAA8D,cAAc,IAAI,eAAe,YAAY,IAAI,sBAAsB,YAAY;AAAA;AAAA,gBAC1J,MAAM,yBAAyB;AAAA,cACnC,CAAC;AAAA,YACL;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACA,SAAO;AACX;AACO,SAAS,4BAA4B,iBAAiB,YAAY,0BAA0B;AAC/F,QAAM,WAAW,CAAC;AAClB,MAAI,kBAAkB;AACtB,QAAM,gBAAgB,gBAAQ,gBAAQ,eAAO,gBAAgB,KAAK,CAAC,CAAC;AACpE,QAAM,qBAAqB,eAAO,eAAe,CAAC,aAAa,SAAS,OAAO,MAAM,MAAM,EAAE;AAC7F,QAAM,sBAAsB,aAAa,wBAAwB;AACjE,MAAI,YAAY;AACZ,oBAAQ,oBAAoB,CAAC,YAAY;AACrC,YAAM,YAAY,sBAAsB,SAAS,mBAAmB;AACpE,UAAI,cAAc,OAAO;AACrB,cAAM,UAAU,2BAA2B,SAAS,SAAS;AAC7D,cAAM,oBAAoB;AAAA,UACtB;AAAA,UACA,MAAM,UAAU;AAAA,UAChB,WAAW;AAAA,QACf;AACA,iBAAS,KAAK,iBAAiB;AAAA,MACnC,OACK;AAED,YAAI,YAAI,SAAS,aAAa,GAAG;AAC7B,cAAI,QAAQ,gBAAgB,MAAM;AAC9B,8BAAkB;AAAA,UACtB;AAAA,QACJ,OACK;AACD,cAAI,iBAAiB,qBAAqB,QAAQ,OAAO,GAAG;AACxD,8BAAkB;AAAA,UACtB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACA,MAAI,cAAc,CAAC,iBAAiB;AAChC,aAAS,KAAK;AAAA,MACV,SAAS;AAAA,MAKT,MAAM,yBAAyB;AAAA,IACnC,CAAC;AAAA,EACL;AACA,SAAO;AACX;AACO,SAAS,iBAAiB,aAAa;AAC1C,QAAM,eAAe,CAAC;AACtB,QAAM,YAAY,aAAK,WAAW;AAClC,kBAAQ,WAAW,CAAC,YAAY;AAC5B,UAAM,iBAAiB,YAAY,OAAO;AAE1C,QAAI,gBAAQ,cAAc,GAAG;AACzB,mBAAa,OAAO,IAAI,CAAC;AAAA,IAC7B,OACK;AACD,YAAM,MAAM,sBAAsB;AAAA,IACtC;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AAEO,SAAS,gBAAgB,WAAW;AACvC,QAAM,UAAU,UAAU;AAE1B,MAAI,iBAAS,OAAO,GAAG;AACnB,WAAO;AAAA,EACX,WACS,mBAAW,OAAO,GAAG;AAE1B,WAAO;AAAA,EACX,WACS,YAAI,SAAS,MAAM,GAAG;AAE3B,WAAO;AAAA,EACX,WACS,iBAAS,OAAO,GAAG;AACxB,WAAO;AAAA,EACX,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;AACO,SAAS,eAAe,SAAS;AACpC,MAAI,iBAAS,OAAO,KAAK,QAAQ,WAAW,GAAG;AAC3C,WAAO,QAAQ,WAAW,CAAC;AAAA,EAC/B,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAIO,IAAM,gCAAgC;AAAA;AAAA,EAEzC,MAAM,SAAU,MAAM;AAClB,UAAM,MAAM,KAAK;AACjB,aAAS,IAAI,KAAK,WAAW,IAAI,KAAK,KAAK;AACvC,YAAM,IAAI,KAAK,WAAW,CAAC;AAC3B,UAAI,MAAM,IAAI;AACV,aAAK,YAAY,IAAI;AACrB,eAAO;AAAA,MACX,WACS,MAAM,IAAI;AACf,YAAI,KAAK,WAAW,IAAI,CAAC,MAAM,IAAI;AAC/B,eAAK,YAAY,IAAI;AAAA,QACzB,OACK;AACD,eAAK,YAAY,IAAI;AAAA,QACzB;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW;AACf;AACA,SAAS,sBAAsB,SAAS,yBAAyB;AAC7D,MAAI,YAAI,SAAS,aAAa,GAAG;AAG7B,WAAO;AAAA,EACX,OACK;AAED,QAAI,iBAAS,QAAQ,OAAO,GAAG;AAC3B,UAAI;AAEA,yBAAiB,yBAAyB,QAAQ,OAAO;AAAA,MAC7D,SACO,GAAG;AAEN,eAAO;AAAA,UACH,OAAO,yBAAyB;AAAA,UAChC,QAAQ,EAAE;AAAA,QACd;AAAA,MACJ;AACA,aAAO;AAAA,IACX,WACS,iBAAS,QAAQ,OAAO,GAAG;AAEhC,aAAO;AAAA,IACX,WACS,gBAAgB,OAAO,GAAG;AAE/B,aAAO,EAAE,OAAO,yBAAyB,kBAAkB;AAAA,IAC/D,OACK;AACD,YAAM,MAAM,sBAAsB;AAAA,IACtC;AAAA,EACJ;AACJ;AACO,SAAS,2BAA2B,SAAS,SAAS;AAEzD,MAAI,QAAQ,UAAU,yBAAyB,qBAAqB;AAChE,WAAQ;AAAA,0BACwB,QAAQ,IAAI;AAAA,gBACtB,QAAQ,MAAM;AAAA;AAAA,EAExC,WACS,QAAQ,UAAU,yBAAyB,mBAAmB;AACnE,WAAQ;AAAA,0BACwB,QAAQ,IAAI;AAAA;AAAA,EAEhD,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;AACA,SAAS,aAAa,cAAc;AAChC,QAAM,YAAY,YAAI,cAAc,CAAC,gBAAgB;AACjD,QAAI,iBAAS,WAAW,GAAG;AACvB,aAAO,YAAY,WAAW,CAAC;AAAA,IACnC,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACA,SAAS,iBAAiBC,MAAK,KAAK,OAAO;AACvC,MAAIA,KAAI,GAAG,MAAM,QAAW;AACxB,IAAAA,KAAI,GAAG,IAAI,CAAC,KAAK;AAAA,EACrB,OACK;AACD,IAAAA,KAAI,GAAG,EAAE,KAAK,KAAK;AAAA,EACvB;AACJ;AACO,IAAM,qBAAqB;AAgBlC,IAAI,4BAA4B,CAAC;AAC1B,SAAS,yBAAyB,UAAU;AAC/C,SAAO,WAAW,qBACZ,WACA,0BAA0B,QAAQ;AAC5C;AASA,SAAS,kCAAkC;AACvC,MAAI,gBAAQ,yBAAyB,GAAG;AACpC,gCAA4B,IAAI,MAAM,KAAK;AAC3C,aAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC5B,gCAA0B,CAAC,IAAI,IAAI,MAAM,MAAM,CAAC,EAAE,IAAI,OAAO;AAAA,IACjE;AAAA,EACJ;AACJ;;;ACx2BO,SAAS,uBAAuB,aAAa,gBAAgB;AAChE,QAAM,eAAe,YAAY;AACjC,MAAI,iBAAiB,eAAe,cAAc;AAC9C,WAAO;AAAA,EACX,OACK;AACD,WAAQ,eAAe,aAAa,QAChC,eAAe,mBAAmB,YAAY,MAAM;AAAA,EAC5D;AACJ;AAGO,SAAS,mCAAmC,OAAO,SAAS;AAC/D,SAAO,MAAM,iBAAiB,QAAQ;AAC1C;AACO,IAAI,oBAAoB;AACxB,IAAM,kBAAkB,CAAC;AACzB,SAAS,kBAAkB,YAAY;AAE1C,QAAM,uBAAuB,iBAAiB,UAAU;AAExD,0BAAwB,oBAAoB;AAE5C,0BAAwB,oBAAoB;AAC5C,6BAA2B,oBAAoB;AAC/C,kBAAQ,sBAAsB,CAAC,YAAY;AACvC,YAAQ,WAAW,QAAQ,gBAAgB,SAAS;AAAA,EACxD,CAAC;AACL;AACO,SAAS,iBAAiB,YAAY;AACzC,MAAI,SAAS,cAAM,UAAU;AAC7B,MAAI,aAAa;AACjB,MAAI,YAAY;AAChB,SAAO,WAAW;AACd,iBAAa,gBAAQ,gBAAQ,YAAI,YAAY,CAAC,gBAAgB,YAAY,UAAU,CAAC,CAAC;AACtF,UAAM,gBAAgB,mBAAW,YAAY,MAAM;AACnD,aAAS,OAAO,OAAO,aAAa;AACpC,QAAI,gBAAQ,aAAa,GAAG;AACxB,kBAAY;AAAA,IAChB,OACK;AACD,mBAAa;AAAA,IACjB;AAAA,EACJ;AACA,SAAO;AACX;AACO,SAAS,wBAAwB,YAAY;AAChD,kBAAQ,YAAY,CAAC,gBAAgB;AACjC,QAAI,CAAC,oBAAoB,WAAW,GAAG;AACnC,sBAAgB,iBAAiB,IAAI;AACrC,kBAAY,eAAe;AAAA,IAC/B;AAEA,QAAI,sBAAsB,WAAW,KACjC,CAAC,gBAAQ,YAAY,UAAU,GAGjC;AACE,kBAAY,aAAa,CAAC,YAAY,UAAU;AAAA,IACpD;AACA,QAAI,CAAC,sBAAsB,WAAW,GAAG;AACrC,kBAAY,aAAa,CAAC;AAAA,IAC9B;AACA,QAAI,CAAC,gCAAgC,WAAW,GAAG;AAC/C,kBAAY,kBAAkB,CAAC;AAAA,IACnC;AACA,QAAI,CAAC,mCAAmC,WAAW,GAAG;AAClD,kBAAY,qBAAqB,CAAC;AAAA,IACtC;AAAA,EACJ,CAAC;AACL;AACO,SAAS,2BAA2B,YAAY;AACnD,kBAAQ,YAAY,CAAC,gBAAgB;AAEjC,gBAAY,kBAAkB,CAAC;AAC/B,oBAAQ,YAAY,oBAAoB,CAAC,KAAK,QAAQ;AAClD,kBAAY,gBAAgB,KAAK,gBAAgB,GAAG,EAAE,YAAY;AAAA,IACtE,CAAC;AAAA,EACL,CAAC;AACL;AACO,SAAS,wBAAwB,YAAY;AAChD,kBAAQ,YAAY,CAAC,gBAAgB;AACjC,kCAA8B,CAAC,GAAG,WAAW;AAAA,EACjD,CAAC;AACL;AACO,SAAS,8BAA8B,MAAM,UAAU;AAC1D,kBAAQ,MAAM,CAAC,aAAa;AACxB,aAAS,mBAAmB,SAAS,YAAY,IAAI;AAAA,EACzD,CAAC;AACD,kBAAQ,SAAS,YAAY,CAAC,iBAAiB;AAC3C,UAAM,UAAU,KAAK,OAAO,QAAQ;AAEpC,QAAI,CAAC,iBAAS,SAAS,YAAY,GAAG;AAClC,oCAA8B,SAAS,YAAY;AAAA,IACvD;AAAA,EACJ,CAAC;AACL;AACO,SAAS,oBAAoB,SAAS;AACzC,SAAO,YAAI,SAAS,cAAc;AACtC;AACO,SAAS,sBAAsB,SAAS;AAC3C,SAAO,YAAI,SAAS,YAAY;AACpC;AACO,SAAS,gCAAgC,SAAS;AACrD,SAAO,YAAI,SAAS,iBAAiB;AACzC;AACO,SAAS,mCAAmC,SAAS;AACxD,SAAO,YAAI,SAAS,oBAAoB;AAC5C;AACO,SAAS,YAAY,SAAS;AACjC,SAAO,YAAI,SAAS,cAAc;AACtC;;;AChHO,IAAM,4BAA4B;AAAA,EACrC,iCAAiC,OAAO;AACpC,WAAO,uDAAuD,MAAM,KAAK;AAAA,EAC7E;AAAA,EACA,iCAAiC,UAAU,aAAa,QAAQ,MAAM,QAAQ;AAC1E,WAAQ,2BAA2B,SAAS,OAAO,WAAW,CAAC,iBAAiB,WAAW,aAAkB,MAAM;AAAA,EACvH;AACJ;;;ACDO,IAAI;AAAA,CACV,SAAUC,2BAA0B;AACjC,EAAAA,0BAAyBA,0BAAyB,iBAAiB,IAAI,CAAC,IAAI;AAC5E,EAAAA,0BAAyBA,0BAAyB,iBAAiB,IAAI,CAAC,IAAI;AAC5E,EAAAA,0BAAyBA,0BAAyB,kBAAkB,IAAI,CAAC,IAAI;AAC7E,EAAAA,0BAAyBA,0BAAyB,yBAAyB,IAAI,CAAC,IAAI;AACpF,EAAAA,0BAAyBA,0BAAyB,0BAA0B,IAAI,CAAC,IAAI;AACrF,EAAAA,0BAAyBA,0BAAyB,0BAA0B,IAAI,CAAC,IAAI;AACrF,EAAAA,0BAAyBA,0BAAyB,0BAA0B,IAAI,CAAC,IAAI;AACrF,EAAAA,0BAAyBA,0BAAyB,uCAAuC,IAAI,CAAC,IAAI;AAClG,EAAAA,0BAAyBA,0BAAyB,yCAAyC,IAAI,CAAC,IAAI;AACpG,EAAAA,0BAAyBA,0BAAyB,oDAAoD,IAAI,CAAC,IAAI;AAC/G,EAAAA,0BAAyBA,0BAAyB,2CAA2C,IAAI,EAAE,IAAI;AACvG,EAAAA,0BAAyBA,0BAAyB,kBAAkB,IAAI,EAAE,IAAI;AAC9E,EAAAA,0BAAyBA,0BAAyB,qBAAqB,IAAI,EAAE,IAAI;AACjF,EAAAA,0BAAyBA,0BAAyB,sBAAsB,IAAI,EAAE,IAAI;AAClF,EAAAA,0BAAyBA,0BAAyB,qBAAqB,IAAI,EAAE,IAAI;AACjF,EAAAA,0BAAyBA,0BAAyB,qBAAqB,IAAI,EAAE,IAAI;AACjF,EAAAA,0BAAyBA,0BAAyB,mBAAmB,IAAI,EAAE,IAAI;AAC/E,EAAAA,0BAAyBA,0BAAyB,iDAAiD,IAAI,EAAE,IAAI;AACjH,GAAG,6BAA6B,2BAA2B,CAAC,EAAE;AAC9D,IAAM,uBAAuB;AAAA,EACzB,+BAA+B;AAAA,EAC/B,kBAAkB;AAAA,EAClB,wBAAwB;AAAA,EACxB,0BAA0B,CAAC,MAAM,IAAI;AAAA,EACrC,qBAAqB;AAAA,EACrB,UAAU;AAAA,EACV,sBAAsB;AAAA,EACtB,eAAe;AAAA,EACf,iBAAiB;AAAA,EACjB,iBAAiB;AACrB;AACA,OAAO,OAAO,oBAAoB;AAC3B,IAAM,QAAN,MAAY;AAAA,EACf,YAAY,iBAAiB,SAAS,sBAAsB;AACxD,SAAK,kBAAkB;AACvB,SAAK,wBAAwB,CAAC;AAC9B,SAAK,yBAAyB,CAAC;AAC/B,SAAK,qBAAqB,CAAC;AAC3B,SAAK,+BAA+B,CAAC;AACrC,SAAK,QAAQ,CAAC;AACd,SAAK,cAAc,CAAC;AACpB,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AACrB,SAAK,YAAY;AACjB,SAAK,qBAAqB,CAAC;AAG3B,SAAK,aAAa,CAAC,WAAW,cAAc;AAGxC,UAAI,KAAK,kBAAkB,MAAM;AAC7B,aAAK;AACL,cAAM,SAAS,IAAI,MAAM,KAAK,kBAAkB,CAAC,EAAE,KAAK,GAAI;AAC5D,YAAI,KAAK,kBAAkB,KAAK,mBAAmB;AAC/C,kBAAQ,IAAI,GAAG,MAAM,QAAQ,SAAS,GAAG;AAAA,QAC7C;AACA,cAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAAS;AAEvC,cAAM,cAAc,OAAO,KAAK,QAAQ,OAAO,QAAQ;AACvD,YAAI,KAAK,kBAAkB,KAAK,mBAAmB;AAC/C,sBAAY,GAAG,MAAM,QAAQ,SAAS,WAAW,IAAI,IAAI;AAAA,QAC7D;AACA,aAAK;AACL,eAAO;AAAA,MACX,OACK;AACD,eAAO,UAAU;AAAA,MACrB;AAAA,IACJ;AACA,QAAI,OAAO,WAAW,WAAW;AAC7B,YAAM,MAAM,4HACuC;AAAA,IACvD;AAEA,SAAK,SAAS,eAAO,CAAC,GAAG,sBAAsB,MAAM;AACrD,UAAM,eAAe,KAAK,OAAO;AACjC,QAAI,iBAAiB,MAAM;AACvB,WAAK,oBAAoB;AACzB,WAAK,gBAAgB;AAAA,IACzB,WACS,OAAO,iBAAiB,UAAU;AACvC,WAAK,oBAAoB;AACzB,WAAK,gBAAgB;AAAA,IACzB;AACA,SAAK,kBAAkB;AACvB,SAAK,WAAW,qBAAqB,MAAM;AACvC,UAAI;AACJ,UAAI,oBAAoB;AACxB,WAAK,WAAW,yBAAyB,MAAM;AAC3C,YAAI,KAAK,OAAO,2BACZ,qBAAqB,wBAAwB;AAE7C,eAAK,OAAO,yBAAyB;AAAA,QACzC,OACK;AACD,cAAI,KAAK,OAAO,6BACZ,qBAAqB,0BAA0B;AAC/C,kBAAM,MAAM,iLACiG;AAAA,UACjH;AAAA,QACJ;AACA,YAAI,OAAO,YAAY,OAAO,qBAAqB;AAC/C,gBAAM,MAAM,oEAAoE;AAAA,QACpF;AACA,aAAK,kBAAkB,kBAAkB,KAAK,KAAK,OAAO,gBAAgB;AAC1E,aAAK,gBAAgB,QAAQ,KAAK,KAAK,OAAO,gBAAgB;AAE9D,YAAI,gBAAQ,eAAe,GAAG;AAC1B,6BAAmB;AAAA,YACf,OAAO,EAAE,aAAa,cAAM,eAAe,EAAE;AAAA,YAC7C,aAAa;AAAA,UACjB;AAAA,QACJ,OACK;AAED,8BAAoB;AACpB,6BAAmB,cAAM,eAAe;AAAA,QAC5C;AAAA,MACJ,CAAC;AACD,UAAI,KAAK,OAAO,oBAAoB,OAAO;AACvC,aAAK,WAAW,wBAAwB,MAAM;AAC1C,eAAK,wBAAwB,KAAK,sBAAsB,OAAO,qBAAqB,kBAAkB,KAAK,iBAAiB,KAAK,OAAO,wBAAwB,CAAC;AAAA,QACrK,CAAC;AACD,aAAK,WAAW,+BAA+B,MAAM;AACjD,eAAK,yBAAyB,KAAK,uBAAuB,OAAO,4BAA4B,kBAAkB,KAAK,iBAAiB,KAAK,OAAO,wBAAwB,CAAC;AAAA,QAC9K,CAAC;AAAA,MACL;AAEA,uBAAiB,QAAQ,iBAAiB,QACpC,iBAAiB,QACjB,CAAC;AAGP,sBAAQ,iBAAiB,OAAO,CAAC,eAAe,iBAAiB;AAC7D,yBAAiB,MAAM,YAAY,IAAI,eAAO,eAAe,CAAC,gBAAgB,oBAAY,WAAW,CAAC;AAAA,MAC1G,CAAC;AACD,YAAM,eAAe,aAAK,iBAAiB,KAAK;AAChD,sBAAQ,iBAAiB,OAAO,CAAC,YAAY,gBAAgB;AACzD,aAAK,WAAW,UAAU,WAAW,gBAAgB,MAAM;AACvD,eAAK,MAAM,KAAK,WAAW;AAC3B,cAAI,KAAK,OAAO,oBAAoB,OAAO;AACvC,iBAAK,WAAW,oBAAoB,MAAM;AACtC,mBAAK,wBAAwB,KAAK,sBAAsB,OAAO,iBAAiB,YAAY,YAAY,CAAC;AAAA,YAC7G,CAAC;AAAA,UACL;AAIA,cAAI,gBAAQ,KAAK,qBAAqB,GAAG;AACrC,8BAAkB,UAAU;AAC5B,gBAAI;AACJ,iBAAK,WAAW,qBAAqB,MAAM;AACvC,kCAAoB,kBAAkB,YAAY;AAAA,gBAC9C,0BAA0B,KAAK,OAAO;AAAA,gBACtC,kBAAkB,OAAO;AAAA,gBACzB,qBAAqB,OAAO;AAAA,gBAC5B,UAAU,OAAO;AAAA,gBACjB,QAAQ,KAAK;AAAA,cACjB,CAAC;AAAA,YACL,CAAC;AACD,iBAAK,mBAAmB,WAAW,IAC/B,kBAAkB;AACtB,iBAAK,6BAA6B,WAAW,IACzC,kBAAkB;AACtB,iBAAK,cAAc,eAAO,CAAC,GAAG,KAAK,aAAa,kBAAkB,WAAW;AAC7E,iBAAK,YAAY,kBAAkB,aAAa,KAAK;AACrD,iBAAK,mBAAmB,WAAW,IAC/B,kBAAkB;AAAA,UAC1B;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AACD,WAAK,cAAc,iBAAiB;AACpC,UAAI,CAAC,gBAAQ,KAAK,qBAAqB,KACnC,CAAC,KAAK,OAAO,+BAA+B;AAC5C,cAAM,iBAAiB,YAAI,KAAK,uBAAuB,CAAC,UAAU;AAC9D,iBAAO,MAAM;AAAA,QACjB,CAAC;AACD,cAAM,uBAAuB,eAAe,KAAK,2BAA2B;AAC5E,cAAM,IAAI,MAAM,8CAA8C,oBAAoB;AAAA,MACtF;AAEA,sBAAQ,KAAK,wBAAwB,CAAC,sBAAsB;AACxD,sBAAc,kBAAkB,OAAO;AAAA,MAC3C,CAAC;AACD,WAAK,WAAW,wCAAwC,MAAM;AAI1D,YAAI,gBAAgB;AAChB,eAAK,YAAY;AACjB,eAAK,QAAQ,KAAK;AAAA,QACtB,OACK;AACD,eAAK,kBAAkB;AACvB,eAAK,QAAQ,KAAK;AAAA,QACtB;AACA,YAAI,mBAAmB;AACnB,eAAK,cAAc;AAAA,QACvB;AACA,YAAI,KAAK,oBAAoB,OAAO;AAChC,eAAK,mBAAmB;AAAA,QAC5B;AACA,YAAI,KAAK,kBAAkB,OAAO;AAC9B,eAAK,mCAAmC;AAAA,QAC5C;AACA,YAAI,QAAQ,KAAK,KAAK,OAAO,gBAAgB,GAAG;AAC5C,eAAK,sBAAsB,KAAK;AAAA,QACpC,WACS,aAAa,KAAK,KAAK,OAAO,gBAAgB,GAAG;AACtD,eAAK,sBAAsB,KAAK;AAAA,QACpC,WACS,cAAc,KAAK,KAAK,OAAO,gBAAgB,GAAG;AACvD,eAAK,sBAAsB,KAAK;AAAA,QACpC,OACK;AACD,gBAAM,MAAM,8CAA8C,KAAK,OAAO,gBAAgB,GAAG;AAAA,QAC7F;AACA,YAAI,KAAK,WAAW;AAChB,eAAK,WAAW,KAAK;AACrB,eAAK,gBAAgB,KAAK;AAAA,QAC9B,OACK;AACD,eAAK,WAAW,KAAK;AACrB,eAAK,gBAAgB,KAAK;AAAA,QAC9B;AAAA,MACJ,CAAC;AACD,WAAK,WAAW,gCAAgC,MAAM;AAClD,cAAM,mBAAmB,eAAO,KAAK,oBAAoB,CAAC,mBAAmB,gBAAgB,aAAa;AACtG,cAAI,mBAAmB,OAAO;AAC1B,8BAAkB,KAAK,QAAQ;AAAA,UACnC;AACA,iBAAO;AAAA,QACX,GAAG,CAAC,CAAC;AACL,YAAI,OAAO,uBAAuB,CAAC,gBAAQ,gBAAgB,GAAG;AAC1D,gBAAM,MAAM,kBAAkB,iBAAiB,KAAK,IAAI,CAAC;AAAA;AAAA,yEAEsB;AAAA,QACnF;AAAA,MACJ,CAAC;AACD,WAAK,WAAW,0BAA0B,MAAM;AAC5C,+BAAuB;AAAA,MAC3B,CAAC;AACD,WAAK,WAAW,oBAAoB,MAAM;AACtC,yBAAiB,IAAI;AAAA,MACzB,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EACA,SAAS,MAAM,cAAc,KAAK,aAAa;AAC3C,QAAI,CAAC,gBAAQ,KAAK,qBAAqB,GAAG;AACtC,YAAM,iBAAiB,YAAI,KAAK,uBAAuB,CAAC,UAAU;AAC9D,eAAO,MAAM;AAAA,MACjB,CAAC;AACD,YAAM,uBAAuB,eAAe,KAAK,2BAA2B;AAC5E,YAAM,IAAI,MAAM,yEACZ,oBAAoB;AAAA,IAC5B;AACA,WAAO,KAAK,iBAAiB,MAAM,WAAW;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,MAAM,aAAa;AAChC,QAAI,GAAG,GAAG,GAAG,eAAe,WAAW,cAAc,SAAS,YAAY,aAAa,OAAO,SAAS,UAAU,WAAW,aAAa,KAAK;AAC9I,UAAM,UAAU;AAChB,UAAM,YAAY,QAAQ;AAC1B,QAAI,SAAS;AACb,QAAI,qBAAqB;AAKzB,UAAM,wBAAwB,KAAK,YAC7B,IACA,KAAK,MAAM,KAAK,SAAS,EAAE;AACjC,UAAM,gBAAgB,IAAI,MAAM,qBAAqB;AACrD,UAAM,SAAS,CAAC;AAChB,QAAI,OAAO,KAAK,kBAAkB,IAAI;AACtC,QAAI,SAAS,KAAK,kBAAkB,IAAI;AACxC,UAAM,SAAS,iBAAiB,KAAK,WAAW;AAChD,UAAM,aAAa,KAAK;AACxB,UAAM,wBAAwB,KAAK,OAAO;AAC1C,QAAI,yBAAyB;AAC7B,QAAI,qBAAqB,CAAC;AAC1B,QAAI,mCAAmC,CAAC;AACxC,UAAM,YAAY,CAAC;AACnB,UAAM,aAAa,CAAC;AACpB,WAAO,OAAO,UAAU;AACxB,QAAI;AACJ,aAAS,0BAA0B;AAC/B,aAAO;AAAA,IACX;AACA,aAAS,6BAA6B,UAAU;AAC5C,YAAM,mBAAmB,yBAAyB,QAAQ;AAC1D,YAAM,mBAAmB,iCAAiC,gBAAgB;AAC1E,UAAI,qBAAqB,QAAW;AAChC,eAAO;AAAA,MACX,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AACA,UAAM,WAAW,CAAC,aAAa;AAE3B,UAAI,UAAU,WAAW;AAAA;AAAA,MAGrB,SAAS,UAAU,cAAc,QAAW;AAG5C,cAAMC,OAAM,KAAK,OAAO,qBAAqB,iCAAiC,QAAQ;AACtF,eAAO,KAAK;AAAA,UACR,QAAQ,SAAS;AAAA,UACjB,MAAM,SAAS;AAAA,UACf,QAAQ,SAAS;AAAA,UACjB,QAAQ,SAAS,MAAM;AAAA,UACvB,SAASA;AAAA,QACb,CAAC;AAAA,MACL,OACK;AACD,kBAAU,IAAI;AACd,cAAM,UAAU,aAAK,SAAS;AAC9B,6BAAqB,KAAK,mBAAmB,OAAO;AACpD,2CACI,KAAK,6BAA6B,OAAO;AAC7C,iCAAyB,mBAAmB;AAC5C,cAAM,qBAAqB,KAAK,mBAAmB,OAAO,KAAK,KAAK,OAAO,aAAa;AACxF,YAAI,oCAAoC,oBAAoB;AACxD,gCAAsB;AAAA,QAC1B,OACK;AACD,gCAAsB;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,UAAU,SAAS;AACxB,gBAAU,KAAK,OAAO;AACtB,yCACI,KAAK,6BAA6B,OAAO;AAC7C,2BAAqB,KAAK,mBAAmB,OAAO;AACpD,+BAAyB,mBAAmB;AAC5C,+BAAyB,mBAAmB;AAC5C,YAAM,qBAAqB,KAAK,mBAAmB,OAAO,KAAK,KAAK,OAAO,aAAa;AACxF,UAAI,oCAAoC,oBAAoB;AACxD,8BAAsB;AAAA,MAC1B,OACK;AACD,8BAAsB;AAAA,MAC1B;AAAA,IACJ;AAGA,cAAU,KAAK,MAAM,WAAW;AAChC,QAAI;AACJ,UAAM,kBAAkB,KAAK,OAAO;AACpC,WAAO,SAAS,WAAW;AACvB,qBAAe;AACf,YAAM,eAAe,QAAQ,WAAW,MAAM;AAC9C,YAAM,2BAA2B,oBAAoB,YAAY;AACjE,YAAM,uBAAuB,yBAAyB;AACtD,WAAK,IAAI,GAAG,IAAI,sBAAsB,KAAK;AACvC,qBAAa,yBAAyB,CAAC;AACvC,cAAM,cAAc,WAAW;AAC/B,kBAAU;AAEV,cAAM,iBAAiB,WAAW;AAClC,YAAI,mBAAmB,OAAO;AAC1B,cAAI,iBAAiB,gBAAgB;AAEjC,2BAAe;AAAA,UACnB;AAAA,QACJ,WACS,WAAW,aAAa,MAAM;AACnC,kBAAQ,YAAY,KAAK,SAAS,QAAQ,eAAe,MAAM;AAC/D,cAAI,UAAU,MAAM;AAChB,2BAAe,MAAM,CAAC;AACtB,gBAAI,MAAM,YAAY,QAAW;AAC7B,wBAAU,MAAM;AAAA,YACpB;AAAA,UACJ,OACK;AACD,2BAAe;AAAA,UACnB;AAAA,QACJ,OACK;AACD,eAAK,gBAAgB,aAAa,MAAM;AACxC,yBAAe,KAAK,MAAM,aAAa,MAAM,MAAM;AAAA,QACvD;AACA,YAAI,iBAAiB,MAAM;AAGvB,sBAAY,WAAW;AACvB,cAAI,cAAc,QAAW;AAGzB,kBAAM,kBAAkB,UAAU;AAClC,iBAAK,IAAI,GAAG,IAAI,iBAAiB,KAAK;AAClC,oBAAM,kBAAkB,mBAAmB,UAAU,CAAC,CAAC;AACvD,oBAAM,mBAAmB,gBAAgB;AACzC,2BAAa;AAGb,kBAAI,gBAAgB,aAAa,MAAM;AACnC,wBAAQ,iBAAiB,KAAK,SAAS,QAAQ,eAAe,MAAM;AACpE,oBAAI,UAAU,MAAM;AAChB,kCAAgB,MAAM,CAAC;AACvB,sBAAI,MAAM,YAAY,QAAW;AAC7B,iCAAa,MAAM;AAAA,kBACvB;AAAA,gBACJ,OACK;AACD,kCAAgB;AAAA,gBACpB;AAAA,cACJ,OACK;AACD,qBAAK,gBAAgB,kBAAkB,MAAM;AAC7C,gCAAgB,KAAK,MAAM,kBAAkB,MAAM,MAAM;AAAA,cAC7D;AACA,kBAAI,iBAAiB,cAAc,SAAS,aAAa,QAAQ;AAC7D,+BAAe;AACf,0BAAU;AACV,6BAAa;AAGb;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AACA;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,iBAAiB,MAAM;AACvB,sBAAc,aAAa;AAC3B,gBAAQ,WAAW;AACnB,YAAI,UAAU,QAAW;AACrB,oBAAU,WAAW;AAGrB,qBAAW,KAAK,oBAAoB,cAAc,QAAQ,SAAS,WAAW,WAAW,MAAM,QAAQ,WAAW;AAClH,eAAK,cAAc,UAAU,OAAO;AAEpC,cAAI,UAAU,OAAO;AACjB,iCAAqB,KAAK,SAAS,eAAe,oBAAoB,QAAQ;AAAA,UAClF,OACK;AACD,mBAAO,KAAK,EAAE,KAAK,QAAQ;AAAA,UAC/B;AAAA,QACJ;AACA,eAAO,KAAK,UAAU,MAAM,WAAW;AACvC,iBAAS,SAAS;AAElB,iBAAS,KAAK,iBAAiB,QAAQ,WAAW;AAClD,YAAI,eAAe,QAAQ,WAAW,sBAAsB,MAAM;AAC9D,cAAI,kBAAkB;AACtB,cAAI;AACJ,cAAI;AACJ,gCAAsB,YAAY;AAClC,aAAG;AACC,8BAAkB,sBAAsB,KAAK,YAAY;AACzD,gBAAI,oBAAoB,MAAM;AAC1B,gCAAkB,sBAAsB,YAAY;AACpD;AAAA,YACJ;AAAA,UACJ,SAAS,oBAAoB;AAC7B,cAAI,oBAAoB,GAAG;AACvB,mBAAO,OAAO;AACd,qBAAS,cAAc;AACvB,iBAAK,iCAAiC,UAAU,OAAO,iBAAiB,iBAAiB,MAAM,QAAQ,WAAW;AAAA,UACtH;AAAA,QACJ;AAEA,aAAK,YAAY,YAAY,UAAU,WAAW,QAAQ;AAAA,MAC9D,OACK;AAED,cAAM,mBAAmB;AACzB,cAAM,YAAY;AAClB,cAAM,cAAc;AACpB,YAAI,mBAAmB,oBAAoB;AAC3C,eAAO,qBAAqB,SAAS,SAAS,WAAW;AAErD,iBAAO,KAAK,UAAU,MAAM,CAAC;AAC7B;AACA,eAAK,IAAI,GAAG,IAAI,wBAAwB,KAAK;AACzC,kBAAMC,cAAa,mBAAmB,CAAC;AACvC,kBAAM,cAAcA,YAAW;AAE/B,kBAAM,iBAAiBA,YAAW;AAClC,gBAAI,mBAAmB,OAAO;AAC1B,kBAAI,QAAQ,WAAW,MAAM,MAAM,gBAAgB;AAE/C,mCAAmB;AAAA,cACvB;AAAA,YACJ,WACSA,YAAW,aAAa,MAAM;AACnC,iCACI,YAAY,KAAK,SAAS,QAAQ,eAAe,MAAM,MAAM;AAAA,YACrE,OACK;AACD,mBAAK,gBAAgB,aAAa,MAAM;AACxC,iCAAmB,YAAY,KAAK,IAAI,MAAM;AAAA,YAClD;AACA,gBAAI,qBAAqB,MAAM;AAC3B;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,oBAAY,SAAS;AAErB,cAAM,KAAK,OAAO,qBAAqB,iCAAiC,SAAS,kBAAkB,WAAW,WAAW,WAAW;AACpI,eAAO,KAAK;AAAA,UACR,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,QAAQ;AAAA,UACR,SAAS;AAAA,QACb,CAAC;AACD,YAAI,oBAAoB,OAAO;AAC3B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAGA,QAAI,CAAC,KAAK,WAAW;AAEjB,oBAAc,SAAS;AAAA,IAC3B;AACA,WAAO;AAAA,MACH,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,YAAY,QAAQ,UAAU,WAAW,UAAU;AAC/C,QAAI,OAAO,QAAQ,MAAM;AAGrB,YAAM,WAAW,OAAO;AACxB,eAAS,QAAQ;AACjB,UAAI,aAAa,QAAW;AACxB,kBAAU,KAAK,MAAM,QAAQ;AAAA,MACjC;AAAA,IACJ,WACS,OAAO,SAAS,QAAW;AAChC,gBAAU,KAAK,MAAM,OAAO,IAAI;AAAA,IACpC;AAAA,EACJ;AAAA,EACA,UAAU,MAAM,QAAQ;AACpB,WAAO,KAAK,UAAU,MAAM;AAAA,EAChC;AAAA,EACA,gBAAgB,QAAQ,cAAc;AAClC,WAAO,YAAY;AAAA,EACvB;AAAA;AAAA,EAEA,iCAAiC,UAAU,OAAO,WAAW,iBAAiB,MAAM,QAAQ,aAAa;AACrG,QAAI,cAAc;AAClB,QAAI,UAAU,QAAW;AAErB,qBAAe,cAAc,cAAc;AAC3C,yBAAmB,eAAe,KAAK;AACvC,UAAI,EAAE,oBAAoB,KAAK,iBAAiB,OAAO;AAEnD,iBAAS,UAAU,OAAO;AAG1B,iBAAS,YAAY,SAAS,IAAI,CAAC;AAAA,MACvC;AAAA,IAEJ;AAAA,EACJ;AAAA,EACA,iBAAiB,WAAW,aAAa;AACrC,WAAO,YAAY;AAAA,EACvB;AAAA,EACA,sBAAsB,OAAO,aAAa,cAAc,WAAW;AAC/D,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,qBAAqB,OAAO,aAAa,cAAc,WAAW,WAAW,aAAa;AACtF,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gBAAgB,OAAO,aAAa,cAAc,WAAW,WAAW,aAAa,aAAa;AAC9F,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA,WAAW,cAAc,cAAc;AAAA,MACvC;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA,WAAW,cAAc,cAAc;AAAA,MACvC;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,kBAAkB,aAAa,OAAO,YAAY;AAC9C,gBAAY,KAAK,UAAU;AAC3B,WAAO;AAAA,EACX;AAAA,EACA,0BAA0B,aAAa,OAAO,YAAY;AACtD,gBAAY,KAAK,IAAI;AACrB;AACA,WAAO;AAAA,EACX;AAAA,EACA,sBAAsB,OAAO,SAAS;AAAA,EAAE;AAAA,EACxC,wBAAwB,OAAO,SAAS;AACpC,QAAI,YAAY,MAAM;AAClB,YAAM,UAAU;AAAA,IACpB;AAAA,EACJ;AAAA,EACA,cAAc,SAAS,MAAM,QAAQ;AACjC,UAAM,QAAQ,QAAQ,KAAK,IAAI;AAC/B,QAAI,UAAU,MAAM;AAChB,aAAO,KAAK,UAAU,QAAQ,QAAQ,SAAS;AAAA,IACnD;AACA,WAAO;AAAA,EACX;AAAA,EACA,cAAc,SAAS,MAAM;AACzB,UAAM,cAAc,QAAQ,KAAK,IAAI;AACrC,WAAO,gBAAgB,OAAO,YAAY,CAAC,IAAI;AAAA,EACnD;AACJ;AACA,MAAM,UAAU;AAEhB,MAAM,KAAK;;;AChoBJ,SAASC,YAAW,SAAS;AAChC,MAAIC,eAAc,OAAO,GAAG;AACxB,WAAO,QAAQ;AAAA,EACnB,OACK;AACD,WAAO,QAAQ;AAAA,EACnB;AACJ;AAIO,SAASC,eAAc,KAAK;AAC/B,SAAO,iBAAS,IAAI,KAAK,KAAK,IAAI,UAAU;AAChD;AACA,IAAM,SAAS;AACf,IAAM,aAAa;AACnB,IAAM,QAAQ;AACd,IAAM,QAAQ;AACd,IAAM,YAAY;AAClB,IAAM,WAAW;AACjB,IAAM,aAAa;AACnB,IAAM,cAAc;AACpB,IAAM,mBAAmB;AAClB,SAAS,YAAY,QAAQ;AAChC,SAAO,oBAAoB,MAAM;AACrC;AACA,SAAS,oBAAoB,QAAQ;AACjC,QAAM,UAAU,OAAO;AACvB,QAAM,YAAY,CAAC;AACnB,YAAU,OAAO,OAAO;AACxB,MAAI,CAAC,oBAAY,OAAO,GAAG;AACvB,cAAU,UAAU;AAAA,EACxB;AACA,MAAI,YAAI,QAAQ,MAAM,GAAG;AACrB,UAAO;AAAA,EAEX;AACA,MAAI,YAAI,QAAQ,UAAU,GAAG;AAEzB,cAAU,aAAa,OAAO,UAAU;AAAA,EAC5C;AACA,oBAAkB,CAAC,SAAS,CAAC;AAC7B,MAAI,YAAI,QAAQ,KAAK,GAAG;AACpB,cAAU,QAAQ,OAAO,KAAK;AAAA,EAClC;AACA,MAAI,YAAI,QAAQ,KAAK,GAAG;AACpB,cAAU,QAAQ,OAAO,KAAK;AAAA,EAClC;AACA,MAAI,YAAI,QAAQ,QAAQ,GAAG;AACvB,cAAU,WAAW,OAAO,QAAQ;AAAA,EACxC;AACA,MAAI,YAAI,QAAQ,SAAS,GAAG;AACxB,cAAU,YAAY,OAAO,SAAS;AAAA,EAC1C;AACA,MAAI,YAAI,QAAQ,UAAU,GAAG;AACzB,cAAU,aAAa,OAAO,UAAU;AAAA,EAC5C;AACA,MAAI,YAAI,QAAQ,WAAW,GAAG;AAC1B,cAAU,cAAc,OAAO,WAAW;AAAA,EAC9C;AACA,MAAI,YAAI,QAAQ,gBAAgB,GAAG;AAC/B,cAAU,mBAAmB,OAAO,gBAAgB;AAAA,EACxD;AACA,SAAO;AACX;AACO,IAAM,MAAM,YAAY,EAAE,MAAM,OAAO,SAAS,MAAM,GAAG,CAAC;AACjE,kBAAkB,CAAC,GAAG,CAAC;AAChB,SAAS,oBAAoB,SAAS,OAAO,aAAa,WAAW,WAAW,SAAS,aAAa,WAAW;AACpH,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc,QAAQ;AAAA,IACtB,WAAW;AAAA,EACf;AACJ;AACO,SAAS,aAAa,OAAO,SAAS;AACzC,SAAO,uBAAuB,OAAO,OAAO;AAChD;;;AClFO,IAAM,6BAA6B;AAAA,EACtC,0BAA0B,EAAE,UAAU,QAAQ,UAAU,SAAS,GAAG;AAChE,UAAM,WAAWC,eAAc,QAAQ;AACvC,UAAM,cAAc,WACd,OAAOC,YAAW,QAAQ,CAAC,SAC3B,qBAAqB,SAAS,IAAI;AACxC,UAAM,MAAM,aAAa,WAAW,mBAAmB,OAAO,KAAK;AACnE,WAAO;AAAA,EACX;AAAA,EACA,8BAA8B,EAAE,gBAAgB,SAAS,GAAG;AACxD,WAAO,+CAA+C,eAAe;AAAA,EACzE;AAAA,EACA,wBAAwB,EAAE,qBAAqB,QAAQ,UAAU,uBAAuB,SAAU,GAAG;AACjG,UAAM,YAAY;AAElB,UAAM,aAAa,aAAM,MAAM,EAAE;AACjC,UAAM,YAAY,mBAAmB,aAAa;AAClD,QAAI,uBAAuB;AACvB,aAAO,YAAY,wBAAwB;AAAA,IAC/C,OACK;AACD,YAAM,oBAAoB,eAAO,qBAAqB,CAAC,QAAQ,iBAAiB,OAAO,OAAO,YAAY,GAAG,CAAC,CAAC;AAC/G,YAAM,0BAA0B,YAAI,mBAAmB,CAAC,aAAa,IAAI,YAAI,UAAU,CAAC,kBAAkBA,YAAW,aAAa,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG;AAClJ,YAAM,yBAAyB,YAAI,yBAAyB,CAAC,SAAS,QAAQ,KAAK,MAAM,CAAC,KAAK,OAAO,EAAE;AACxG,YAAM,wBAAwB;AAAA,EAA2C,uBAAuB,KAAK,IAAI,CAAC;AAC1G,aAAO,YAAY,wBAAwB;AAAA,IAC/C;AAAA,EACJ;AAAA,EACA,sBAAsB,EAAE,wBAAwB,QAAQ,uBAAuB,SAAU,GAAG;AACxF,UAAM,YAAY;AAElB,UAAM,aAAa,aAAM,MAAM,EAAE;AACjC,UAAM,YAAY,mBAAmB,aAAa;AAClD,QAAI,uBAAuB;AACvB,aAAO,YAAY,wBAAwB;AAAA,IAC/C,OACK;AACD,YAAM,0BAA0B,YAAI,wBAAwB,CAAC,aAAa,IAAI,YAAI,UAAU,CAAC,kBAAkBA,YAAW,aAAa,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG;AACtJ,YAAM,wBAAwB;AAAA,KACtB,wBAAwB,KAAK,IAAI,CAAC;AAC1C,aAAO,YAAY,wBAAwB;AAAA,IAC/C;AAAA,EACJ;AACJ;AACA,OAAO,OAAO,0BAA0B;AACjC,IAAM,sCAAsC;AAAA,EAC/C,uBAAuB,cAAc,eAAe;AAChD,UAAM,MAAM,kEACR,cAAc,kBACd,kCAEA,aAAa,OACb;AACJ,WAAO;AAAA,EACX;AACJ;AACO,IAAM,uCAAuC;AAAA,EAChD,yBAAyB,cAAc,gBAAgB;AACnD,aAASC,4BAA2B,MAAM;AACtC,UAAI,gBAAgB,UAAU;AAC1B,eAAO,KAAK,aAAa;AAAA,MAC7B,WACS,gBAAgB,aAAa;AAClC,eAAO,KAAK;AAAA,MAChB,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AACA,UAAM,eAAe,aAAa;AAClC,UAAM,gBAAgB,aAAM,cAAc;AAC1C,UAAM,QAAQ,cAAc;AAC5B,UAAM,UAAU,qBAAqB,aAAa;AAClD,UAAM,gBAAgBA,4BAA2B,aAAa;AAC9D,UAAM,mBAAmB,QAAQ;AACjC,QAAI,MAAM,KAAK,OAAO,GAAG,mBAAmB,QAAQ,EAAE,MAAM,gBAAgB,oBAAoB,aAAa,OAAO,EAAE;AAAA,4CAClF,eAAe,MAAM,oCAAoC,YAAY;AAAA;AAAA;AAIzG,UAAM,IAAI,QAAQ,WAAW,GAAG;AAChC,UAAM,IAAI,QAAQ,UAAU,IAAI;AAChC,WAAO;AAAA,EACX;AAAA,EACA,4BAA4B,MAAM;AAC9B,UAAM,SAAS;AAAA,0EACgE,KAAK,IAAI;AAAA;AAAA;AAAA;AAIxF,WAAO;AAAA,EACX;AAAA,EACA,qCAAqC,SAAS;AAC1C,UAAM,UAAU,YAAI,QAAQ,YAAY,CAAC,YAAYD,YAAW,OAAO,CAAC,EAAE,KAAK,IAAI;AACnF,UAAM,aAAa,QAAQ,YAAY,QAAQ,IAAI,KAAK,QAAQ,YAAY;AAC5E,UAAM,SAAS,4BAA4B,QAAQ,iBAAiB,KAAK,IAAI,CAAC;AAAA,QACjE,UAAU,aAAa,QAAQ,aAAa,IAAI;AAAA,GACrD,OAAO;AAAA;AAAA;AAGf,WAAO;AAAA,EACX;AAAA,EACA,+BAA+B,SAAS;AACpC,UAAM,UAAU,YAAI,QAAQ,YAAY,CAAC,YAAYA,YAAW,OAAO,CAAC,EAAE,KAAK,IAAI;AACnF,UAAM,aAAa,QAAQ,YAAY,QAAQ,IAAI,KAAK,QAAQ,YAAY;AAC5E,QAAI,cAAc,qCAAqC,QAAQ,iBAAiB,KAAK,IAAI,CAAC,WAAW,UAAU,aAC/F,QAAQ,aAAa,IAAI;AAAA,GACjC,OAAO;AAAA;AACf,kBACI,cACI;AAAA;AAER,WAAO;AAAA,EACX;AAAA,EACA,0BAA0B,SAAS;AAC/B,QAAI,UAAU,qBAAqB,QAAQ,UAAU;AACrD,QAAI,QAAQ,WAAW,QAAQ,GAAG;AAC9B,iBAAW,QAAQ,WAAW;AAAA,IAClC;AACA,UAAM,SAAS,mBAAmB,OAAO,kBAAkB,QAAQ,aAAa,IAAI;AAAA;AAEpF,WAAO;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,oBAAoB,SAAS;AAEzB,WAAO;AAAA,EACX;AAAA,EACA,2BAA2B,SAAS;AAChC,UAAM,SAAS,iCAAiC,QAAQ,iBAAiB,CAAC,WAC5D,QAAQ,YAAY,GAAG,aAAa,QAAQ,aAAa,IAAI;AAAA;AAE3E,WAAO;AAAA,EACX;AAAA,EACA,8BAA8B,SAAS;AACnC,UAAM,SAAS;AAAA,KACL,QAAQ,YAAY,GAAG,aAAa,QAAQ,aAAa,IAAI;AAAA,OAAiB,QAAQ,YAAY,WAAW,SAAS,CAAC;AACjI,WAAO;AAAA,EACX;AAAA,EACA,wBAAwB,SAAS;AAC7B,UAAM,WAAW,QAAQ,aAAa;AACtC,UAAM,YAAY,YAAI,QAAQ,mBAAmB,CAAC,aAAa,SAAS,IAAI;AAC5E,UAAM,oBAAoB,GAAG,QAAQ,QAAQ,UACxC,OAAO,CAAC,QAAQ,CAAC,EACjB,KAAK,OAAO,CAAC;AAClB,UAAM,SAAS;AAAA,SACD,QAAQ;AAAA;AAAA,GACwD,iBAAiB;AAAA;AAAA;AAG/F,WAAO;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,0BAA0B,SAAS;AAE/B,WAAO;AAAA,EACX;AAAA,EACA,4BAA4B,SAAS;AACjC,QAAI;AACJ,QAAI,QAAQ,wBAAwB,MAAM;AACtC,iBAAW,QAAQ,aAAa;AAAA,IACpC,OACK;AACD,iBAAW,QAAQ;AAAA,IACvB;AACA,UAAM,SAAS,iCAAiC,QAAQ,2CAA2C,QAAQ,WAAW;AACtH,WAAO;AAAA,EACX;AACJ;;;AC1KO,SAAS,eAAe,WAAW,gBAAgB;AACtD,QAAM,cAAc,IAAI,uBAAuB,WAAW,cAAc;AACxE,cAAY,YAAY;AACxB,SAAO,YAAY;AACvB;AACO,IAAM,yBAAN,cAAqC,YAAY;AAAA,EACpD,YAAY,eAAe,gBAAgB;AACvC,UAAM;AACN,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AACtB,SAAK,SAAS,CAAC;AAAA,EACnB;AAAA,EACA,cAAc;AACV,oBAAQ,eAAO,KAAK,aAAa,GAAG,CAAC,SAAS;AAC1C,WAAK,eAAe;AACpB,WAAK,OAAO,IAAI;AAAA,IACpB,CAAC;AAAA,EACL;AAAA,EACA,iBAAiB,MAAM;AACnB,UAAM,MAAM,KAAK,cAAc,KAAK,eAAe;AACnD,QAAI,CAAC,KAAK;AACN,YAAM,MAAM,KAAK,eAAe,uBAAuB,KAAK,cAAc,IAAI;AAC9E,WAAK,OAAO,KAAK;AAAA,QACb,SAAS;AAAA,QACT,MAAM,0BAA0B;AAAA,QAChC,UAAU,KAAK,aAAa;AAAA,QAC5B,mBAAmB,KAAK;AAAA,MAC5B,CAAC;AAAA,IACL,OACK;AACD,WAAK,iBAAiB;AAAA,IAC1B;AAAA,EACJ;AACJ;;;AChCO,IAAM,mCAAN,cAA+C,WAAW;AAAA,EAC7D,YAAY,SAAS,MAAM;AACvB,UAAM;AACN,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,mBAAmB,CAAC;AACzB,SAAK,qBAAqB;AAC1B,SAAK,2BAA2B;AAChC,SAAK,QAAQ;AACb,SAAK,gBAAgB;AAAA,EACzB;AAAA,EACA,eAAe;AACX,SAAK,QAAQ;AACb,QAAI,KAAK,KAAK,UAAU,CAAC,MAAM,KAAK,QAAQ,MAAM;AAC9C,YAAM,MAAM,qDAAqD;AAAA,IACrE;AAEA,SAAK,YAAY,cAAM,KAAK,KAAK,SAAS,EAAE,QAAQ;AACpD,SAAK,kBAAkB,cAAM,KAAK,KAAK,eAAe,EAAE,QAAQ;AAEhE,SAAK,UAAU,IAAI;AACnB,SAAK,gBAAgB,IAAI;AACzB,SAAK,mBAAmB;AACxB,SAAK,KAAK,KAAK,OAAO;AACtB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,KAAK,MAAM,WAAW,CAAC,GAAG;AAEtB,QAAI,CAAC,KAAK,OAAO;AACb,YAAM,KAAK,MAAM,QAAQ;AAAA,IAC7B;AAAA,EACJ;AAAA,EACA,YAAY,SAAS,UAAU,UAAU;AAErC,QAAI,QAAQ,eAAe,SAAS,KAAK,sBACrC,QAAQ,QAAQ,KAAK,0BAA0B;AAC/C,YAAM,WAAW,SAAS,OAAO,QAAQ;AACzC,WAAK,mBAAmB;AACxB,WAAK,KAAK,QAAQ,gBAAgB,QAAQ;AAAA,IAC9C;AAAA,EACJ;AAAA,EACA,qBAAqB;AAEjB,QAAI,gBAAQ,KAAK,SAAS,GAAG;AAGzB,WAAK,qBAAqB;AAC1B,WAAK,2BAA2B;AAChC,WAAK,gBAAgB;AAAA,IACzB,OACK;AACD,WAAK,qBAAqB,KAAK,UAAU,IAAI;AAC7C,WAAK,2BAA2B,KAAK,gBAAgB,IAAI;AAAA,IAC7D;AAAA,EACJ;AACJ;AACO,IAAM,uBAAN,cAAmC,iCAAiC;AAAA,EACvE,YAAY,SAAS,MAAM;AACvB,UAAM,SAAS,IAAI;AACnB,SAAK,OAAO;AACZ,SAAK,mBAAmB;AACxB,SAAK,yBAAyB;AAC9B,SAAK,mBAAmB,KAAK,KAAK,QAAQ;AAC1C,SAAK,yBAAyB,KAAK,KAAK;AAAA,EAC5C;AAAA,EACA,aAAa,UAAU,UAAU,UAAU;AACvC,QAAI,KAAK,iBACL,SAAS,aAAa,SAAS,KAAK,oBACpC,SAAS,QAAQ,KAAK,0BACtB,CAAC,KAAK,OAAO;AACb,YAAM,WAAW,SAAS,OAAO,QAAQ;AACzC,YAAM,WAAW,IAAI,YAAY,EAAE,YAAY,SAAS,CAAC;AACzD,WAAK,mBAAmB,MAAM,QAAQ;AACtC,WAAK,QAAQ;AAAA,IACjB;AAAA,EACJ;AACJ;AAKO,IAAM,4CAAN,cAAwD,WAAW;AAAA,EACtE,YAAY,SAAS,YAAY;AAC7B,UAAM;AACN,SAAK,UAAU;AACf,SAAK,aAAa;AAClB,SAAK,SAAS;AAAA,MACV,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,aAAa;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,eAAe;AACX,SAAK,KAAK,KAAK,OAAO;AACtB,WAAO,KAAK;AAAA,EAChB;AACJ;AACO,IAAM,8BAAN,cAA0C,0CAA0C;AAAA,EACvF,SAAS,UAAU,UAAU,UAAU;AACnC,QAAI,SAAS,QAAQ,KAAK,YAAY;AAClC,YAAM,iBAAiB,aAAO,SAAS,OAAO,QAAQ,CAAC;AACvD,WAAK,OAAO,cAAc,mBAAmB;AAC7C,UAAI,0BAA0B,UAAU;AACpC,aAAK,OAAO,QAAQ,eAAe;AACnC,aAAK,OAAO,aAAa,eAAe;AAAA,MAC5C;AAAA,IACJ,OACK;AACD,YAAM,SAAS,UAAU,UAAU,QAAQ;AAAA,IAC/C;AAAA,EACJ;AACJ;AACO,IAAM,iCAAN,cAA6C,0CAA0C;AAAA,EAC1F,YAAY,aAAa,UAAU,UAAU;AACzC,QAAI,YAAY,QAAQ,KAAK,YAAY;AACrC,YAAM,oBAAoB,aAAO,SAAS,OAAO,QAAQ,CAAC;AAC1D,WAAK,OAAO,cAAc,sBAAsB;AAChD,UAAI,6BAA6B,UAAU;AACvC,aAAK,OAAO,QAAQ,kBAAkB;AACtC,aAAK,OAAO,aAAa,kBAAkB;AAAA,MAC/C;AAAA,IACJ,OACK;AACD,YAAM,YAAY,aAAa,UAAU,QAAQ;AAAA,IACrD;AAAA,EACJ;AACJ;AACO,IAAM,oCAAN,cAAgD,0CAA0C;AAAA,EAC7F,eAAe,gBAAgB,UAAU,UAAU;AAC/C,QAAI,eAAe,QAAQ,KAAK,YAAY;AACxC,YAAM,uBAAuB,aAAO,SAAS,OAAO,QAAQ,CAAC;AAC7D,WAAK,OAAO,cAAc,yBAAyB;AACnD,UAAI,gCAAgC,UAAU;AAC1C,aAAK,OAAO,QAAQ,qBAAqB;AACzC,aAAK,OAAO,aAAa,qBAAqB;AAAA,MAClD;AAAA,IACJ,OACK;AACD,YAAM,eAAe,gBAAgB,UAAU,QAAQ;AAAA,IAC3D;AAAA,EACJ;AACJ;AAEO,IAAM,uCAAN,cAAmD,0CAA0C;AAAA,EAChG,kBAAkB,mBAAmB,UAAU,UAAU;AACrD,QAAI,kBAAkB,QAAQ,KAAK,YAAY;AAC3C,YAAM,oCAAoC,aAAO,SAAS,OAAO,QAAQ,CAAC;AAC1E,WAAK,OAAO,cAAc,sCAAsC;AAChE,UAAI,6CAA6C,UAAU;AACvD,aAAK,OAAO,QAAQ,kCAAkC;AACtD,aAAK,OAAO,aAAa,kCAAkC;AAAA,MAC/D;AAAA,IACJ,OACK;AACD,YAAM,kBAAkB,mBAAmB,UAAU,QAAQ;AAAA,IACjE;AAAA,EACJ;AACJ;AACO,SAAS,kBAAkB,WAAW,WAAW,WAAW,CAAC,GAAG;AAEnE,aAAW,cAAM,QAAQ;AACzB,MAAI,SAAS,CAAC;AACd,MAAI,IAAI;AAER,WAAS,kBAAkB,SAAS;AAChC,WAAO,QAAQ,OAAO,aAAK,WAAW,IAAI,CAAC,CAAC;AAAA,EAChD;AAEA,WAAS,uBAAuB,YAAY;AACxC,UAAM,eAAe,kBAAkB,kBAAkB,UAAU,GAAG,WAAW,QAAQ;AACzF,WAAO,OAAO,OAAO,YAAY;AAAA,EACrC;AAQA,SAAO,SAAS,SAAS,aAAa,IAAI,UAAU,QAAQ;AACxD,UAAM,OAAO,UAAU,CAAC;AAExB,QAAI,gBAAgB,aAAa;AAC7B,aAAO,uBAAuB,KAAK,UAAU;AAAA,IACjD,WACS,gBAAgB,aAAa;AAClC,aAAO,uBAAuB,KAAK,UAAU;AAAA,IACjD,WACS,gBAAgB,QAAQ;AAC7B,eAAS,uBAAuB,KAAK,UAAU;AAAA,IACnD,WACS,gBAAgB,qBAAqB;AAC1C,YAAM,SAAS,KAAK,WAAW,OAAO;AAAA,QAClC,IAAI,WAAW;AAAA,UACX,YAAY,KAAK;AAAA,QACrB,CAAC;AAAA,MACL,CAAC;AACD,aAAO,uBAAuB,MAAM;AAAA,IACxC,WACS,gBAAgB,kCAAkC;AACvD,YAAM,SAAS;AAAA,QACX,IAAI,YAAY,EAAE,YAAY,KAAK,WAAW,CAAC;AAAA,QAC/C,IAAI,WAAW;AAAA,UACX,YAAY,CAAC,IAAI,SAAS,EAAE,cAAc,KAAK,UAAU,CAAC,CAAC,EAAE,OAAO,KAAK,UAAU;AAAA,QACvF,CAAC;AAAA,MACL;AACA,aAAO,uBAAuB,MAAM;AAAA,IACxC,WACS,gBAAgB,yBAAyB;AAC9C,YAAM,SAAS,KAAK,WAAW,OAAO;AAAA,QAClC,IAAI,WAAW;AAAA,UACX,YAAY,CAAC,IAAI,SAAS,EAAE,cAAc,KAAK,UAAU,CAAC,CAAC,EAAE,OAAO,KAAK,UAAU;AAAA,QACvF,CAAC;AAAA,MACL,CAAC;AACD,eAAS,uBAAuB,MAAM;AAAA,IAC1C,WACS,gBAAgB,YAAY;AACjC,YAAM,SAAS,KAAK,WAAW,OAAO;AAAA,QAClC,IAAI,WAAW;AAAA,UACX,YAAY,KAAK;AAAA,QACrB,CAAC;AAAA,MACL,CAAC;AACD,eAAS,uBAAuB,MAAM;AAAA,IAC1C,WACS,gBAAgB,aAAa;AAClC,sBAAQ,KAAK,YAAY,CAAC,YAAY;AAIlC,YAAI,gBAAQ,QAAQ,UAAU,MAAM,OAAO;AACvC,mBAAS,uBAAuB,QAAQ,UAAU;AAAA,QACtD;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX,WACS,gBAAgB,UAAU;AAC/B,eAAS,KAAK,KAAK,YAAY;AAAA,IACnC,OACK;AACD,YAAM,MAAM,sBAAsB;AAAA,IACtC;AACA;AAAA,EACJ;AACA,SAAO,KAAK;AAAA,IACR,aAAa;AAAA,IACb,WAAW,aAAK,WAAW,CAAC;AAAA,EAChC,CAAC;AACD,SAAO;AACX;AACO,SAAS,wBAAwB,YAAY,aAAa,YAAY,cAAc;AACvF,QAAM,oBAAoB;AAE1B,QAAM,wBAAwB,CAAC,iBAAiB;AAChD,QAAM,mBAAmB;AACzB,MAAI,oBAAoB;AACxB,QAAM,oBAAoB,YAAY;AACtC,QAAM,2BAA2B,oBAAoB,eAAe;AACpE,QAAM,SAAS,CAAC;AAChB,QAAM,gBAAgB,CAAC;AACvB,gBAAc,KAAK;AAAA,IACf,KAAK;AAAA,IACL,KAAK;AAAA,IACL,WAAW,CAAC;AAAA,IACZ,iBAAiB,CAAC;AAAA,EACtB,CAAC;AACD,SAAO,CAAC,gBAAQ,aAAa,GAAG;AAC5B,UAAM,WAAW,cAAc,IAAI;AAEnC,QAAI,aAAa,kBAAkB;AAC/B,UAAI,qBACA,aAAK,aAAa,EAAE,OAAO,0BAA0B;AAErD,sBAAc,IAAI;AAAA,MACtB;AACA;AAAA,IACJ;AACA,UAAM,UAAU,SAAS;AACzB,UAAM,UAAU,SAAS;AACzB,UAAM,gBAAgB,SAAS;AAC/B,UAAM,sBAAsB,SAAS;AAErC,QAAI,gBAAQ,OAAO,GAAG;AAClB;AAAA,IACJ;AACA,UAAM,OAAO,QAAQ,CAAC;AAEtB,QAAI,SAAS,mBAAmB;AAC5B,YAAM,WAAW;AAAA,QACb,KAAK;AAAA,QACL,KAAK,aAAK,OAAO;AAAA,QACjB,WAAW,kBAAU,aAAa;AAAA,QAClC,iBAAiB,kBAAU,mBAAmB;AAAA,MAClD;AACA,oBAAc,KAAK,QAAQ;AAAA,IAC/B,WACS,gBAAgB,UAAU;AAE/B,UAAI,UAAU,oBAAoB,GAAG;AACjC,cAAM,UAAU,UAAU;AAC1B,cAAM,cAAc,YAAY,OAAO;AACvC,YAAI,WAAW,aAAa,KAAK,YAAY,GAAG;AAC5C,gBAAM,WAAW;AAAA,YACb,KAAK;AAAA,YACL,KAAK,aAAK,OAAO;AAAA,YACjB,WAAW;AAAA,YACX,iBAAiB;AAAA,UACrB;AACA,wBAAc,KAAK,QAAQ;AAAA,QAC/B;AAAA,MAEJ,WACS,YAAY,oBAAoB,GAAG;AAExC,eAAO,KAAK;AAAA,UACR,eAAe,KAAK;AAAA,UACpB,qBAAqB,KAAK;AAAA,UAC1B,WAAW;AAAA,UACX,iBAAiB;AAAA,QACrB,CAAC;AACD,4BAAoB;AAAA,MACxB,OACK;AACD,cAAM,MAAM,sBAAsB;AAAA,MACtC;AAAA,IACJ,WACS,gBAAgB,aAAa;AAClC,YAAM,eAAe,cAAM,aAAa;AACxC,mBAAa,KAAK,KAAK,eAAe;AACtC,YAAM,qBAAqB,cAAM,mBAAmB;AACpD,yBAAmB,KAAK,KAAK,GAAG;AAChC,YAAM,WAAW;AAAA,QACb,KAAK;AAAA,QACL,KAAK,KAAK,WAAW,OAAO,uBAAuB,aAAK,OAAO,CAAC;AAAA,QAChE,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,QAAQ;AAAA,IAC/B,WACS,gBAAgB,QAAQ;AAE7B,YAAM,kBAAkB;AAAA,QACpB,KAAK;AAAA,QACL,KAAK,aAAK,OAAO;AAAA,QACjB,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,eAAe;AAElC,oBAAc,KAAK,gBAAgB;AACnC,YAAM,eAAe;AAAA,QACjB,KAAK;AAAA,QACL,KAAK,KAAK,WAAW,OAAO,aAAK,OAAO,CAAC;AAAA,QACzC,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,YAAY;AAAA,IACnC,WACS,gBAAgB,qBAAqB;AAE1C,YAAM,kBAAkB,IAAI,WAAW;AAAA,QACnC,YAAY,KAAK;AAAA,QACjB,KAAK,KAAK;AAAA,MACd,CAAC;AACD,YAAM,UAAU,KAAK,WAAW,OAAO,CAAC,eAAe,GAAG,aAAK,OAAO,CAAC;AACvE,YAAM,WAAW;AAAA,QACb,KAAK;AAAA,QACL,KAAK;AAAA,QACL,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,QAAQ;AAAA,IAC/B,WACS,gBAAgB,kCAAkC;AAEvD,YAAM,gBAAgB,IAAI,SAAS;AAAA,QAC/B,cAAc,KAAK;AAAA,MACvB,CAAC;AACD,YAAM,kBAAkB,IAAI,WAAW;AAAA,QACnC,YAAY,CAAC,aAAa,EAAE,OAAO,KAAK,UAAU;AAAA,QAClD,KAAK,KAAK;AAAA,MACd,CAAC;AACD,YAAM,UAAU,KAAK,WAAW,OAAO,CAAC,eAAe,GAAG,aAAK,OAAO,CAAC;AACvE,YAAM,WAAW;AAAA,QACb,KAAK;AAAA,QACL,KAAK;AAAA,QACL,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,QAAQ;AAAA,IAC/B,WACS,gBAAgB,yBAAyB;AAE9C,YAAM,kBAAkB;AAAA,QACpB,KAAK;AAAA,QACL,KAAK,aAAK,OAAO;AAAA,QACjB,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,eAAe;AAElC,oBAAc,KAAK,gBAAgB;AACnC,YAAM,gBAAgB,IAAI,SAAS;AAAA,QAC/B,cAAc,KAAK;AAAA,MACvB,CAAC;AACD,YAAM,gBAAgB,IAAI,WAAW;AAAA,QACjC,YAAY,CAAC,aAAa,EAAE,OAAO,KAAK,UAAU;AAAA,QAClD,KAAK,KAAK;AAAA,MACd,CAAC;AACD,YAAM,UAAU,KAAK,WAAW,OAAO,CAAC,aAAa,GAAG,aAAK,OAAO,CAAC;AACrE,YAAM,eAAe;AAAA,QACjB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,YAAY;AAAA,IACnC,WACS,gBAAgB,YAAY;AAEjC,YAAM,kBAAkB;AAAA,QACpB,KAAK;AAAA,QACL,KAAK,aAAK,OAAO;AAAA,QACjB,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,eAAe;AAElC,oBAAc,KAAK,gBAAgB;AAEnC,YAAM,gBAAgB,IAAI,WAAW;AAAA,QACjC,YAAY,KAAK;AAAA,QACjB,KAAK,KAAK;AAAA,MACd,CAAC;AACD,YAAM,UAAU,KAAK,WAAW,OAAO,CAAC,aAAa,GAAG,aAAK,OAAO,CAAC;AACrE,YAAM,eAAe;AAAA,QACjB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB;AACA,oBAAc,KAAK,YAAY;AAAA,IACnC,WACS,gBAAgB,aAAa;AAElC,eAAS,IAAI,KAAK,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AAClD,cAAM,UAAU,KAAK,WAAW,CAAC;AACjC,cAAM,cAAc;AAAA,UAChB,KAAK;AAAA,UACL,KAAK,QAAQ,WAAW,OAAO,aAAK,OAAO,CAAC;AAAA,UAC5C,WAAW;AAAA,UACX,iBAAiB;AAAA,QACrB;AACA,sBAAc,KAAK,WAAW;AAC9B,sBAAc,KAAK,gBAAgB;AAAA,MACvC;AAAA,IACJ,WACS,gBAAgB,aAAa;AAClC,oBAAc,KAAK;AAAA,QACf,KAAK;AAAA,QACL,KAAK,KAAK,WAAW,OAAO,aAAK,OAAO,CAAC;AAAA,QACzC,WAAW;AAAA,QACX,iBAAiB;AAAA,MACrB,CAAC;AAAA,IACL,WACS,gBAAgB,MAAM;AAE3B,oBAAc,KAAK,mBAAmB,MAAM,SAAS,eAAe,mBAAmB,CAAC;AAAA,IAC5F,OACK;AACD,YAAM,MAAM,sBAAsB;AAAA,IACtC;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,mBAAmB,SAAS,SAAS,eAAe,qBAAqB;AAC9E,QAAM,eAAe,cAAM,aAAa;AACxC,eAAa,KAAK,QAAQ,IAAI;AAC9B,QAAM,yBAAyB,cAAM,mBAAmB;AAExD,yBAAuB,KAAK,CAAC;AAC7B,SAAO;AAAA,IACH,KAAK;AAAA,IACL,KAAK,QAAQ;AAAA,IACb,WAAW;AAAA,IACX,iBAAiB;AAAA,EACrB;AACJ;;;ACreO,IAAI;AAAA,CACV,SAAUE,YAAW;AAClB,EAAAA,WAAUA,WAAU,QAAQ,IAAI,CAAC,IAAI;AACrC,EAAAA,WAAUA,WAAU,YAAY,IAAI,CAAC,IAAI;AACzC,EAAAA,WAAUA,WAAU,sBAAsB,IAAI,CAAC,IAAI;AACnD,EAAAA,WAAUA,WAAU,qCAAqC,IAAI,CAAC,IAAI;AAClE,EAAAA,WAAUA,WAAU,2BAA2B,IAAI,CAAC,IAAI;AACxD,EAAAA,WAAUA,WAAU,aAAa,IAAI,CAAC,IAAI;AAC9C,GAAG,cAAc,YAAY,CAAC,EAAE;AACzB,SAAS,YAAY,MAAM;AAE9B,MAAI,gBAAgB,UAAU,SAAS,UAAU;AAC7C,WAAO,UAAU;AAAA,EACrB,WACS,gBAAgB,cAAc,SAAS,cAAc;AAC1D,WAAO,UAAU;AAAA,EACrB,WACS,gBAAgB,uBACrB,SAAS,uBAAuB;AAChC,WAAO,UAAU;AAAA,EACrB,WACS,gBAAgB,oCACrB,SAAS,oCAAoC;AAC7C,WAAO,UAAU;AAAA,EACrB,WACS,gBAAgB,2BACrB,SAAS,2BAA2B;AACpC,WAAO,UAAU;AAAA,EACrB,WACS,gBAAgB,eAAe,SAAS,eAAe;AAC5D,WAAO,UAAU;AAAA,EACrB,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACJ;AAWO,SAAS,wBAAwB,YAAY,aAAa,cAAc,eAAe,sBAAsB,eAAe;AAC/H,QAAM,iBAAiB,uBAAuB,YAAY,aAAa,YAAY;AACnF,QAAMC,gBAAe,0BAA0B,cAAc,IACvD,qCACA;AACN,SAAO,cAAc,gBAAgB,eAAeA,eAAc,oBAAoB;AAC1F;AAaO,SAAS,kCAAkC,YAAY,aAAa,GAAG,sBAAsB,UAAU,kBAAkB;AAC5H,QAAM,iBAAiB,iCAAiC,YAAY,aAAa,UAAU,CAAC;AAC5F,QAAMA,gBAAe,0BAA0B,cAAc,IACvD,qCACA;AACN,SAAO,iBAAiB,eAAe,CAAC,GAAGA,eAAc,oBAAoB;AACjF;AACO,SAAS,+BAA+B,MAAM,eAAeA,eAAc,sBAAsB;AACpG,QAAM,YAAY,KAAK;AACvB,QAAM,0BAA0B,cAAM,MAAM,CAAC,YAAY;AACrD,WAAO,cAAM,SAAS,CAAC,aAAa;AAChC,aAAO,SAAS,WAAW;AAAA,IAC/B,CAAC;AAAA,EACL,CAAC;AAED,MAAI,eAAe;AAIf,WAAO,SAAU,QAAQ;AAIrB,YAAM,aAAa,YAAI,QAAQ,CAAC,YAAY,QAAQ,IAAI;AACxD,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,cAAM,UAAU,KAAK,CAAC;AACtB,cAAM,iBAAiB,QAAQ;AAC/B,cAAM,gBAAgB,WAAW,CAAC;AAClC,YAAI,kBAAkB,UAAa,cAAc,KAAK,IAAI,MAAM,OAAO;AAEnE;AAAA,QACJ;AACA;AAAU,mBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AAC/C,kBAAM,WAAW,QAAQ,CAAC;AAC1B,kBAAM,iBAAiB,SAAS;AAChC,qBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,oBAAM,YAAY,KAAK,GAAG,IAAI,CAAC;AAC/B,kBAAIA,cAAa,WAAW,SAAS,CAAC,CAAC,MAAM,OAAO;AAGhD,yBAAS;AAAA,cACb;AAAA,YACJ;AAGA,mBAAO;AAAA,UACX;AAAA,MAGJ;AAEA,aAAO;AAAA,IACX;AAAA,EACJ,WACS,2BAA2B,CAAC,sBAAsB;AAGvD,UAAM,kBAAkB,YAAI,MAAM,CAAC,YAAY;AAC3C,aAAO,gBAAQ,OAAO;AAAA,IAC1B,CAAC;AACD,UAAM,cAAc,eAAO,iBAAiB,CAAC,QAAQ,SAAS,QAAQ;AAClE,sBAAQ,SAAS,CAAC,gBAAgB;AAC9B,YAAI,CAAC,YAAI,QAAQ,YAAY,YAAY,GAAG;AACxC,iBAAO,YAAY,YAAY,IAAI;AAAA,QACvC;AACA,wBAAQ,YAAY,iBAAiB,CAAC,sBAAsB;AACxD,cAAI,CAAC,YAAI,QAAQ,iBAAiB,GAAG;AACjC,mBAAO,iBAAiB,IAAI;AAAA,UAChC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AACD,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AAIL,WAAO,WAAY;AACf,YAAM,YAAY,KAAK,GAAG,CAAC;AAC3B,aAAO,YAAY,UAAU,YAAY;AAAA,IAC7C;AAAA,EACJ,OACK;AAMD,WAAO,WAAY;AACf,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,cAAM,UAAU,KAAK,CAAC;AACtB,cAAM,iBAAiB,QAAQ;AAC/B;AAAU,mBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AAC/C,kBAAM,WAAW,QAAQ,CAAC;AAC1B,kBAAM,iBAAiB,SAAS;AAChC,qBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,oBAAM,YAAY,KAAK,GAAG,IAAI,CAAC;AAC/B,kBAAIA,cAAa,WAAW,SAAS,CAAC,CAAC,MAAM,OAAO;AAGhD,yBAAS;AAAA,cACb;AAAA,YACJ;AAGA,mBAAO;AAAA,UACX;AAAA,MAGJ;AAEA,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AACO,SAAS,wCAAwC,KAAKA,eAAc,sBAAsB;AAC7F,QAAM,0BAA0B,cAAM,KAAK,CAAC,aAAa;AACrD,WAAO,SAAS,WAAW;AAAA,EAC/B,CAAC;AACD,QAAM,aAAa,IAAI;AAGvB,MAAI,2BAA2B,CAAC,sBAAsB;AAClD,UAAM,oBAAoB,gBAAQ,GAAG;AACrC,QAAI,kBAAkB,WAAW,KAC7B,gBAAQ,kBAAkB,CAAC,EAAE,eAAe,GAAG;AAC/C,YAAM,oBAAoB,kBAAkB,CAAC;AAC7C,YAAM,yBAAyB,kBAAkB;AACjD,aAAO,WAAY;AACf,eAAO,KAAK,GAAG,CAAC,EAAE,iBAAiB;AAAA,MACvC;AAAA,IACJ,OACK;AACD,YAAM,cAAc,eAAO,mBAAmB,CAAC,QAAQ,aAAa,QAAQ;AACxE,eAAO,YAAY,YAAY,IAAI;AACnC,wBAAQ,YAAY,iBAAiB,CAAC,sBAAsB;AACxD,iBAAO,iBAAiB,IAAI;AAAA,QAChC,CAAC;AACD,eAAO;AAAA,MACX,GAAG,CAAC,CAAC;AACL,aAAO,WAAY;AACf,cAAM,YAAY,KAAK,GAAG,CAAC;AAC3B,eAAO,YAAY,UAAU,YAAY,MAAM;AAAA,MACnD;AAAA,IACJ;AAAA,EACJ,OACK;AACD,WAAO,WAAY;AACf;AAAU,iBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AAC3C,gBAAM,WAAW,IAAI,CAAC;AACtB,gBAAM,iBAAiB,SAAS;AAChC,mBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,kBAAM,YAAY,KAAK,GAAG,IAAI,CAAC;AAC/B,gBAAIA,cAAa,WAAW,SAAS,CAAC,CAAC,MAAM,OAAO;AAGhD,uBAAS;AAAA,YACb;AAAA,UACJ;AAEA,iBAAO;AAAA,QACX;AAEA,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AACA,IAAM,6BAAN,cAAyC,WAAW;AAAA,EAChD,YAAY,SAAS,kBAAkB,gBAAgB;AACnD,UAAM;AACN,SAAK,UAAU;AACf,SAAK,mBAAmB;AACxB,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EACA,eAAe;AACX,SAAK,KAAK,KAAK,OAAO;AACtB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,cAAc,MAAM,kBAAkB,UAAU,UAAU;AACtD,QAAI,KAAK,QAAQ,KAAK,oBAClB,KAAK,mBAAmB,kBAAkB;AAC1C,WAAK,UAAU,SAAS,OAAO,QAAQ;AACvC,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAAA,EACA,WAAW,YAAY,UAAU,UAAU;AACvC,QAAI,CAAC,KAAK,cAAc,YAAY,UAAU,QAAQ,UAAU,QAAQ,GAAG;AACvE,YAAM,WAAW,YAAY,UAAU,QAAQ;AAAA,IACnD;AAAA,EACJ;AAAA,EACA,eAAe,gBAAgB,UAAU,UAAU;AAC/C,QAAI,CAAC,KAAK,cAAc,gBAAgB,UAAU,sBAAsB,UAAU,QAAQ,GAAG;AACzF,YAAM,WAAW,gBAAgB,UAAU,QAAQ;AAAA,IACvD;AAAA,EACJ;AAAA,EACA,kBAAkB,mBAAmB,UAAU,UAAU;AACrD,QAAI,CAAC,KAAK,cAAc,mBAAmB,UAAU,qCAAqC,UAAU,QAAQ,GAAG;AAC3G,YAAM,WAAW,mBAAmB,UAAU,QAAQ;AAAA,IAC1D;AAAA,EACJ;AAAA,EACA,SAAS,UAAU,UAAU,UAAU;AACnC,QAAI,CAAC,KAAK,cAAc,UAAU,UAAU,YAAY,UAAU,QAAQ,GAAG;AACzE,YAAM,WAAW,UAAU,UAAU,QAAQ;AAAA,IACjD;AAAA,EACJ;AAAA,EACA,YAAY,aAAa,UAAU,UAAU;AACzC,QAAI,CAAC,KAAK,cAAc,aAAa,UAAU,2BAA2B,UAAU,QAAQ,GAAG;AAC3F,YAAM,WAAW,aAAa,UAAU,QAAQ;AAAA,IACpD;AAAA,EACJ;AACJ;AAIA,IAAM,gCAAN,cAA4C,YAAY;AAAA,EACpD,YAAY,kBAAkB,gBAAgB,WAAW;AACrD,UAAM;AACN,SAAK,mBAAmB;AACxB,SAAK,iBAAiB;AACtB,SAAK,YAAY;AACjB,SAAK,SAAS,CAAC;AAAA,EACnB;AAAA,EACA,cAAc,MAAM,kBAAkB;AAClC,QAAI,KAAK,QAAQ,KAAK,oBAClB,KAAK,mBAAmB,qBACvB,KAAK,cAAc,UAAa,SAAS,KAAK,YAAY;AAC3D,WAAK,SAAS,KAAK;AAAA,IACvB;AAAA,EACJ;AAAA,EACA,YAAY,MAAM;AACd,SAAK,cAAc,MAAM,UAAU,MAAM;AAAA,EAC7C;AAAA,EACA,gBAAgB,MAAM;AAClB,SAAK,cAAc,MAAM,UAAU,UAAU;AAAA,EACjD;AAAA,EACA,yBAAyB,MAAM;AAC3B,SAAK,cAAc,MAAM,UAAU,oBAAoB;AAAA,EAC3D;AAAA,EACA,sCAAsC,MAAM;AACxC,SAAK,cAAc,MAAM,UAAU,mCAAmC;AAAA,EAC1E;AAAA,EACA,6BAA6B,MAAM;AAC/B,SAAK,cAAc,MAAM,UAAU,yBAAyB;AAAA,EAChE;AAAA,EACA,iBAAiB,MAAM;AACnB,SAAK,cAAc,MAAM,UAAU,WAAW;AAAA,EAClD;AACJ;AACA,SAAS,wBAAwB,MAAM;AACnC,QAAM,SAAS,IAAI,MAAM,IAAI;AAC7B,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC3B,WAAO,CAAC,IAAI,CAAC;AAAA,EACjB;AACA,SAAO;AACX;AAMA,SAAS,eAAe,MAAM;AAC1B,MAAIC,QAAO,CAAC,EAAE;AACd,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,UAAM,UAAU,KAAK,CAAC;AACtB,UAAM,aAAa,CAAC;AACpB,aAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,KAAK;AAClC,YAAM,iBAAiBA,MAAK,CAAC;AAC7B,iBAAW,KAAK,iBAAiB,MAAM,QAAQ,YAAY;AAC3D,eAAS,IAAI,GAAG,IAAI,QAAQ,gBAAgB,QAAQ,KAAK;AACrD,cAAM,sBAAsB,MAAM,QAAQ,gBAAgB,CAAC;AAC3D,mBAAW,KAAK,iBAAiB,mBAAmB;AAAA,MACxD;AAAA,IACJ;AACA,IAAAA,QAAO;AAAA,EACX;AACA,SAAOA;AACX;AAIA,SAAS,mBAAmB,mBAAmB,gBAAgB,KAAK;AAChE,WAAS,aAAa,GAAG,aAAa,kBAAkB,QAAQ,cAAc;AAE1E,QAAI,eAAe,KAAK;AACpB;AAAA,IACJ;AACA,UAAM,yBAAyB,kBAAkB,UAAU;AAC3D,aAAS,YAAY,GAAG,YAAY,eAAe,QAAQ,aAAa;AACpE,YAAM,YAAY,eAAe,SAAS;AAC1C,UAAI,uBAAuB,SAAS,MAAM,MAAM;AAC5C,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AACX;AACO,SAAS,kCAAkC,UAAU,GAAG;AAC3D,QAAM,cAAc,YAAI,UAAU,CAAC,YAAY,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC;AAC9E,QAAM,cAAc,wBAAwB,YAAY,MAAM;AAC9D,QAAM,aAAa,YAAI,aAAa,CAAC,iBAAiB;AAClD,UAAM,OAAO,CAAC;AACd,oBAAQ,cAAc,CAAC,SAAS;AAC5B,YAAMA,QAAO,eAAe,KAAK,WAAW;AAC5C,sBAAQA,OAAM,CAAC,YAAY;AACvB,aAAK,OAAO,IAAI;AAAA,MACpB,CAAC;AAAA,IACL,CAAC;AACD,WAAO;AAAA,EACX,CAAC;AACD,MAAI,UAAU;AAEd,WAAS,aAAa,GAAG,cAAc,GAAG,cAAc;AACpD,UAAM,cAAc;AACpB,cAAU,wBAAwB,YAAY,MAAM;AAEpD,aAAS,SAAS,GAAG,SAAS,YAAY,QAAQ,UAAU;AACxD,YAAM,0BAA0B,YAAY,MAAM;AAElD,eAAS,cAAc,GAAG,cAAc,wBAAwB,QAAQ,eAAe;AACnF,cAAM,iBAAiB,wBAAwB,WAAW,EAAE;AAC5D,cAAM,YAAY,wBAAwB,WAAW,EAAE;AACvD,cAAM,aAAa,eAAe,cAAc;AAChD,cAAM,WAAW,mBAAmB,YAAY,YAAY,MAAM;AAElE,YAAI,YAAY,gBAAQ,SAAS,KAAK,eAAe,WAAW,GAAG;AAC/D,gBAAM,gBAAgB,YAAY,MAAM;AAExC,cAAI,aAAa,eAAe,cAAc,MAAM,OAAO;AACvD,0BAAc,KAAK,cAAc;AAEjC,qBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,oBAAM,UAAU,WAAW,CAAC;AAC5B,yBAAW,MAAM,EAAE,OAAO,IAAI;AAAA,YAClC;AAAA,UACJ;AAAA,QACJ,OAEK;AACD,gBAAM,6BAA6B,kBAAkB,WAAW,aAAa,GAAG,cAAc;AAC9F,kBAAQ,MAAM,IAAI,QAAQ,MAAM,EAAE,OAAO,0BAA0B;AAEnE,0BAAQ,4BAA4B,CAAC,SAAS;AAC1C,kBAAMC,cAAa,eAAe,KAAK,WAAW;AAClD,4BAAQA,aAAY,CAAC,QAAQ;AACzB,yBAAW,MAAM,EAAE,GAAG,IAAI;AAAA,YAC9B,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AACO,SAAS,uBAAuB,YAAY,aAAa,GAAG,QAAQ;AACvE,QAAM,UAAU,IAAI,8BAA8B,YAAY,UAAU,aAAa,MAAM;AAC3F,cAAY,OAAO,OAAO;AAC1B,SAAO,kCAAkC,QAAQ,QAAQ,CAAC;AAC9D;AACO,SAAS,iCAAiC,YAAY,aAAa,UAAU,GAAG;AACnF,QAAM,mBAAmB,IAAI,8BAA8B,YAAY,QAAQ;AAC/E,cAAY,OAAO,gBAAgB;AACnC,QAAM,YAAY,iBAAiB;AACnC,QAAM,iBAAiB,IAAI,2BAA2B,aAAa,YAAY,QAAQ;AACvF,QAAM,WAAW,eAAe,aAAa;AAC7C,QAAM,aAAa,IAAI,YAAgB,EAAE,YAAY,UAAU,CAAC;AAChE,QAAM,YAAY,IAAI,YAAgB,EAAE,YAAY,SAAS,CAAC;AAC9D,SAAO,kCAAkC,CAAC,YAAY,SAAS,GAAG,CAAC;AACvE;AACO,SAAS,aAAa,aAAa,YAAY;AAClD;AAAkB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3D,YAAM,YAAY,YAAY,CAAC;AAC/B,UAAI,UAAU,WAAW,WAAW,QAAQ;AACxC;AAAA,MACJ;AACA,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,cAAM,YAAY,WAAW,CAAC;AAC9B,cAAM,WAAW,UAAU,CAAC;AAC5B,cAAM,iBAAiB,cAAc,YACjC,SAAS,mBAAmB,UAAU,YAAY,MAAM;AAC5D,YAAI,mBAAmB,OAAO;AAC1B,mBAAS;AAAA,QACb;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,SAAO;AACX;AACO,SAAS,qBAAqB,QAAQ,OAAO;AAChD,SAAQ,OAAO,SAAS,MAAM,UAC1B,cAAM,QAAQ,CAAC,SAAS,QAAQ;AAC5B,UAAM,eAAe,MAAM,GAAG;AAC9B,WAAQ,YAAY,gBAChB,aAAa,mBAAmB,QAAQ,YAAY;AAAA,EAC5D,CAAC;AACT;AACO,SAAS,0BAA0B,gBAAgB;AACtD,SAAO,cAAM,gBAAgB,CAAC,mBAAmB,cAAM,gBAAgB,CAAC,eAAe,cAAM,YAAY,CAAC,UAAU,gBAAQ,MAAM,eAAe,CAAC,CAAC,CAAC;AACxJ;;;AC/cO,SAAS,kBAAkB,SAAS;AACvC,QAAM,mCAAmC,QAAQ,kBAAkB,SAAS;AAAA,IACxE,OAAO,QAAQ;AAAA,IACf,YAAY,QAAQ;AAAA,IACpB,aAAa,QAAQ;AAAA,EACzB,CAAC;AACD,SAAO,YAAI,kCAAkC,CAAC,iBAAkB,OAAO,OAAO,EAAE,MAAM,0BAA0B,4BAA4B,GAAG,YAAY,CAAE;AACjK;AACO,SAAS,gBAAgB,WAAW,YAAY,gBAAgB,aAAa;AAChF,QAAM,kBAAkB,gBAAQ,WAAW,CAAC,iBAAiB,6BAA6B,cAAc,cAAc,CAAC;AACvH,QAAM,+BAA+B,uCAAuC,WAAW,YAAY,cAAc;AACjH,QAAM,oBAAoB,gBAAQ,WAAW,CAAC,YAAY,oBAAoB,SAAS,cAAc,CAAC;AACtG,QAAM,sBAAsB,gBAAQ,WAAW,CAAC,YAAY,gCAAgC,SAAS,WAAW,aAAa,cAAc,CAAC;AAC5I,SAAO,gBAAgB,OAAO,8BAA8B,mBAAmB,mBAAmB;AACtG;AACA,SAAS,6BAA6B,cAAc,gBAAgB;AAChE,QAAMC,oBAAmB,IAAI,8BAA8B;AAC3D,eAAa,OAAOA,iBAAgB;AACpC,QAAM,qBAAqBA,kBAAiB;AAC5C,QAAM,mBAAmB,gBAAQ,oBAAoB,+BAA+B;AACpF,QAAM,aAAa,eAAO,kBAAkB,CAAC,cAAc;AACvD,WAAO,UAAU,SAAS;AAAA,EAC9B,CAAC;AACD,QAAM,SAAS,YAAI,eAAO,UAAU,GAAG,CAAC,mBAAmB;AACvD,UAAM,YAAY,aAAM,cAAc;AACtC,UAAM,MAAM,eAAe,yBAAyB,cAAc,cAAc;AAChF,UAAM,UAAU,qBAAqB,SAAS;AAC9C,UAAM,WAAW;AAAA,MACb,SAAS;AAAA,MACT,MAAM,0BAA0B;AAAA,MAChC,UAAU,aAAa;AAAA,MACvB;AAAA,MACA,YAAY,UAAU;AAAA,IAC1B;AACA,UAAM,QAAQ,2BAA2B,SAAS;AAClD,QAAI,OAAO;AACP,eAAS,YAAY;AAAA,IACzB;AACA,WAAO;AAAA,EACX,CAAC;AACD,SAAO;AACX;AACO,SAAS,gCAAgC,MAAM;AAClD,SAAO,GAAG,qBAAqB,IAAI,CAAC,MAAM,KAAK,GAAG,MAAM,2BAA2B,IAAI,CAAC;AAC5F;AACA,SAAS,2BAA2B,MAAM;AACtC,MAAI,gBAAgB,UAAU;AAC1B,WAAO,KAAK,aAAa;AAAA,EAC7B,WACS,gBAAgB,aAAa;AAClC,WAAO,KAAK;AAAA,EAChB,OACK;AACD,WAAO;AAAA,EACX;AACJ;AACO,IAAM,gCAAN,cAA4C,YAAY;AAAA,EAC3D,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,iBAAiB,CAAC;AAAA,EAC3B;AAAA,EACA,iBAAiB,SAAS;AACtB,SAAK,eAAe,KAAK,OAAO;AAAA,EACpC;AAAA,EACA,YAAY,QAAQ;AAChB,SAAK,eAAe,KAAK,MAAM;AAAA,EACnC;AAAA,EACA,6BAA6B,SAAS;AAClC,SAAK,eAAe,KAAK,OAAO;AAAA,EACpC;AAAA,EACA,yBAAyB,YAAY;AACjC,SAAK,eAAe,KAAK,UAAU;AAAA,EACvC;AAAA,EACA,sCAAsC,eAAe;AACjD,SAAK,eAAe,KAAK,aAAa;AAAA,EAC1C;AAAA,EACA,gBAAgB,MAAM;AAClB,SAAK,eAAe,KAAK,IAAI;AAAA,EACjC;AAAA,EACA,iBAAiB,IAAI;AACjB,SAAK,eAAe,KAAK,EAAE;AAAA,EAC/B;AAAA,EACA,cAAc,UAAU;AACpB,SAAK,eAAe,KAAK,QAAQ;AAAA,EACrC;AACJ;AACO,SAAS,gCAAgC,MAAM,UAAU,WAAW,gBAAgB;AACvF,QAAM,SAAS,CAAC;AAChB,QAAM,cAAc,eAAO,UAAU,CAAC,QAAQ,YAAY;AACtD,QAAI,QAAQ,SAAS,KAAK,MAAM;AAC5B,aAAO,SAAS;AAAA,IACpB;AACA,WAAO;AAAA,EACX,GAAG,CAAC;AACJ,MAAI,cAAc,GAAG;AACjB,UAAM,SAAS,eAAe,4BAA4B;AAAA,MACtD,cAAc;AAAA,MACd,aAAa;AAAA,IACjB,CAAC;AACD,WAAO,KAAK;AAAA,MACR,SAAS;AAAA,MACT,MAAM,0BAA0B;AAAA,MAChC,UAAU,KAAK;AAAA,IACnB,CAAC;AAAA,EACL;AACA,SAAO;AACX;AAIO,SAAS,yBAAyB,UAAU,mBAAmB,WAAW;AAC7E,QAAM,SAAS,CAAC;AAChB,MAAI;AACJ,MAAI,CAAC,iBAAS,mBAAmB,QAAQ,GAAG;AACxC,aACI,kCAAkC,QAAQ,6CAA6C,SAAS;AAEpG,WAAO,KAAK;AAAA,MACR,SAAS;AAAA,MACT,MAAM,0BAA0B;AAAA,MAChC;AAAA,IACJ,CAAC;AAAA,EACL;AACA,SAAO;AACX;AACO,SAAS,wBAAwB,SAAS,UAAU,gBAAgB,OAAO,CAAC,GAAG;AAClF,QAAM,SAAS,CAAC;AAChB,QAAM,mBAAmB,qBAAqB,SAAS,UAAU;AACjE,MAAI,gBAAQ,gBAAgB,GAAG;AAC3B,WAAO,CAAC;AAAA,EACZ,OACK;AACD,UAAM,WAAW,QAAQ;AACzB,UAAM,qBAAqB,iBAAS,kBAAkB,OAAO;AAC7D,QAAI,oBAAoB;AACpB,aAAO,KAAK;AAAA,QACR,SAAS,eAAe,wBAAwB;AAAA,UAC5C,cAAc;AAAA,UACd,mBAAmB;AAAA,QACvB,CAAC;AAAA,QACD,MAAM,0BAA0B;AAAA,QAChC;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,UAAM,iBAAiB,mBAAW,kBAAkB,KAAK,OAAO,CAAC,OAAO,CAAC,CAAC;AAC1E,UAAM,sBAAsB,gBAAQ,gBAAgB,CAAC,gBAAgB;AACjE,YAAM,UAAU,cAAM,IAAI;AAC1B,cAAQ,KAAK,WAAW;AACxB,aAAO,wBAAwB,SAAS,aAAa,gBAAgB,OAAO;AAAA,IAChF,CAAC;AACD,WAAO,OAAO,OAAO,mBAAmB;AAAA,EAC5C;AACJ;AACO,SAAS,qBAAqB,YAAY;AAC7C,MAAI,SAAS,CAAC;AACd,MAAI,gBAAQ,UAAU,GAAG;AACrB,WAAO;AAAA,EACX;AACA,QAAM,YAAY,aAAM,UAAU;AAElC,MAAI,qBAAqB,aAAa;AAClC,WAAO,KAAK,UAAU,cAAc;AAAA,EACxC,WACS,qBAAqB,eAC1B,qBAAqB,UACrB,qBAAqB,uBACrB,qBAAqB,oCACrB,qBAAqB,2BACrB,qBAAqB,YAAY;AACjC,aAAS,OAAO,OAAO,qBAAqB,UAAU,UAAU,CAAC;AAAA,EACrE,WACS,qBAAqB,aAAa;AAEvC,aAAS,gBAAQ,YAAI,UAAU,YAAY,CAAC,eAAe,qBAAqB,WAAW,UAAU,CAAC,CAAC;AAAA,EAC3G,WACS,qBAAqB,UAAU;AAAA,EAExC,OACK;AACD,UAAM,MAAM,sBAAsB;AAAA,EACtC;AACA,QAAM,kBAAkB,eAAe,SAAS;AAChD,QAAM,UAAU,WAAW,SAAS;AACpC,MAAI,mBAAmB,SAAS;AAC5B,UAAM,OAAO,aAAK,UAAU;AAC5B,WAAO,OAAO,OAAO,qBAAqB,IAAI,CAAC;AAAA,EACnD,OACK;AACD,WAAO;AAAA,EACX;AACJ;AACA,IAAM,cAAN,cAA0B,YAAY;AAAA,EAClC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,eAAe,CAAC;AAAA,EACzB;AAAA,EACA,iBAAiB,MAAM;AACnB,SAAK,aAAa,KAAK,IAAI;AAAA,EAC/B;AACJ;AACO,SAAS,2BAA2B,cAAc,gBAAgB;AACrE,QAAM,cAAc,IAAI,YAAY;AACpC,eAAa,OAAO,WAAW;AAC/B,QAAM,MAAM,YAAY;AACxB,QAAM,SAAS,gBAAQ,KAAK,CAAC,WAAW;AACpC,UAAM,aAAa,kBAAU,OAAO,UAAU;AAC9C,WAAO,gBAAQ,YAAY,CAAC,iBAAiB,eAAe;AACxD,YAAM,qBAAqB,wBAAwB,CAAC,eAAe,GAAG,CAAC,GAAG,wBAAwB,CAAC;AACnG,UAAI,gBAAQ,kBAAkB,GAAG;AAC7B,eAAO;AAAA,UACH;AAAA,YACI,SAAS,eAAe,2BAA2B;AAAA,cAC/C;AAAA,cACA,aAAa;AAAA,cACb,gBAAgB;AAAA,YACpB,CAAC;AAAA,YACD,MAAM,0BAA0B;AAAA,YAChC,UAAU,aAAa;AAAA,YACvB,YAAY,OAAO;AAAA,YACnB,aAAa,aAAa;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ,OACK;AACD,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,SAAO;AACX;AACO,SAAS,yCAAyC,cAAc,oBAAoB,gBAAgB;AACvG,QAAM,cAAc,IAAI,YAAY;AACpC,eAAa,OAAO,WAAW;AAC/B,MAAI,MAAM,YAAY;AAGtB,QAAM,eAAO,KAAK,CAAC,WAAW,OAAO,sBAAsB,IAAI;AAC/D,QAAM,SAAS,gBAAQ,KAAK,CAAC,WAAW;AACpC,UAAM,iBAAiB,OAAO;AAC9B,UAAM,qBAAqB,OAAO,gBAAgB;AAClD,UAAM,eAAe,uBAAuB,gBAAgB,cAAc,oBAAoB,MAAM;AACpG,UAAM,sBAAsB,6BAA6B,cAAc,QAAQ,cAAc,cAAc;AAC3G,UAAM,4BAA4B,mCAAmC,cAAc,QAAQ,cAAc,cAAc;AACvH,WAAO,oBAAoB,OAAO,yBAAyB;AAAA,EAC/D,CAAC;AACD,SAAO;AACX;AACO,IAAM,sBAAN,cAAkC,YAAY;AAAA,EACjD,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,iBAAiB,CAAC;AAAA,EAC3B;AAAA,EACA,6BAA6B,SAAS;AAClC,SAAK,eAAe,KAAK,OAAO;AAAA,EACpC;AAAA,EACA,yBAAyB,YAAY;AACjC,SAAK,eAAe,KAAK,UAAU;AAAA,EACvC;AAAA,EACA,sCAAsC,eAAe;AACjD,SAAK,eAAe,KAAK,aAAa;AAAA,EAC1C;AAAA,EACA,gBAAgB,MAAM;AAClB,SAAK,eAAe,KAAK,IAAI;AAAA,EACjC;AACJ;AACO,SAAS,oBAAoB,cAAc,gBAAgB;AAC9D,QAAM,cAAc,IAAI,YAAY;AACpC,eAAa,OAAO,WAAW;AAC/B,QAAM,MAAM,YAAY;AACxB,QAAM,SAAS,gBAAQ,KAAK,CAAC,WAAW;AACpC,QAAI,OAAO,WAAW,SAAS,KAAK;AAChC,aAAO;AAAA,QACH;AAAA,UACI,SAAS,eAAe,8BAA8B;AAAA,YAClD;AAAA,YACA,aAAa;AAAA,UACjB,CAAC;AAAA,UACD,MAAM,0BAA0B;AAAA,UAChC,UAAU,aAAa;AAAA,UACvB,YAAY,OAAO;AAAA,QACvB;AAAA,MACJ;AAAA,IACJ,OACK;AACD,aAAO,CAAC;AAAA,IACZ;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,kCAAkC,eAAe,cAAc,gBAAgB;AAC3F,QAAM,SAAS,CAAC;AAChB,kBAAQ,eAAe,CAAC,gBAAgB;AACpC,UAAMA,oBAAmB,IAAI,oBAAoB;AACjD,gBAAY,OAAOA,iBAAgB;AACnC,UAAM,qBAAqBA,kBAAiB;AAC5C,oBAAQ,oBAAoB,CAAC,aAAa;AACtC,YAAM,WAAW,YAAY,QAAQ;AACrC,YAAM,qBAAqB,SAAS,gBAAgB;AACpD,YAAM,iBAAiB,SAAS;AAChC,YAAM,QAAQ,iCAAiC,gBAAgB,aAAa,UAAU,kBAAkB;AACxG,YAAM,wBAAwB,MAAM,CAAC;AACrC,UAAI,gBAAQ,gBAAQ,qBAAqB,CAAC,GAAG;AACzC,cAAM,SAAS,eAAe,0BAA0B;AAAA,UACpD,cAAc;AAAA,UACd,YAAY;AAAA,QAChB,CAAC;AACD,eAAO,KAAK;AAAA,UACR,SAAS;AAAA,UACT,MAAM,0BAA0B;AAAA,UAChC,UAAU,YAAY;AAAA,QAC1B,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACD,SAAO;AACX;AACA,SAAS,6BAA6B,cAAc,aAAa,MAAM,gBAAgB;AACnF,QAAM,sBAAsB,CAAC;AAC7B,QAAM,uBAAuB,eAAO,cAAc,CAAC,QAAQ,SAAS,eAAe;AAE/E,QAAI,YAAY,WAAW,UAAU,EAAE,sBAAsB,MAAM;AAC/D,aAAO;AAAA,IACX;AACA,oBAAQ,SAAS,CAAC,aAAa;AAC3B,YAAM,wBAAwB,CAAC,UAAU;AACzC,sBAAQ,cAAc,CAAC,cAAc,oBAAoB;AACrD,YAAI,eAAe,mBACf,aAAa,cAAc,QAAQ;AAAA,QAEnC,YAAY,WAAW,eAAe,EAAE,sBAAsB,MAAM;AACpE,gCAAsB,KAAK,eAAe;AAAA,QAC9C;AAAA,MACJ,CAAC;AACD,UAAI,sBAAsB,SAAS,KAC/B,CAAC,aAAa,qBAAqB,QAAQ,GAAG;AAC9C,4BAAoB,KAAK,QAAQ;AACjC,eAAO,KAAK;AAAA,UACR,MAAM;AAAA,UACN,MAAM;AAAA,QACV,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX,GAAG,CAAC,CAAC;AACL,QAAM,aAAa,YAAI,sBAAsB,CAAC,sBAAsB;AAChE,UAAM,cAAc,YAAI,kBAAkB,MAAM,CAAC,eAAe,aAAa,CAAC;AAC9E,UAAM,cAAc,eAAe,+BAA+B;AAAA,MAC9D,cAAc;AAAA,MACd;AAAA,MACA,kBAAkB;AAAA,MAClB,YAAY,kBAAkB;AAAA,IAClC,CAAC;AACD,WAAO;AAAA,MACH,SAAS;AAAA,MACT,MAAM,0BAA0B;AAAA,MAChC,UAAU,KAAK;AAAA,MACf,YAAY,YAAY;AAAA,MACxB,cAAc,kBAAkB;AAAA,IACpC;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AACO,SAAS,mCAAmC,cAAc,aAAa,MAAM,gBAAgB;AAEhG,QAAM,kBAAkB,eAAO,cAAc,CAAC,QAAQ,SAAS,QAAQ;AACnE,UAAM,kBAAkB,YAAI,SAAS,CAAC,aAAa;AAC/C,aAAO,EAAE,KAAU,MAAM,SAAS;AAAA,IACtC,CAAC;AACD,WAAO,OAAO,OAAO,eAAe;AAAA,EACxC,GAAG,CAAC,CAAC;AACL,QAAM,SAAS,gBAAQ,gBAAQ,iBAAiB,CAAC,mBAAmB;AAChE,UAAM,kBAAkB,YAAY,WAAW,eAAe,GAAG;AAEjE,QAAI,gBAAgB,sBAAsB,MAAM;AAC5C,aAAO,CAAC;AAAA,IACZ;AACA,UAAM,YAAY,eAAe;AACjC,UAAM,aAAa,eAAe;AAClC,UAAM,mCAAmC,eAAO,iBAAiB,CAAC,qBAAqB;AAEnF;AAAA;AAAA,QAEA,YAAY,WAAW,iBAAiB,GAAG,EAAE,sBACzC,QACA,iBAAiB,MAAM;AAAA;AAAA,QAGvB,qBAAqB,iBAAiB,MAAM,UAAU;AAAA;AAAA,IAC9D,CAAC;AACD,UAAM,uBAAuB,YAAI,kCAAkC,CAAC,sBAAsB;AACtF,YAAM,cAAc,CAAC,kBAAkB,MAAM,GAAG,YAAY,CAAC;AAC7D,YAAM,aAAa,YAAY,QAAQ,IAAI,KAAK,YAAY;AAC5D,YAAM,UAAU,eAAe,qCAAqC;AAAA,QAChE,cAAc;AAAA,QACd;AAAA,QACA,kBAAkB;AAAA,QAClB,YAAY,kBAAkB;AAAA,MAClC,CAAC;AACD,aAAO;AAAA,QACH;AAAA,QACA,MAAM,0BAA0B;AAAA,QAChC,UAAU,KAAK;AAAA,QACf;AAAA,QACA,cAAc;AAAA,MAClB;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX,CAAC,CAAC;AACF,SAAO;AACX;AACA,SAAS,uCAAuC,WAAW,YAAY,gBAAgB;AACnF,QAAM,SAAS,CAAC;AAChB,QAAM,aAAa,YAAI,YAAY,CAAC,cAAc,UAAU,IAAI;AAChE,kBAAQ,WAAW,CAAC,aAAa;AAC7B,UAAM,eAAe,SAAS;AAC9B,QAAI,iBAAS,YAAY,YAAY,GAAG;AACpC,YAAM,SAAS,eAAe,4BAA4B,QAAQ;AAClE,aAAO,KAAK;AAAA,QACR,SAAS;AAAA,QACT,MAAM,0BAA0B;AAAA,QAChC,UAAU;AAAA,MACd,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACD,SAAO;AACX;;;AC7aO,SAASC,gBAAe,SAAS;AACpC,QAAM,gBAAgB,iBAAS,SAAS;AAAA,IACpC,gBAAgB;AAAA,EACpB,CAAC;AACD,QAAM,gBAAgB,CAAC;AACvB,kBAAQ,QAAQ,OAAO,CAAC,SAAS;AAC7B,kBAAc,KAAK,IAAI,IAAI;AAAA,EAC/B,CAAC;AACD,SAAO,eAAkB,eAAe,cAAc,cAAc;AACxE;AACO,SAASC,iBAAgB,SAAS;AACrC,YAAU,iBAAS,SAAS;AAAA,IACxB,gBAAgB;AAAA,EACpB,CAAC;AACD,SAAO,gBAAmB,QAAQ,OAAO,QAAQ,YAAY,QAAQ,gBAAgB,QAAQ,WAAW;AAC5G;;;AClBA,IAAM,6BAA6B;AACnC,IAAM,0BAA0B;AAChC,IAAM,uBAAuB;AAC7B,IAAM,iCAAiC;AACvC,IAAM,8BAA8B;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,OAAO,OAAO,2BAA2B;AAElC,SAAS,uBAAuB,OAAO;AAE1C,SAAO,iBAAS,6BAA6B,MAAM,IAAI;AAC3D;AACA,IAAM,uBAAN,cAAmC,MAAM;AAAA,EACrC,YAAY,SAAS,OAAO;AACxB,UAAM,OAAO;AACb,SAAK,QAAQ;AACb,SAAK,iBAAiB,CAAC;AAEvB,WAAO,eAAe,MAAM,WAAW,SAAS;AAEhD,QAAI,MAAM,mBAAmB;AACzB,YAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,IAClD;AAAA,EACJ;AACJ;AACO,IAAM,2BAAN,cAAuC,qBAAqB;AAAA,EAC/D,YAAY,SAAS,OAAO,eAAe;AACvC,UAAM,SAAS,KAAK;AACpB,SAAK,gBAAgB;AACrB,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,IAAM,uBAAN,cAAmC,qBAAqB;AAAA,EAC3D,YAAY,SAAS,OAAO,eAAe;AACvC,UAAM,SAAS,KAAK;AACpB,SAAK,gBAAgB;AACrB,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,IAAM,6BAAN,cAAyC,qBAAqB;AAAA,EACjE,YAAY,SAAS,OAAO;AACxB,UAAM,SAAS,KAAK;AACpB,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,IAAM,qBAAN,cAAiC,qBAAqB;AAAA,EACzD,YAAY,SAAS,OAAO,eAAe;AACvC,UAAM,SAAS,KAAK;AACpB,SAAK,gBAAgB;AACrB,SAAK,OAAO;AAAA,EAChB;AACJ;;;ACnDO,IAAM,iBAAiB,CAAC;AACxB,IAAM,6BAA6B;AACnC,IAAM,0BAAN,cAAsC,MAAM;AAAA,EAC/C,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAIO,IAAM,cAAN,MAAkB;AAAA,EACrB,gBAAgB,QAAQ;AACpB,SAAK,mBAAmB,CAAC;AACzB,SAAK,gBAAgB,CAAC;AACtB,SAAK,kBAAkB,YAAI,QAAQ,iBAAiB,IAC9C,OAAO,kBACP,sBAAsB;AAI5B,QAAI,KAAK,iBAAiB;AACtB,WAAK,8BAA8B;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,iBAAiB,SAAS;AACtB,UAAM,cAAc,oBAAoB,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACjF,gBAAY,uBAAuB;AACnC,WAAO;AAAA,EACX;AAAA,EACA,iCAAiC,SAAS;AACtC,WAAO;AAAA,EACX;AAAA,EACA,gCAAgC,SAAS;AACrC,WAAO;AAAA,EACX;AAAA,EACA,wBAAwB,aAAa,iBAAiB,eAAe,iBAAiB;AAElF,UAAM,gBAAgB,KAAK,oBAAoB;AAC/C,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,UAAM,iBAAiB,CAAC;AACxB,QAAI,oBAAoB;AACxB,UAAM,yBAAyB,KAAK,GAAG,CAAC;AACxC,QAAI,YAAY,KAAK,GAAG,CAAC;AACzB,UAAM,uBAAuB,MAAM;AAC/B,YAAM,gBAAgB,KAAK,GAAG,CAAC;AAG/B,YAAM,MAAM,KAAK,qBAAqB,0BAA0B;AAAA,QAC5D,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU,KAAK,oBAAoB;AAAA,MACvC,CAAC;AACD,YAAM,QAAQ,IAAI,yBAAyB,KAAK,wBAAwB,KAAK,GAAG,CAAC,CAAC;AAElF,YAAM,iBAAiB,kBAAU,cAAc;AAC/C,WAAK,WAAW,KAAK;AAAA,IACzB;AACA,WAAO,CAAC,mBAAmB;AAEvB,UAAI,KAAK,aAAa,WAAW,eAAe,GAAG;AAC/C,6BAAqB;AACrB;AAAA,MACJ,WACS,cAAc,KAAK,IAAI,GAAG;AAE/B,6BAAqB;AAErB,oBAAY,MAAM,MAAM,eAAe;AACvC;AAAA,MACJ,WACS,KAAK,aAAa,WAAW,aAAa,GAAG;AAClD,4BAAoB;AAAA,MACxB,OACK;AACD,oBAAY,KAAK,WAAW;AAC5B,aAAK,kBAAkB,WAAW,cAAc;AAAA,MACpD;AAAA,IACJ;AAIA,SAAK,iBAAiB,eAAe;AAAA,EACzC;AAAA,EACA,kCAAkC,yBAAyB,YAAY,UAAU;AAG7E,QAAI,aAAa,OAAO;AACpB,aAAO;AAAA,IACX;AAEA,QAAI,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,uBAAuB,GAAG;AACxD,aAAO;AAAA,IACX;AAGA,QAAI,KAAK,eAAe,GAAG;AACvB,aAAO;AAAA,IACX;AAIA,QAAI,KAAK,yBAAyB,yBAAyB,KAAK,4BAA4B,yBAAyB,UAAU,CAAC,GAAG;AAC/H,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,4BAA4B,SAAS,cAAc;AAC/C,UAAM,cAAc,KAAK,sBAAsB,SAAS,YAAY;AACpE,UAAM,UAAU,KAAK,0BAA0B,WAAW;AAC1D,WAAO;AAAA,EACX;AAAA,EACA,kBAAkB,iBAAiB,SAAS;AACxC,QAAI,KAAK,mCAAmC,iBAAiB,OAAO,GAAG;AACnE,YAAM,cAAc,KAAK,iBAAiB,eAAe;AACzD,aAAO;AAAA,IACX;AACA,QAAI,KAAK,kCAAkC,eAAe,GAAG;AACzD,YAAM,UAAU,KAAK,WAAW;AAChC,WAAK,aAAa;AAClB,aAAO;AAAA,IACX;AACA,UAAM,IAAI,wBAAwB,eAAe;AAAA,EACrD;AAAA,EACA,yBAAyB,eAAe,SAAS;AAC7C,WAAQ,KAAK,mCAAmC,eAAe,OAAO,KAClE,KAAK,kCAAkC,aAAa;AAAA,EAC5D;AAAA,EACA,mCAAmC,iBAAiB,SAAS;AACzD,QAAI,CAAC,KAAK,iCAAiC,eAAe,GAAG;AACzD,aAAO;AAAA,IACX;AAEA,QAAI,gBAAQ,OAAO,GAAG;AAClB,aAAO;AAAA,IACX;AACA,UAAM,gBAAgB,KAAK,GAAG,CAAC;AAC/B,UAAM,2BAA2B,aAAK,SAAS,CAAC,2BAA2B;AACvE,aAAO,KAAK,aAAa,eAAe,sBAAsB;AAAA,IAClE,CAAC,MAAM;AACP,WAAO;AAAA,EACX;AAAA,EACA,kCAAkC,iBAAiB;AAC/C,QAAI,CAAC,KAAK,gCAAgC,eAAe,GAAG;AACxD,aAAO;AAAA,IACX;AACA,UAAM,4BAA4B,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,eAAe;AAC/E,WAAO;AAAA,EACX;AAAA,EACA,yBAAyB,cAAc;AACnC,UAAM,YAAY,KAAK,iBAAiB;AACxC,UAAM,uBAAuB,KAAK,0BAA0B,SAAS;AACrE,WAAO,iBAAS,sBAAsB,YAAY;AAAA,EACtD;AAAA,EACA,sBAAsB;AAClB,UAAM,4BAA4B,KAAK,iBAAiB;AAExD,QAAI,YAAY,KAAK,GAAG,CAAC;AACzB,QAAI,IAAI;AACR,WAAO,MAAM;AACT,YAAM,aAAa,aAAK,2BAA2B,CAAC,kBAAkB;AAClE,cAAM,WAAW,aAAa,WAAW,aAAa;AACtD,eAAO;AAAA,MACX,CAAC;AACD,UAAI,eAAe,QAAW;AAC1B,eAAO;AAAA,MACX;AACA,kBAAY,KAAK,GAAG,CAAC;AACrB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,mBAAmB;AAEf,QAAI,KAAK,WAAW,WAAW,GAAG;AAC9B,aAAO;AAAA,IACX;AACA,UAAM,oBAAoB,KAAK,6BAA6B;AAC5D,UAAM,cAAc,KAAK,mCAAmC;AAC5D,UAAM,oBAAoB,KAAK,iCAAiC;AAChE,WAAO;AAAA,MACH,UAAU,KAAK,wBAAwB,iBAAiB;AAAA,MACxD,kBAAkB;AAAA,MAClB,QAAQ,KAAK,wBAAwB,iBAAiB;AAAA,IAC1D;AAAA,EACJ;AAAA,EACA,0BAA0B;AACtB,UAAM,oBAAoB,KAAK;AAC/B,UAAM,0BAA0B,KAAK;AACrC,WAAO,YAAI,mBAAmB,CAAC,UAAU,QAAQ;AAC7C,UAAI,QAAQ,GAAG;AACX,eAAO;AAAA,MACX;AACA,aAAO;AAAA,QACH,UAAU,KAAK,wBAAwB,QAAQ;AAAA,QAC/C,kBAAkB,wBAAwB,GAAG;AAAA,QAC7C,QAAQ,KAAK,wBAAwB,kBAAkB,MAAM,CAAC,CAAC;AAAA,MACnE;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,mBAAmB;AACf,UAAM,cAAc,YAAI,KAAK,wBAAwB,GAAG,CAAC,YAAY;AACjE,aAAO,KAAK,0BAA0B,OAAO;AAAA,IACjD,CAAC;AACD,WAAO,gBAAQ,WAAW;AAAA,EAC9B;AAAA,EACA,0BAA0B,WAAW;AACjC,QAAI,cAAc,gBAAgB;AAC9B,aAAO,CAAC,GAAG;AAAA,IACf;AACA,UAAM,aAAa,UAAU,WAAW,UAAU,mBAAmB,KAAK,UAAU;AACpF,WAAO,KAAK,cAAc,UAAU;AAAA,EACxC;AAAA;AAAA;AAAA,EAGA,kBAAkB,OAAO,cAAc;AACnC,QAAI,CAAC,KAAK,aAAa,OAAO,GAAG,GAAG;AAChC,mBAAa,KAAK,KAAK;AAAA,IAC3B;AACA,WAAO;AAAA,EACX;AAAA,EACA,SAAS,SAAS;AACd,UAAM,iBAAiB,CAAC;AACxB,QAAI,UAAU,KAAK,GAAG,CAAC;AACvB,WAAO,KAAK,aAAa,SAAS,OAAO,MAAM,OAAO;AAClD,gBAAU,KAAK,WAAW;AAC1B,WAAK,kBAAkB,SAAS,cAAc;AAAA,IAClD;AAEA,WAAO,kBAAU,cAAc;AAAA,EACnC;AAAA,EACA,4BAA4B,UAAU,MAAM,eAAe,cAAc,gBAAgB,gBAAgB,UAAU;AAAA,EAGnH;AAAA,EACA,sBAAsB,SAAS,cAAc;AACzC,UAAM,gBAAgB,KAAK,0BAA0B;AACrD,UAAM,sBAAsB,cAAM,KAAK,qBAAqB;AAC5D,UAAM,cAAc;AAAA,MAChB,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,mBAAmB;AAAA,IACvB;AACA,WAAO;AAAA,EACX;AAAA,EACA,4BAA4B;AACxB,WAAO,YAAI,KAAK,YAAY,CAAC,kBAAkB,KAAK,wBAAwB,aAAa,CAAC;AAAA,EAC9F;AACJ;AACO,SAAS,4BAA4B,UAAU,MAAM,eAAe,cAAc,gBAAgB,gBAAgB,UAAU;AAC/H,QAAM,MAAM,KAAK,4BAA4B,cAAc,cAAc;AACzE,MAAI,oBAAoB,KAAK,iBAAiB,GAAG;AACjD,MAAI,sBAAsB,QAAW;AACjC,UAAM,eAAe,KAAK,oBAAoB;AAC9C,UAAM,cAAc,KAAK,mBAAmB,EAAE,YAAY;AAC1D,UAAM,SAAS,IAAI,eAAe,aAAa,cAAc;AAC7D,wBAAoB,OAAO,aAAa;AACxC,SAAK,iBAAiB,GAAG,IAAI;AAAA,EACjC;AACA,MAAI,0BAA0B,kBAAkB;AAChD,MAAI,aAAa,kBAAkB;AACnC,QAAM,cAAc,kBAAkB;AAGtC,MAAI,KAAK,WAAW,WAAW,KAC3B,eACA,4BAA4B,QAAW;AACvC,8BAA0B;AAC1B,iBAAa;AAAA,EACjB;AAGA,MAAI,4BAA4B,UAAa,eAAe,QAAW;AACnE;AAAA,EACJ;AACA,MAAI,KAAK,kCAAkC,yBAAyB,YAAY,QAAQ,GAAG;AAIvF,SAAK,wBAAwB,UAAU,MAAM,eAAe,uBAAuB;AAAA,EACvF;AACJ;;;AC1RO,IAAM,uBAAuB;AAC7B,IAAM,0BAA0B;AAGhC,IAAM,mBAAmB;AAIzB,IAAM,SAAS,KAAK;AACpB,IAAM,aAAa,KAAK;AACxB,IAAM,WAAW,KAAK;AACtB,IAAM,mBAAmB,KAAK;AAC9B,IAAM,eAAe,KAAK;AAC1B,IAAM,uBAAuB,KAAK;AAElC,SAAS,4BAA4B,SAAS,cAAc,YAAY;AAC3E,SAAO,aAAa,eAAe;AACvC;AACA,IAAM,yBAAyB,KAAK;;;ACnB7B,IAAM,uBAAN,MAA2B;AAAA,EAC9B,YAAY,SAAS;AACjB,QAAI;AACJ,SAAK,gBACA,KAAK,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,kBAAkB,QAAQ,OAAO,SAAS,KAAK,sBAAsB;AAAA,EAC7I;AAAA,EACA,SAAS,SAAS;AACd,UAAM,sBAAsB,KAAK,wBAAwB,QAAQ,KAAK;AACtE,QAAI,gBAAQ,mBAAmB,GAAG;AAC9B,YAAM,iBAAiB,KAAK,4BAA4B,QAAQ,KAAK;AACrE,YAAM,sBAAsB,KAAK,yCAAyC,QAAQ,OAAO,KAAK,YAAY;AAC1G,YAAM,wBAAwB,KAAK,kCAAkC,QAAQ,OAAO,KAAK,YAAY;AACrG,YAAM,YAAY;AAAA,QACd,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AACA,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EACA,wBAAwB,OAAO;AAC3B,WAAO,gBAAQ,OAAO,CAAC,gBAAgB,wBAAwB,aAAa,aAAa,oCAAoC,CAAC;AAAA,EAClI;AAAA,EACA,4BAA4B,OAAO;AAC/B,WAAO,gBAAQ,OAAO,CAAC,gBAAgB,2BAA2B,aAAa,oCAAoC,CAAC;AAAA,EACxH;AAAA,EACA,yCAAyC,OAAO,cAAc;AAC1D,WAAO,gBAAQ,OAAO,CAAC,gBAAgB,yCAAyC,aAAa,cAAc,oCAAoC,CAAC;AAAA,EACpJ;AAAA,EACA,kCAAkC,OAAO,cAAc;AACnD,WAAO,kCAAkC,OAAO,cAAc,oCAAoC;AAAA,EACtG;AAAA,EACA,6BAA6B,SAAS;AAClC,WAAO,wBAAwB,QAAQ,gBAAgB,QAAQ,MAAM,QAAQ,cAAc,QAAQ,eAAe,QAAQ,sBAAsB,8BAA8B;AAAA,EAClL;AAAA,EACA,0BAA0B,SAAS;AAC/B,WAAO,kCAAkC,QAAQ,gBAAgB,QAAQ,MAAM,QAAQ,cAAc,QAAQ,sBAAsB,YAAY,QAAQ,QAAQ,GAAG,uCAAuC;AAAA,EAC7M;AACJ;;;ACrCO,IAAM,aAAN,MAAiB;AAAA,EACpB,eAAe,QAAQ;AACnB,SAAK,uBAAuB,YAAI,QAAQ,sBAAsB,IACxD,OAAO,uBACP,sBAAsB;AAC5B,SAAK,eAAe,YAAI,QAAQ,cAAc,IACxC,OAAO,eACP,sBAAsB;AAC5B,SAAK,oBAAoB,YAAI,QAAQ,mBAAmB,IAClD,OAAO,oBACP,IAAI,qBAAqB,EAAE,cAAc,KAAK,aAAa,CAAC;AAClE,SAAK,sBAAsB,oBAAI,IAAI;AAAA,EACvC;AAAA,EACA,6BAA6B,OAAO;AAChC,oBAAQ,OAAO,CAAC,aAAa;AACzB,WAAK,WAAW,GAAG,SAAS,IAAI,mBAAmB,MAAM;AACrD,cAAM,EAAE,aAAa,YAAY,QAAQ,qBAAqB,kCAAkC,wBAAyB,IAAI,eAAe,QAAQ;AACpJ,wBAAQ,aAAa,CAAC,aAAa;AAC/B,gBAAM,UAAU,SAAS,QAAQ,IAAI,KAAK,SAAS;AACnD,eAAK,WAAW,GAAG,qBAAqB,QAAQ,CAAC,GAAG,OAAO,IAAI,MAAM;AACjE,kBAAM,SAAS,KAAK,kBAAkB,6BAA6B;AAAA,cAC/D,gBAAgB,SAAS;AAAA,cACzB,MAAM;AAAA,cACN,cAAc,SAAS,gBAAgB,KAAK;AAAA,cAC5C,eAAe,SAAS;AAAA,cACxB,sBAAsB,KAAK;AAAA,YAC/B,CAAC;AACD,kBAAM,MAAM,4BAA4B,KAAK,oBAAoB,SAAS,IAAI,GAAG,QAAQ,SAAS,GAAG;AACrG,iBAAK,eAAe,KAAK,MAAM;AAAA,UACnC,CAAC;AAAA,QACL,CAAC;AACD,wBAAQ,YAAY,CAAC,aAAa;AAC9B,eAAK,qBAAqB,UAAU,SAAS,KAAK,UAAU,cAAc,SAAS,cAAc,qBAAqB,QAAQ,CAAC;AAAA,QACnI,CAAC;AACD,wBAAQ,QAAQ,CAAC,aAAa;AAC1B,eAAK,qBAAqB,UAAU,SAAS,KAAK,YAAY,UAAU,SAAS,cAAc,qBAAqB,QAAQ,CAAC;AAAA,QACjI,CAAC;AACD,wBAAQ,qBAAqB,CAAC,aAAa;AACvC,eAAK,qBAAqB,UAAU,SAAS,KAAK,kBAAkB,uBAAuB,SAAS,cAAc,qBAAqB,QAAQ,CAAC;AAAA,QACpJ,CAAC;AACD,wBAAQ,kCAAkC,CAAC,aAAa;AACpD,eAAK,qBAAqB,UAAU,SAAS,KAAK,sBAAsB,oCAAoC,SAAS,cAAc,qBAAqB,QAAQ,CAAC;AAAA,QACrK,CAAC;AACD,wBAAQ,yBAAyB,CAAC,aAAa;AAC3C,eAAK,qBAAqB,UAAU,SAAS,KAAK,cAAc,2BAA2B,SAAS,cAAc,qBAAqB,QAAQ,CAAC;AAAA,QACpJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EACA,qBAAqB,MAAM,gBAAgB,SAAS,UAAU,kBAAkB,eAAe;AAC3F,SAAK,WAAW,GAAG,aAAa,GAAG,mBAAmB,IAAI,KAAK,cAAc,IAAI,MAAM;AACnF,YAAM,SAAS,KAAK,kBAAkB,0BAA0B;AAAA,QAC5D;AAAA,QACA;AAAA,QACA,cAAc,oBAAoB,KAAK;AAAA,QACvC,sBAAsB,KAAK;AAAA,QAC3B;AAAA,MACJ,CAAC;AACD,YAAM,MAAM,4BAA4B,KAAK,oBAAoB,KAAK,IAAI,GAAG,SAAS,cAAc;AACpG,WAAK,eAAe,KAAK,MAAM;AAAA,IACnC,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,4BAA4B,cAAc,YAAY;AAClD,UAAM,oBAAoB,KAAK,6BAA6B;AAC5D,WAAO,4BAA4B,mBAAmB,cAAc,UAAU;AAAA,EAClF;AAAA,EACA,mBAAmB,KAAK;AACpB,WAAO,KAAK,oBAAoB,IAAI,GAAG;AAAA,EAC3C;AAAA;AAAA,EAEA,eAAe,KAAK,OAAO;AACvB,SAAK,oBAAoB,IAAI,KAAK,KAAK;AAAA,EAC3C;AACJ;AACA,IAAM,6BAAN,cAAyC,YAAY;AAAA,EACjD,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,aAAa;AAAA,MACd,QAAQ,CAAC;AAAA,MACT,aAAa,CAAC;AAAA,MACd,YAAY,CAAC;AAAA,MACb,yBAAyB,CAAC;AAAA,MAC1B,qBAAqB,CAAC;AAAA,MACtB,kCAAkC,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,QAAQ;AACJ,SAAK,aAAa;AAAA,MACd,QAAQ,CAAC;AAAA,MACT,aAAa,CAAC;AAAA,MACd,YAAY,CAAC;AAAA,MACb,yBAAyB,CAAC;AAAA,MAC1B,qBAAqB,CAAC;AAAA,MACtB,kCAAkC,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,YAAY,QAAQ;AAChB,SAAK,WAAW,OAAO,KAAK,MAAM;AAAA,EACtC;AAAA,EACA,6BAA6B,SAAS;AAClC,SAAK,WAAW,wBAAwB,KAAK,OAAO;AAAA,EACxD;AAAA,EACA,yBAAyB,YAAY;AACjC,SAAK,WAAW,oBAAoB,KAAK,UAAU;AAAA,EACvD;AAAA,EACA,sCAAsC,eAAe;AACjD,SAAK,WAAW,iCAAiC,KAAK,aAAa;AAAA,EACvE;AAAA,EACA,gBAAgB,MAAM;AAClB,SAAK,WAAW,WAAW,KAAK,IAAI;AAAA,EACxC;AAAA,EACA,iBAAiB,IAAI;AACjB,SAAK,WAAW,YAAY,KAAK,EAAE;AAAA,EACvC;AACJ;AACA,IAAM,mBAAmB,IAAI,2BAA2B;AACjD,SAAS,eAAe,MAAM;AACjC,mBAAiB,MAAM;AACvB,OAAK,OAAO,gBAAgB;AAC5B,QAAM,aAAa,iBAAiB;AAEpC,mBAAiB,MAAM;AACvB,SAAO;AACX;;;AC7HO,SAAS,0BAA0B,kBAAkB,iBAAiB;AAEzE,MAAI,MAAM,iBAAiB,WAAW,MAAM,MAAM;AAI9C,qBAAiB,cAAc,gBAAgB;AAC/C,qBAAiB,YAAY,gBAAgB;AAAA,EACjD,WAKS,iBAAiB,YAAY,gBAAgB,cAAc,MAAM;AACtE,qBAAiB,YAAY,gBAAgB;AAAA,EACjD;AACJ;AAQO,SAAS,oBAAoB,kBAAkB,iBAAiB;AAEnE,MAAI,MAAM,iBAAiB,WAAW,MAAM,MAAM;AAI9C,qBAAiB,cAAc,gBAAgB;AAC/C,qBAAiB,cAAc,gBAAgB;AAC/C,qBAAiB,YAAY,gBAAgB;AAC7C,qBAAiB,YAAY,gBAAgB;AAC7C,qBAAiB,YAAY,gBAAgB;AAC7C,qBAAiB,UAAU,gBAAgB;AAAA,EAC/C,WAKS,iBAAiB,YAAY,gBAAgB,cAAc,MAAM;AACtE,qBAAiB,YAAY,gBAAgB;AAC7C,qBAAiB,YAAY,gBAAgB;AAC7C,qBAAiB,UAAU,gBAAgB;AAAA,EAC/C;AACJ;AACO,SAAS,iBAAiB,MAAM,OAAO,eAAe;AACzD,MAAI,KAAK,SAAS,aAAa,MAAM,QAAW;AAC5C,SAAK,SAAS,aAAa,IAAI,CAAC,KAAK;AAAA,EACzC,OACK;AACD,SAAK,SAAS,aAAa,EAAE,KAAK,KAAK;AAAA,EAC3C;AACJ;AACO,SAAS,qBAAqB,MAAM,UAAU,YAAY;AAC7D,MAAI,KAAK,SAAS,QAAQ,MAAM,QAAW;AACvC,SAAK,SAAS,QAAQ,IAAI,CAAC,UAAU;AAAA,EACzC,OACK;AACD,SAAK,SAAS,QAAQ,EAAE,KAAK,UAAU;AAAA,EAC3C;AACJ;;;ACrEA,IAAM,OAAO;AACN,SAAS,eAAe,KAAK,WAAW;AAC3C,SAAO,eAAe,KAAK,MAAM;AAAA,IAC7B,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,OAAO;AAAA,EACX,CAAC;AACL;;;ACNO,SAAS,aAAa,KAAK,OAAO;AACrC,QAAM,gBAAgB,aAAK,GAAG;AAC9B,QAAM,sBAAsB,cAAc;AAC1C,WAAS,IAAI,GAAG,IAAI,qBAAqB,KAAK;AAC1C,UAAM,gBAAgB,cAAc,CAAC;AACrC,UAAM,iBAAiB,IAAI,aAAa;AACxC,UAAM,uBAAuB,eAAe;AAC5C,aAAS,IAAI,GAAG,IAAI,sBAAsB,KAAK;AAC3C,YAAM,YAAY,eAAe,CAAC;AAElC,UAAI,UAAU,iBAAiB,QAAW;AACtC,aAAK,UAAU,IAAI,EAAE,UAAU,UAAU,KAAK;AAAA,MAClD;AAAA,IACJ;AAAA,EACJ;AAEJ;AACO,SAAS,qCAAqC,aAAa,WAAW;AACzE,QAAM,qBAAqB,WAAY;AAAA,EAAE;AAIzC,iBAAe,oBAAoB,cAAc,eAAe;AAChE,QAAM,gBAAgB;AAAA,IAClB,OAAO,SAAU,SAAS,OAAO;AAE7B,UAAI,gBAAQ,OAAO,GAAG;AAGlB,kBAAU,QAAQ,CAAC;AAAA,MACvB;AAEA,UAAI,oBAAY,OAAO,GAAG;AACtB,eAAO;AAAA,MACX;AACA,aAAO,KAAK,QAAQ,IAAI,EAAE,QAAQ,UAAU,KAAK;AAAA,IACrD;AAAA,IACA,iBAAiB,WAAY;AACzB,YAAM,2BAA2B,gBAAgB,MAAM,SAAS;AAChE,UAAI,CAAC,gBAAQ,wBAAwB,GAAG;AACpC,cAAM,gBAAgB,YAAI,0BAA0B,CAAC,iBAAiB,aAAa,GAAG;AACtF,cAAM,MAAM,mCAAmC,KAAK,YAAY,IAAI;AAAA,GAC7D,cAAc,KAAK,MAAM,EAAE,QAAQ,OAAO,KAAM,CAAC,EAAE;AAAA,MAC9D;AAAA,IACJ;AAAA,EACJ;AACA,qBAAmB,YAAY;AAC/B,qBAAmB,UAAU,cAAc;AAC3C,qBAAmB,cAAc;AACjC,SAAO;AACX;AACO,SAAS,yCAAyC,aAAa,WAAW,iBAAiB;AAC9F,QAAM,qBAAqB,WAAY;AAAA,EAAE;AAIzC,iBAAe,oBAAoB,cAAc,2BAA2B;AAC5E,QAAM,oBAAoB,OAAO,OAAO,gBAAgB,SAAS;AACjE,kBAAQ,WAAW,CAAC,aAAa;AAC7B,sBAAkB,QAAQ,IAAI;AAAA,EAClC,CAAC;AACD,qBAAmB,YAAY;AAC/B,qBAAmB,UAAU,cAAc;AAC3C,SAAO;AACX;AACO,IAAI;AAAA,CACV,SAAUC,4BAA2B;AAClC,EAAAA,2BAA0BA,2BAA0B,kBAAkB,IAAI,CAAC,IAAI;AAC/E,EAAAA,2BAA0BA,2BAA0B,gBAAgB,IAAI,CAAC,IAAI;AACjF,GAAG,8BAA8B,4BAA4B,CAAC,EAAE;AACzD,SAAS,gBAAgB,iBAAiB,WAAW;AACxD,QAAM,gBAAgB,0BAA0B,iBAAiB,SAAS;AAC1E,SAAO;AACX;AACO,SAAS,0BAA0B,iBAAiB,WAAW;AAClE,QAAM,mBAAmB,eAAO,WAAW,CAAC,iBAAiB;AACzD,WAAO,mBAAW,gBAAgB,YAAY,CAAC,MAAM;AAAA,EACzD,CAAC;AACD,QAAM,SAAS,YAAI,kBAAkB,CAAC,iBAAiB;AACnD,WAAO;AAAA,MACH,KAAK,4BAA4B,YAAY,QAAS,gBAAgB,YAAY,IAAK;AAAA,MACvF,MAAM,0BAA0B;AAAA,MAChC,YAAY;AAAA,IAChB;AAAA,EACJ,CAAC;AACD,SAAO,gBAAQ,MAAM;AACzB;;;ACjFO,IAAM,cAAN,MAAkB;AAAA,EACrB,gBAAgB,QAAQ;AACpB,SAAK,YAAY,CAAC;AAElB,SAAK,YAAY,OAAO;AACxB,SAAK,uBAAuB,YAAI,QAAQ,sBAAsB,IACxD,OAAO,uBACP,sBAAsB;AAC5B,QAAI,CAAC,KAAK,WAAW;AACjB,WAAK,2BAA2B;AAChC,WAAK,wBAAwB;AAC7B,WAAK,kBAAkB;AACvB,WAAK,qBAAqB;AAC1B,WAAK,cAAc;AAAA,IACvB,OACK;AACD,UAAI,QAAQ,KAAK,KAAK,oBAAoB,GAAG;AACzC,YAAI,KAAK,iBAAiB;AACtB,eAAK,2BAA2B;AAChC,eAAK,0BAA0B;AAC/B,eAAK,cAAc;AACnB,eAAK,yBAAyB,KAAK;AAAA,QACvC,OACK;AACD,eAAK,2BAA2B;AAChC,eAAK,0BAA0B;AAC/B,eAAK,cAAc,KAAK;AACxB,eAAK,yBAAyB,KAAK;AAAA,QACvC;AAAA,MACJ,WACS,cAAc,KAAK,KAAK,oBAAoB,GAAG;AACpD,YAAI,KAAK,iBAAiB;AACtB,eAAK,2BAA2B;AAChC,eAAK,0BAA0B;AAC/B,eAAK,cAAc;AACnB,eAAK,yBACD,KAAK;AAAA,QACb,OACK;AACD,eAAK,2BAA2B;AAChC,eAAK,0BAA0B;AAC/B,eAAK,cAAc,KAAK;AACxB,eAAK,yBACD,KAAK;AAAA,QACb;AAAA,MACJ,WACS,QAAQ,KAAK,KAAK,oBAAoB,GAAG;AAC9C,aAAK,2BAA2B;AAChC,aAAK,0BAA0B;AAC/B,aAAK,cAAc;AACnB,aAAK,yBAAyB;AAAA,MAClC,OACK;AACD,cAAM,MAAM,kDAAkD,OAAO,oBAAoB,GAAG;AAAA,MAChG;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,yCAAyC,SAAS;AAC9C,YAAQ,WAAW;AAAA,MACf,aAAa;AAAA,MACb,WAAW;AAAA,IACf;AAAA,EACJ;AAAA,EACA,wCAAwC,SAAS;AAC7C,YAAQ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAKf,aAAa,KAAK,GAAG,CAAC,EAAE;AAAA,MACxB,WAAW;AAAA,IACf;AAAA,EACJ;AAAA,EACA,mCAAmC,SAAS;AACxC,YAAQ,WAAW;AAAA,MACf,aAAa;AAAA,MACb,WAAW;AAAA,MACX,aAAa;AAAA,MACb,WAAW;AAAA,MACX,SAAS;AAAA,MACT,WAAW;AAAA,IACf;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kCAAkC,SAAS;AACvC,UAAM,YAAY,KAAK,GAAG,CAAC;AAC3B,YAAQ,WAAW;AAAA,MACf,aAAa,UAAU;AAAA,MACvB,WAAW,UAAU;AAAA,MACrB,aAAa,UAAU;AAAA,MACvB,WAAW;AAAA,MACX,SAAS;AAAA,MACT,WAAW;AAAA,IACf;AAAA,EACJ;AAAA,EACA,yBAAyB,cAAc;AACnC,UAAM,UAAU;AAAA,MACZ,MAAM;AAAA,MACN,UAAU,uBAAO,OAAO,IAAI;AAAA,IAChC;AACA,SAAK,uBAAuB,OAAO;AACnC,SAAK,UAAU,KAAK,OAAO;AAAA,EAC/B;AAAA,EACA,wBAAwB;AACpB,SAAK,UAAU,IAAI;AAAA,EACvB;AAAA,EACA,gBAAgB,aAAa;AAEzB,UAAM,YAAY,KAAK,GAAG,CAAC;AAC3B,UAAM,MAAM,YAAY;AAGxB,QAAI,IAAI,eAAe,UAAU,gBAAgB,MAAM;AACnD,UAAI,YAAY,UAAU;AAC1B,UAAI,UAAU,UAAU;AACxB,UAAI,YAAY,UAAU;AAAA,IAC9B,OAEK;AACD,UAAI,cAAc;AAClB,UAAI,YAAY;AAChB,UAAI,cAAc;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,sBAAsB,aAAa;AAC/B,UAAM,YAAY,KAAK,GAAG,CAAC;AAE3B,UAAM,MAAM,YAAY;AAGxB,QAAI,IAAI,eAAe,UAAU,gBAAgB,MAAM;AACnD,UAAI,YAAY,UAAU;AAAA,IAC9B,OAEK;AACD,UAAI,cAAc;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,gBAAgB,KAAK,eAAe;AAChC,UAAM,UAAU,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AACxD,qBAAiB,SAAS,eAAe,GAAG;AAE5C,SAAK,yBAAyB,QAAQ,UAAU,aAAa;AAAA,EACjE;AAAA,EACA,mBAAmB,eAAe,UAAU;AACxC,UAAM,aAAa,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AAC3D,yBAAqB,YAAY,UAAU,aAAa;AAExD,SAAK,wBAAwB,WAAW,UAAU,cAAc,QAAQ;AAAA,EAC5E;AAAA,EACA,+BAA+B;AAC3B,QAAI,oBAAY,KAAK,yBAAyB,GAAG;AAC7C,YAAM,+BAA+B,qCAAqC,KAAK,WAAW,aAAK,KAAK,oBAAoB,CAAC;AACzH,WAAK,4BAA4B;AACjC,aAAO;AAAA,IACX;AACA,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,2CAA2C;AACvC,QAAI,oBAAY,KAAK,qCAAqC,GAAG;AACzD,YAAM,iBAAiB,yCAAyC,KAAK,WAAW,aAAK,KAAK,oBAAoB,GAAG,KAAK,6BAA6B,CAAC;AACpJ,WAAK,wCAAwC;AAC7C,aAAO;AAAA,IACX;AACA,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,+BAA+B;AAC3B,UAAM,YAAY,KAAK;AACvB,WAAO,UAAU,UAAU,SAAS,CAAC;AAAA,EACzC;AAAA,EACA,mCAAmC;AAC/B,UAAM,YAAY,KAAK;AACvB,WAAO,UAAU,UAAU,SAAS,CAAC;AAAA,EACzC;AAAA,EACA,qCAAqC;AACjC,UAAM,kBAAkB,KAAK;AAC7B,WAAO,gBAAgB,gBAAgB,SAAS,CAAC;AAAA,EACrD;AACJ;;;ACrLO,IAAM,eAAN,MAAmB;AAAA,EACtB,mBAAmB;AACf,SAAK,YAAY,CAAC;AAClB,SAAK,kBAAkB;AACvB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,IAAI,MAAM,UAAU;AAGhB,QAAI,KAAK,qBAAqB,MAAM;AAChC,YAAM,MAAM,kFAAkF;AAAA,IAClG;AAGA,SAAK,MAAM;AACX,SAAK,YAAY;AACjB,SAAK,kBAAkB,SAAS;AAAA,EACpC;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,aAAa;AACT,QAAI,KAAK,WAAW,KAAK,UAAU,SAAS,GAAG;AAC3C,WAAK,aAAa;AAClB,aAAO,KAAK,GAAG,CAAC;AAAA,IACpB,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,GAAG,SAAS;AACR,UAAM,YAAY,KAAK,UAAU;AACjC,QAAI,YAAY,KAAK,KAAK,mBAAmB,WAAW;AACpD,aAAO;AAAA,IACX,OACK;AACD,aAAO,KAAK,UAAU,SAAS;AAAA,IACnC;AAAA,EACJ;AAAA,EACA,eAAe;AACX,SAAK;AAAA,EACT;AAAA,EACA,mBAAmB;AACf,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,iBAAiB,UAAU;AACvB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,kBAAkB;AACd,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,wBAAwB;AACpB,SAAK,UAAU,KAAK,UAAU,SAAS;AAAA,EAC3C;AAAA,EACA,mBAAmB;AACf,WAAO,KAAK,iBAAiB;AAAA,EACjC;AACJ;;;ACtDO,IAAM,gBAAN,MAAoB;AAAA,EACvB,OAAO,MAAM;AACT,WAAO,KAAK,KAAK,IAAI;AAAA,EACzB;AAAA,EACA,QAAQ,KAAK,SAAS,SAAS;AAC3B,WAAO,KAAK,gBAAgB,SAAS,KAAK,OAAO;AAAA,EACrD;AAAA,EACA,QAAQ,KAAK,YAAY,SAAS;AAC9B,WAAO,KAAK,gBAAgB,YAAY,KAAK,OAAO;AAAA,EACxD;AAAA,EACA,OAAO,KAAK,mBAAmB;AAC3B,WAAO,KAAK,eAAe,mBAAmB,GAAG;AAAA,EACrD;AAAA,EACA,GAAG,KAAK,YAAY;AAChB,WAAO,KAAK,WAAW,YAAY,GAAG;AAAA,EAC1C;AAAA,EACA,KAAK,KAAK,mBAAmB;AACzB,WAAO,KAAK,aAAa,KAAK,iBAAiB;AAAA,EACnD;AAAA,EACA,WAAW,KAAK,mBAAmB;AAC/B,WAAO,KAAK,mBAAmB,KAAK,iBAAiB;AAAA,EACzD;AAAA,EACA,QAAQ,SAAS,SAAS;AACtB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,SAAS,SAAS,SAAS;AACvB,WAAO,KAAK,gBAAgB,SAAS,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,QAAQ,YAAY,SAAS;AACzB,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,SAAS,YAAY,SAAS;AAC1B,WAAO,KAAK,gBAAgB,YAAY,GAAG,OAAO;AAAA,EACtD;AAAA,EACA,OAAO,mBAAmB;AACtB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,mBAAmB;AACvB,WAAO,KAAK,eAAe,mBAAmB,CAAC;AAAA,EACnD;AAAA,EACA,GAAG,YAAY;AACX,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,WAAW,YAAY,CAAC;AAAA,EACxC;AAAA,EACA,KAAK,mBAAmB;AACpB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,MAAM,mBAAmB;AACrB,SAAK,aAAa,GAAG,iBAAiB;AAAA,EAC1C;AAAA,EACA,SAAS,SAAS;AACd,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,UAAU,SAAS;AACf,SAAK,qBAAqB,GAAG,OAAO;AAAA,EACxC;AAAA,EACA,aAAa,mBAAmB;AAC5B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,WAAO,KAAK,mBAAmB,GAAG,iBAAiB;AAAA,EACvD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,cAAc,mBAAmB;AAC7B,SAAK,mBAAmB,GAAG,iBAAiB;AAAA,EAChD;AAAA,EACA,iBAAiB,SAAS;AACtB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,kBAAkB,SAAS;AACvB,SAAK,2BAA2B,GAAG,OAAO;AAAA,EAC9C;AAAA,EACA,KAAK,MAAM,gBAAgB,SAAS,qBAAqB;AACrD,QAAI,iBAAS,KAAK,mBAAmB,IAAI,GAAG;AACxC,YAAM,SAAS,qCAAqC,4BAA4B;AAAA,QAC5E,cAAc;AAAA,QACd,aAAa,KAAK;AAAA,MACtB,CAAC;AACD,YAAM,QAAQ;AAAA,QACV,SAAS;AAAA,QACT,MAAM,0BAA0B;AAAA,QAChC,UAAU;AAAA,MACd;AACA,WAAK,iBAAiB,KAAK,KAAK;AAAA,IACpC;AACA,SAAK,kBAAkB,KAAK,IAAI;AAChC,UAAM,qBAAqB,KAAK,WAAW,MAAM,gBAAgB,MAAM;AACvE,SAAK,IAAI,IAAI;AACb,WAAO;AAAA,EACX;AAAA,EACA,cAAc,MAAM,MAAM,SAAS,qBAAqB;AACpD,UAAM,aAAa,yBAAyB,MAAM,KAAK,mBAAmB,KAAK,SAAS;AACxF,SAAK,mBAAmB,KAAK,iBAAiB,OAAO,UAAU;AAC/D,UAAM,qBAAqB,KAAK,WAAW,MAAM,MAAM,MAAM;AAC7D,SAAK,IAAI,IAAI;AACb,WAAO;AAAA,EACX;AAAA,EACA,UAAU,aAAa,MAAM;AACzB,WAAO,WAAY;AAEf,WAAK,oBAAoB,KAAK,CAAC;AAC/B,YAAM,WAAW,KAAK,eAAe;AACrC,UAAI;AACA,oBAAY,MAAM,MAAM,IAAI;AAE5B,eAAO;AAAA,MACX,SACO,GAAG;AACN,YAAI,uBAAuB,CAAC,GAAG;AAC3B,iBAAO;AAAA,QACX,OACK;AACD,gBAAM;AAAA,QACV;AAAA,MACJ,UACA;AACI,aAAK,iBAAiB,QAAQ;AAC9B,aAAK,oBAAoB,IAAI;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAEA,qBAAqB;AACjB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,+BAA+B;AAC3B,WAAO,iBAAiB,eAAO,KAAK,oBAAoB,CAAC;AAAA,EAC7D;AACJ;;;AC/TO,IAAM,mBAAN,MAAuB;AAAA,EAC1B,qBAAqB,iBAAiB,QAAQ;AAC1C,SAAK,YAAY,KAAK,YAAY;AAElC,SAAK,sBAAsB,CAAC;AAC5B,SAAK,sBAAsB,CAAC;AAC5B,SAAK,mBAAmB;AACxB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,oBAAoB,CAAC;AAC1B,SAAK,YAAY,CAAC;AAClB,SAAK,sBAAsB,CAAC;AAC5B,SAAK,aAAa,CAAC;AACnB,SAAK,wBAAwB,CAAC;AAC9B,SAAK,uBAAuB,CAAC;AAC7B,QAAI,YAAI,QAAQ,mBAAmB,GAAG;AAClC,YAAM,MAAM,gLAEgB;AAAA,IAChC;AACA,QAAI,gBAAQ,eAAe,GAAG;AAI1B,UAAI,gBAAQ,eAAe,GAAG;AAC1B,cAAM,MAAM,2IAEqC;AAAA,MACrD;AACA,UAAI,OAAO,gBAAgB,CAAC,EAAE,gBAAgB,UAAU;AACpD,cAAM,MAAM,8KAEgB;AAAA,MAChC;AAAA,IACJ;AACA,QAAI,gBAAQ,eAAe,GAAG;AAC1B,WAAK,YAAY,eAAO,iBAAiB,CAAC,KAAK,YAAY;AACvD,YAAI,QAAQ,IAAI,IAAI;AACpB,eAAO;AAAA,MACX,GAAG,CAAC,CAAC;AAAA,IACT,WACS,YAAI,iBAAiB,OAAO,KACjC,cAAM,gBAAQ,eAAO,gBAAgB,KAAK,CAAC,GAAG,WAAW,GAAG;AAC5D,YAAMC,iBAAgB,gBAAQ,eAAO,gBAAgB,KAAK,CAAC;AAC3D,YAAM,eAAe,aAAKA,cAAa;AACvC,WAAK,YAAY,eAAO,cAAc,CAAC,KAAK,YAAY;AACpD,YAAI,QAAQ,IAAI,IAAI;AACpB,eAAO;AAAA,MACX,GAAG,CAAC,CAAC;AAAA,IACT,WACS,iBAAS,eAAe,GAAG;AAChC,WAAK,YAAY,cAAM,eAAe;AAAA,IAC1C,OACK;AACD,YAAM,IAAI,MAAM,wIACyD;AAAA,IAC7E;AAGA,SAAK,UAAU,KAAK,IAAI;AACxB,UAAM,gBAAgB,YAAI,iBAAiB,OAAO,IAC5C,gBAAQ,eAAO,gBAAgB,KAAK,CAAC,IACrC,eAAO,eAAe;AAC5B,UAAM,wBAAwB,cAAM,eAAe,CAAC,qBAAqB,gBAAQ,iBAAiB,eAAe,CAAC;AAClH,SAAK,eAAe,wBACd,qCACA;AAIN,sBAAkB,eAAO,KAAK,SAAS,CAAC;AAAA,EAC5C;AAAA,EACA,WAAW,UAAU,MAAM,QAAQ;AAC/B,QAAI,KAAK,kBAAkB;AACvB,YAAM,MAAM,iBAAiB,QAAQ;AAAA,6FAC6D;AAAA,IACtG;AACA,UAAM,gBAAgB,YAAI,QAAQ,eAAe,IAC3C,OAAO,gBACP,oBAAoB;AAC1B,UAAM,oBAAoB,YAAI,QAAQ,mBAAmB,IACnD,OAAO,oBACP,oBAAoB;AAG1B,UAAM,YAAY,KAAK,oBAAqB,uBAAuB;AACnE,SAAK;AACL,SAAK,oBAAoB,SAAS,IAAI;AACtC,SAAK,oBAAoB,QAAQ,IAAI;AACrC,QAAI;AAGJ,QAAI,KAAK,cAAc,MAAM;AACzB,0BAAoB,SAASC,sBAAqB,MAAM;AACpD,YAAI;AACA,eAAK,0BAA0B,WAAW,UAAU,KAAK,UAAU;AACnE,eAAK,MAAM,MAAM,IAAI;AACrB,gBAAM,MAAM,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AACpD,eAAK,YAAY,GAAG;AACpB,iBAAO;AAAA,QACX,SACO,GAAG;AACN,iBAAO,KAAK,gBAAgB,GAAG,eAAe,iBAAiB;AAAA,QACnE,UACA;AACI,eAAK,uBAAuB;AAAA,QAChC;AAAA,MACJ;AAAA,IACJ,OACK;AACD,0BAAoB,SAAS,wBAAwB,MAAM;AACvD,YAAI;AACA,eAAK,0BAA0B,WAAW,UAAU,KAAK,UAAU;AACnE,iBAAO,KAAK,MAAM,MAAM,IAAI;AAAA,QAChC,SACO,GAAG;AACN,iBAAO,KAAK,gBAAgB,GAAG,eAAe,iBAAiB;AAAA,QACnE,UACA;AACI,eAAK,uBAAuB;AAAA,QAChC;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,qBAAqB,OAAO,OAAO,mBAAmB,EAAE,UAAU,uBAAuB,KAAK,CAAC;AACrG,WAAO;AAAA,EACX;AAAA,EACA,gBAAgB,GAAG,qBAAqB,mBAAmB;AACvD,UAAM,qBAAqB,KAAK,WAAW,WAAW;AAKtD,UAAM,gBAAgB,uBAAuB,CAAC,KAAK,eAAe,KAAK,KAAK;AAC5E,QAAI,uBAAuB,CAAC,GAAG;AAC3B,YAAM,aAAa;AACnB,UAAI,eAAe;AACf,cAAM,gBAAgB,KAAK,oBAAoB;AAC/C,YAAI,KAAK,yBAAyB,aAAa,GAAG;AAC9C,qBAAW,iBAAiB,KAAK,SAAS,aAAa;AACvD,cAAI,KAAK,WAAW;AAChB,kBAAM,mBAAmB,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AACjE,6BAAiB,gBAAgB;AACjC,mBAAO;AAAA,UACX,OACK;AACD,mBAAO,kBAAkB,CAAC;AAAA,UAC9B;AAAA,QACJ,OACK;AACD,cAAI,KAAK,WAAW;AAChB,kBAAM,mBAAmB,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AACjE,6BAAiB,gBAAgB;AACjC,uBAAW,mBAAmB;AAAA,UAClC;AAEA,gBAAM;AAAA,QACV;AAAA,MACJ,WACS,oBAAoB;AAEzB,aAAK,sBAAsB;AAG3B,eAAO,kBAAkB,CAAC;AAAA,MAC9B,OACK;AAED,cAAM;AAAA,MACV;AAAA,IACJ,OACK;AAED,YAAM;AAAA,IACV;AAAA,EACJ;AAAA;AAAA,EAEA,eAAe,mBAAmB,YAAY;AAC1C,UAAM,MAAM,KAAK,4BAA4B,YAAY,UAAU;AACnE,WAAO,KAAK,oBAAoB,mBAAmB,YAAY,GAAG;AAAA,EACtE;AAAA,EACA,oBAAoB,mBAAmB,YAAY,KAAK;AACpD,QAAI,gBAAgB,KAAK,mBAAmB,GAAG;AAC/C,QAAI;AACJ,QAAI,OAAO,sBAAsB,YAAY;AACzC,eAAS,kBAAkB;AAC3B,YAAM,YAAY,kBAAkB;AAEpC,UAAI,cAAc,QAAW;AACzB,cAAM,uBAAuB;AAC7B,wBAAgB,MAAM;AAClB,iBAAO,UAAU,KAAK,IAAI,KAAK,qBAAqB,KAAK,IAAI;AAAA,QACjE;AAAA,MACJ;AAAA,IACJ,OACK;AACD,eAAS;AAAA,IACb;AACA,QAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACnC,aAAO,OAAO,KAAK,IAAI;AAAA,IAC3B;AACA,WAAO;AAAA,EACX;AAAA,EACA,mBAAmB,gBAAgB,mBAAmB;AAClD,UAAM,QAAQ,KAAK,4BAA4B,kBAAkB,cAAc;AAC/E,WAAO,KAAK,wBAAwB,gBAAgB,mBAAmB,KAAK;AAAA,EAChF;AAAA,EACA,wBAAwB,gBAAgB,mBAAmB,KAAK;AAC5D,QAAI,gBAAgB,KAAK,mBAAmB,GAAG;AAC/C,QAAI;AACJ,QAAI,OAAO,sBAAsB,YAAY;AACzC,eAAS,kBAAkB;AAC3B,YAAM,YAAY,kBAAkB;AAEpC,UAAI,cAAc,QAAW;AACzB,cAAM,uBAAuB;AAC7B,wBAAgB,MAAM;AAClB,iBAAO,UAAU,KAAK,IAAI,KAAK,qBAAqB,KAAK,IAAI;AAAA,QACjE;AAAA,MACJ;AAAA,IACJ,OACK;AACD,eAAS;AAAA,IACb;AACA,QAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACnC,UAAI,WAAW,KAAK,mBAAmB,MAAM;AAC7C,aAAO,cAAc,KAAK,IAAI,MAAM,QAChC,aAAa,MAAM;AACnB,mBAAW,KAAK,mBAAmB,MAAM;AAAA,MAC7C;AAAA,IACJ,OACK;AACD,YAAM,KAAK,wBAAwB,gBAAgB,UAAU,sBAAsB,kBAAkB,OAAO;AAAA,IAChH;AAKA,SAAK,4BAA4B,KAAK,oBAAoB,CAAC,gBAAgB,iBAAiB,GAAG,eAAe,kBAAkB,gBAAgB,iCAAiC;AAAA,EACrL;AAAA,EACA,2BAA2B,gBAAgB,SAAS;AAChD,UAAM,QAAQ,KAAK,4BAA4B,sBAAsB,cAAc;AACnF,SAAK,gCAAgC,gBAAgB,SAAS,KAAK;AAAA,EACvE;AAAA,EACA,gCAAgC,gBAAgB,SAAS,KAAK;AAC1D,UAAM,SAAS,QAAQ;AACvB,UAAM,YAAY,QAAQ;AAC1B,UAAM,8BAA8B,KAAK,mBAAmB,GAAG;AAE/D,QAAI,4BAA4B,KAAK,IAAI,MAAM,MAAM;AACjD,aAAO,KAAK,IAAI;AAGhB,YAAM,yBAAyB,MAAM;AACjC,eAAO,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,SAAS;AAAA,MAClD;AAEA,aAAO,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,SAAS,MAAM,MAAM;AAGtD,aAAK,QAAQ,SAAS;AAEtB,eAAO,KAAK,IAAI;AAAA,MACpB;AAEA,WAAK,4BAA4B,KAAK,6BAA6B;AAAA,QAC/D;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ,GAAG,wBAAwB,sBAAsB,gBAAgB,oCAAoC;AAAA,IACzG,OACK;AACD,YAAM,KAAK,wBAAwB,gBAAgB,UAAU,qCAAqC,QAAQ,OAAO;AAAA,IACrH;AAAA,EACJ;AAAA,EACA,aAAa,gBAAgB,mBAAmB;AAC5C,UAAM,QAAQ,KAAK,4BAA4B,UAAU,cAAc;AACvE,WAAO,KAAK,kBAAkB,gBAAgB,mBAAmB,KAAK;AAAA,EAC1E;AAAA,EACA,kBAAkB,gBAAgB,mBAAmB,KAAK;AACtD,QAAI,oBAAoB,KAAK,mBAAmB,GAAG;AACnD,QAAI;AACJ,QAAI,OAAO,sBAAsB,YAAY;AACzC,eAAS,kBAAkB;AAC3B,YAAM,YAAY,kBAAkB;AAEpC,UAAI,cAAc,QAAW;AACzB,cAAM,uBAAuB;AAC7B,4BAAoB,MAAM;AACtB,iBAAO,UAAU,KAAK,IAAI,KAAK,qBAAqB,KAAK,IAAI;AAAA,QACjE;AAAA,MACJ;AAAA,IACJ,OACK;AACD,eAAS;AAAA,IACb;AACA,QAAI,WAAW;AACf,WAAO,kBAAkB,KAAK,IAAI,MAAM,QAAQ,aAAa,MAAM;AAC/D,iBAAW,KAAK,mBAAmB,MAAM;AAAA,IAC7C;AAEA,SAAK;AAAA,MAA4B,KAAK;AAAA,MAAc,CAAC,gBAAgB,iBAAiB;AAAA,MAAG;AAAA,MAAmB;AAAA,MAAU;AAAA,MAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMtI;AAAA,IAAQ;AAAA,EACZ;AAAA,EACA,qBAAqB,gBAAgB,SAAS;AAC1C,UAAM,QAAQ,KAAK,4BAA4B,cAAc,cAAc;AAC3E,SAAK,0BAA0B,gBAAgB,SAAS,KAAK;AAAA,EACjE;AAAA,EACA,0BAA0B,gBAAgB,SAAS,KAAK;AACpD,UAAM,SAAS,QAAQ;AACvB,UAAM,YAAY,QAAQ;AAC1B,UAAM,uBAAuB,KAAK,mBAAmB,GAAG;AAExD,QAAI,qBAAqB,KAAK,IAAI,MAAM,MAAM;AAC1C,aAAO,KAAK,IAAI;AAChB,YAAM,yBAAyB,MAAM;AACjC,eAAO,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,SAAS;AAAA,MAClD;AAEA,aAAO,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,SAAS,MAAM,MAAM;AAGtD,aAAK,QAAQ,SAAS;AAEtB,eAAO,KAAK,IAAI;AAAA,MACpB;AAEA,WAAK,4BAA4B,KAAK,6BAA6B;AAAA,QAC/D;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ,GAAG,wBAAwB,cAAc,gBAAgB,8BAA8B;AAAA,IAC3F;AAAA,EACJ;AAAA,EACA,4BAA4B,gBAAgB,WAAW,wBAAwB,QAAQ,yBAAyB;AAC5G,WAAO,uBAAuB,GAAG;AAG7B,WAAK,QAAQ,SAAS;AACtB,aAAO,KAAK,IAAI;AAAA,IACpB;AAOA,SAAK,4BAA4B,KAAK,6BAA6B;AAAA,MAC/D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,GAAG,wBAAwB,sBAAsB,gBAAgB,uBAAuB;AAAA,EAC5F;AAAA,EACA,mBAAmB,QAAQ;AACvB,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,WAAO,KAAK,IAAI;AAChB,UAAM,iBAAiB,KAAK,iBAAiB;AAG7C,WAAO,iBAAiB;AAAA,EAC5B;AAAA,EACA,WAAW,YAAY,YAAY;AAC/B,UAAM,QAAQ,KAAK,4BAA4B,QAAQ,UAAU;AACjE,UAAM,OAAO,gBAAQ,UAAU,IAAI,aAAa,WAAW;AAC3D,UAAM,SAAS,KAAK,mBAAmB,KAAK;AAC5C,UAAM,eAAe,OAAO,KAAK,MAAM,IAAI;AAC3C,QAAI,iBAAiB,QAAW;AAC5B,YAAM,oBAAoB,KAAK,YAAY;AAC3C,aAAO,kBAAkB,IAAI,KAAK,IAAI;AAAA,IAC1C;AACA,SAAK,oBAAoB,YAAY,WAAW,OAAO;AAAA,EAC3D;AAAA,EACA,yBAAyB;AACrB,SAAK,WAAW,IAAI;AACpB,SAAK,sBAAsB,IAAI;AAE/B,SAAK,sBAAsB;AAC3B,QAAI,KAAK,WAAW,WAAW,KAAK,KAAK,eAAe,MAAM,OAAO;AACjE,YAAM,oBAAoB,KAAK,GAAG,CAAC;AACnC,YAAM,SAAS,KAAK,qBAAqB,8BAA8B;AAAA,QACnE,gBAAgB;AAAA,QAChB,UAAU,KAAK,oBAAoB;AAAA,MACvC,CAAC;AACD,WAAK,WAAW,IAAI,2BAA2B,QAAQ,iBAAiB,CAAC;AAAA,IAC7E;AAAA,EACJ;AAAA,EACA,gBAAgB,YAAY,KAAK,SAAS;AACtC,QAAI;AACJ,QAAI;AACA,YAAM,OAAO,YAAY,SAAY,QAAQ,OAAO;AACpD,WAAK,aAAa;AAClB,mBAAa,WAAW,MAAM,MAAM,IAAI;AACxC,WAAK,mBAAmB,YAAY,YAAY,UAAa,QAAQ,UAAU,SACzE,QAAQ,QACR,WAAW,QAAQ;AACzB,aAAO;AAAA,IACX,SACO,GAAG;AACN,YAAM,KAAK,qBAAqB,GAAG,SAAS,WAAW,QAAQ;AAAA,IACnE;AAAA,EACJ;AAAA,EACA,qBAAqB,GAAG,SAAS,UAAU;AACvC,QAAI,uBAAuB,CAAC,KAAK,EAAE,qBAAqB,QAAW;AAC/D,WAAK,mBAAmB,EAAE,kBAAkB,YAAY,UAAa,QAAQ,UAAU,SACjF,QAAQ,QACR,QAAQ;AACd,aAAO,EAAE;AAAA,IACb;AACA,UAAM;AAAA,EACV;AAAA,EACA,gBAAgB,SAAS,KAAK,SAAS;AACnC,QAAI;AACJ,QAAI;AACA,YAAM,YAAY,KAAK,GAAG,CAAC;AAC3B,UAAI,KAAK,aAAa,WAAW,OAAO,MAAM,MAAM;AAChD,aAAK,aAAa;AAClB,wBAAgB;AAAA,MACpB,OACK;AACD,aAAK,qBAAqB,SAAS,WAAW,OAAO;AAAA,MACzD;AAAA,IACJ,SACO,kBAAkB;AACrB,sBAAgB,KAAK,wBAAwB,SAAS,KAAK,gBAAgB;AAAA,IAC/E;AACA,SAAK,gBAAgB,YAAY,UAAa,QAAQ,UAAU,SAC1D,QAAQ,QACR,QAAQ,MAAM,aAAa;AACjC,WAAO;AAAA,EACX;AAAA,EACA,qBAAqB,SAAS,WAAW,SAAS;AAC9C,QAAI;AACJ,UAAM,gBAAgB,KAAK,GAAG,CAAC;AAC/B,QAAI,YAAY,UAAa,QAAQ,SAAS;AAC1C,YAAM,QAAQ;AAAA,IAClB,OACK;AACD,YAAM,KAAK,qBAAqB,0BAA0B;AAAA,QACtD,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU,KAAK,oBAAoB;AAAA,MACvC,CAAC;AAAA,IACL;AACA,UAAM,KAAK,WAAW,IAAI,yBAAyB,KAAK,WAAW,aAAa,CAAC;AAAA,EACrF;AAAA,EACA,wBAAwB,SAAS,KAAK,kBAAkB;AAGpD,QAAI,KAAK;AAAA,IAEL,iBAAiB,SAAS,8BAC1B,CAAC,KAAK,eAAe,GAAG;AACxB,YAAM,UAAU,KAAK,4BAA4B,SAAS,GAAG;AAC7D,UAAI;AACA,eAAO,KAAK,kBAAkB,SAAS,OAAO;AAAA,MAClD,SACO,qBAAqB;AACxB,YAAI,oBAAoB,SAAS,4BAA4B;AAGzD,gBAAM;AAAA,QACV,OACK;AACD,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA,IACJ,OACK;AACD,YAAM;AAAA,IACV;AAAA,EACJ;AAAA,EACA,iBAAiB;AAEb,UAAM,cAAc,KAAK;AACzB,UAAM,iBAAiB,cAAM,KAAK,UAAU;AAC5C,WAAO;AAAA,MACH,QAAQ;AAAA,MACR,YAAY,KAAK,iBAAiB;AAAA,MAClC,YAAY;AAAA,MACZ,WAAW,KAAK;AAAA,IACpB;AAAA,EACJ;AAAA,EACA,iBAAiB,UAAU;AACvB,SAAK,SAAS,SAAS;AACvB,SAAK,iBAAiB,SAAS,UAAU;AACzC,SAAK,aAAa,SAAS;AAAA,EAC/B;AAAA,EACA,0BAA0B,WAAW,UAAU,kBAAkB;AAC7D,SAAK,sBAAsB,KAAK,gBAAgB;AAChD,SAAK,WAAW,KAAK,SAAS;AAE9B,SAAK,yBAAyB,QAAQ;AAAA,EAC1C;AAAA,EACA,iBAAiB;AACb,WAAO,KAAK,oBAAoB,WAAW;AAAA,EAC/C;AAAA,EACA,sBAAsB;AAClB,UAAM,YAAY,KAAK,6BAA6B;AACpD,WAAO,KAAK,oBAAoB,SAAS;AAAA,EAC7C;AAAA,EACA,wBAAwB,WAAW;AAC/B,WAAO,KAAK,oBAAoB,SAAS;AAAA,EAC7C;AAAA,EACA,iBAAiB;AACb,WAAO,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG,GAAG;AAAA,EAC5C;AAAA,EACA,QAAQ;AACJ,SAAK,gBAAgB;AACrB,SAAK,aAAa;AAClB,SAAK,sBAAsB,CAAC;AAC5B,SAAK,SAAS,CAAC;AACf,SAAK,aAAa,CAAC;AAEnB,SAAK,YAAY,CAAC;AAClB,SAAK,wBAAwB,CAAC;AAAA,EAClC;AACJ;;;ACrhBO,IAAM,eAAN,MAAmB;AAAA,EACtB,iBAAiB,QAAQ;AACrB,SAAK,UAAU,CAAC;AAChB,SAAK,uBAAuB,YAAI,QAAQ,sBAAsB,IACxD,OAAO,uBACP,sBAAsB;AAAA,EAChC;AAAA,EACA,WAAW,OAAO;AACd,QAAI,uBAAuB,KAAK,GAAG;AAC/B,YAAM,UAAU;AAAA,QACZ,WAAW,KAAK,0BAA0B;AAAA,QAC1C,qBAAqB,cAAM,KAAK,qBAAqB;AAAA,MACzD;AACA,WAAK,QAAQ,KAAK,KAAK;AACvB,aAAO;AAAA,IACX,OACK;AACD,YAAM,MAAM,6DAA6D;AAAA,IAC7E;AAAA,EACJ;AAAA,EACA,IAAI,SAAS;AACT,WAAO,cAAM,KAAK,OAAO;AAAA,EAC7B;AAAA,EACA,IAAI,OAAO,WAAW;AAClB,SAAK,UAAU;AAAA,EACnB;AAAA;AAAA,EAEA,wBAAwB,YAAY,UAAU,mBAAmB;AAC7D,UAAM,WAAW,KAAK,oBAAoB;AAC1C,UAAM,cAAc,KAAK,mBAAmB,EAAE,QAAQ;AACtD,UAAM,+BAA+B,iCAAiC,YAAY,aAAa,UAAU,KAAK,YAAY;AAC1H,UAAM,kBAAkB,6BAA6B,CAAC;AACtD,UAAM,eAAe,CAAC;AACtB,aAAS,IAAI,GAAG,KAAK,KAAK,cAAc,KAAK;AACzC,mBAAa,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,IAChC;AACA,UAAM,MAAM,KAAK,qBAAqB,sBAAsB;AAAA,MACxD,wBAAwB;AAAA,MACxB,QAAQ;AAAA,MACR,UAAU,KAAK,GAAG,CAAC;AAAA,MACnB,uBAAuB;AAAA,MACvB;AAAA,IACJ,CAAC;AACD,UAAM,KAAK,WAAW,IAAI,mBAAmB,KAAK,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA,EAC7E;AAAA;AAAA,EAEA,oBAAoB,YAAY,aAAa;AACzC,UAAM,WAAW,KAAK,oBAAoB;AAC1C,UAAM,cAAc,KAAK,mBAAmB,EAAE,QAAQ;AAEtD,UAAM,+BAA+B,uBAAuB,YAAY,aAAa,KAAK,YAAY;AACtG,UAAM,eAAe,CAAC;AACtB,aAAS,IAAI,GAAG,KAAK,KAAK,cAAc,KAAK;AACzC,mBAAa,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,IAChC;AACA,UAAM,gBAAgB,KAAK,GAAG,CAAC;AAC/B,UAAM,SAAS,KAAK,qBAAqB,wBAAwB;AAAA,MAC7D,qBAAqB;AAAA,MACrB,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,UAAU,KAAK,oBAAoB;AAAA,IACvC,CAAC;AACD,UAAM,KAAK,WAAW,IAAI,qBAAqB,QAAQ,KAAK,GAAG,CAAC,GAAG,aAAa,CAAC;AAAA,EACrF;AACJ;;;ACtEO,IAAM,gBAAN,MAAoB;AAAA,EACvB,oBAAoB;AAAA,EAAE;AAAA,EACtB,qBAAqB,eAAe,gBAAgB;AAChD,UAAM,gBAAgB,KAAK,qBAAqB,aAAa;AAC7D,QAAI,oBAAY,aAAa,GAAG;AAC5B,YAAM,MAAM,UAAU,aAAa,oCAAoC;AAAA,IAC3E;AACA,WAAO,wBAAwB,CAAC,aAAa,GAAG,gBAAgB,KAAK,cAAc,KAAK,YAAY;AAAA,EACxG;AAAA;AAAA;AAAA,EAGA,0BAA0B,aAAa;AACnC,UAAM,cAAc,aAAM,YAAY,SAAS;AAC/C,UAAM,kBAAkB,KAAK,mBAAmB;AAChD,UAAM,gBAAgB,gBAAgB,WAAW;AACjD,UAAM,yBAAyB,IAAI,qBAAqB,eAAe,WAAW,EAAE,aAAa;AACjG,WAAO;AAAA,EACX;AACJ;;;ACbA,IAAM,wBAAwB;AAAA,EAC1B,aAAa;AACjB;AACA,OAAO,OAAO,qBAAqB;AACnC,IAAM,mBAAmB;AACzB,IAAM,iBAAiB,KAAK,IAAI,GAAG,uBAAuB,IAAI;AAC9D,IAAM,MAAM,YAAY,EAAE,MAAM,yBAAyB,SAAS,MAAM,GAAG,CAAC;AAC5E,kBAAkB,CAAC,GAAG,CAAC;AACvB,IAAM,wBAAwB;AAAA,EAAoB;AAAA,EAAK;AAAA;AAAA;AAAA,EAKvD;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAE;AACtB,OAAO,OAAO,qBAAqB;AACnC,IAAM,0BAA0B;AAAA,EAC5B,MAAM;AAAA,EAEN,UAAU,CAAC;AACf;AAIO,IAAM,eAAN,MAAmB;AAAA,EACtB,iBAAiB,QAAQ;AACrB,SAAK,qBAAqB,CAAC;AAC3B,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EACA,kBAAkB;AACd,SAAK,kBAAkB;AACvB,SAAK,WAAW,oBAAoB,MAAM;AAUtC,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAM,MAAM,IAAI,IAAI,IAAI;AACxB,aAAK,UAAU,GAAG,EAAE,IAAI,SAAU,MAAM,MAAM;AAC1C,iBAAO,KAAK,sBAAsB,MAAM,GAAG,IAAI;AAAA,QACnD;AACA,aAAK,UAAU,GAAG,EAAE,IAAI,SAAU,MAAM,MAAM;AAC1C,iBAAO,KAAK,sBAAsB,MAAM,GAAG,IAAI;AAAA,QACnD;AACA,aAAK,SAAS,GAAG,EAAE,IAAI,SAAU,MAAM;AACnC,iBAAO,KAAK,qBAAqB,MAAM,CAAC;AAAA,QAC5C;AACA,aAAK,KAAK,GAAG,EAAE,IAAI,SAAU,MAAM;AAC/B,iBAAO,KAAK,iBAAiB,MAAM,CAAC;AAAA,QACxC;AACA,aAAK,OAAO,GAAG,EAAE,IAAI,SAAU,MAAM;AACjC,eAAK,mBAAmB,GAAG,IAAI;AAAA,QACnC;AACA,aAAK,WAAW,GAAG,EAAE,IAAI,SAAU,MAAM;AACrC,eAAK,2BAA2B,GAAG,IAAI;AAAA,QAC3C;AACA,aAAK,eAAe,GAAG,EAAE,IAAI,SAAU,MAAM;AACzC,eAAK,yBAAyB,GAAG,IAAI;AAAA,QACzC;AACA,aAAK,mBAAmB,GAAG,EAAE,IAAI,SAAU,MAAM;AAC7C,eAAK,iCAAiC,GAAG,IAAI;AAAA,QACjD;AAAA,MACJ;AAEA,WAAK,SAAS,IAAI,SAAU,KAAK,MAAM,MAAM;AACzC,eAAO,KAAK,sBAAsB,MAAM,KAAK,IAAI;AAAA,MACrD;AACA,WAAK,SAAS,IAAI,SAAU,KAAK,MAAM,MAAM;AACzC,eAAO,KAAK,sBAAsB,MAAM,KAAK,IAAI;AAAA,MACrD;AACA,WAAK,QAAQ,IAAI,SAAU,KAAK,MAAM;AAClC,eAAO,KAAK,qBAAqB,MAAM,GAAG;AAAA,MAC9C;AACA,WAAK,IAAI,IAAI,SAAU,KAAK,MAAM;AAC9B,eAAO,KAAK,iBAAiB,MAAM,GAAG;AAAA,MAC1C;AACA,WAAK,MAAM,IAAI,SAAU,KAAK,MAAM;AAChC,aAAK,mBAAmB,KAAK,IAAI;AAAA,MACrC;AACA,WAAK,YAAY,IAAI,SAAU,KAAK,MAAM;AACtC,aAAK,yBAAyB,KAAK,IAAI;AAAA,MAC3C;AACA,WAAK,SAAS,KAAK;AACnB,WAAK,YAAY,KAAK;AACtB,WAAK,KAAK,KAAK;AAAA,IACnB,CAAC;AAAA,EACL;AAAA,EACA,mBAAmB;AACf,SAAK,kBAAkB;AAKvB,SAAK,WAAW,8BAA8B,MAAM;AAChD,YAAM,OAAO;AACb,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAM,MAAM,IAAI,IAAI,IAAI;AACxB,eAAO,KAAK,UAAU,GAAG,EAAE;AAC3B,eAAO,KAAK,UAAU,GAAG,EAAE;AAC3B,eAAO,KAAK,SAAS,GAAG,EAAE;AAC1B,eAAO,KAAK,KAAK,GAAG,EAAE;AACtB,eAAO,KAAK,OAAO,GAAG,EAAE;AACxB,eAAO,KAAK,WAAW,GAAG,EAAE;AAC5B,eAAO,KAAK,eAAe,GAAG,EAAE;AAChC,eAAO,KAAK,mBAAmB,GAAG,EAAE;AAAA,MACxC;AACA,aAAO,KAAK,SAAS;AACrB,aAAO,KAAK,SAAS;AACrB,aAAO,KAAK,QAAQ;AACpB,aAAO,KAAK,IAAI;AAChB,aAAO,KAAK,MAAM;AAClB,aAAO,KAAK,YAAY;AACxB,aAAO,KAAK;AACZ,aAAO,KAAK;AACZ,aAAO,KAAK;AAAA,IAChB,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,MAAM;AAAA,EAEpB;AAAA;AAAA,EAEA,iBAAiB,aAAa,MAAM;AAChC,WAAO,MAAM;AAAA,EACjB;AAAA;AAAA;AAAA,EAGA,UAAU,SAAS;AAGf,WAAO;AAAA,EACX;AAAA,EACA,mBAAmB,MAAM,KAAK;AAC1B,QAAI;AACA,YAAM,kBAAkB,IAAI,KAAK,EAAE,YAAY,CAAC,GAAG,KAAW,CAAC;AAC/D,sBAAgB,OAAO;AACvB,WAAK,mBAAmB,KAAK,eAAe;AAC5C,UAAI,KAAK,IAAI;AACb,WAAK,mBAAmB,IAAI;AAC5B,aAAO;AAAA,IACX,SACO,eAAe;AAClB,UAAI,cAAc,yBAAyB,MAAM;AAC7C,YAAI;AACA,wBAAc,UACV,cAAc,UACV;AAAA,QAEZ,SACO,iBAAiB;AAEpB,gBAAM;AAAA,QACV;AAAA,MACJ;AACA,YAAM;AAAA,IACV;AAAA,EACJ;AAAA;AAAA,EAEA,qBAAqB,mBAAmB,YAAY;AAChD,WAAO,WAAW,KAAK,MAAM,QAAQ,mBAAmB,UAAU;AAAA,EACtE;AAAA,EACA,yBAAyB,YAAY,mBAAmB;AACpD,eAAW,KAAK,MAAM,qBAAqB,mBAAmB,UAAU;AAAA,EAC5E;AAAA,EACA,iCAAiC,YAAY,SAAS;AAClD,eAAW,KAAK,MAAM,kCAAkC,SAAS,YAAY,gBAAgB;AAAA,EACjG;AAAA,EACA,mBAAmB,YAAY,mBAAmB;AAC9C,eAAW,KAAK,MAAM,YAAY,mBAAmB,UAAU;AAAA,EACnE;AAAA,EACA,2BAA2B,YAAY,SAAS;AAC5C,eAAW,KAAK,MAAM,yBAAyB,SAAS,YAAY,gBAAgB;AAAA,EACxF;AAAA,EACA,iBAAiB,YAAY,YAAY;AACrC,WAAO,aAAa,KAAK,MAAM,YAAY,UAAU;AAAA,EACzD;AAAA,EACA,sBAAsB,YAAY,YAAY,SAAS;AACnD,2BAAuB,UAAU;AACjC,QAAI,CAAC,cAAc,YAAI,YAAY,UAAU,MAAM,OAAO;AACtD,YAAM,QAAQ,IAAI,MAAM,WAAW,aAAa,UAAU,CAAC,uEACL,KAAK,UAAU,UAAU,CAAC;AAAA,2BAC9C,KAAK,mBAAmB,CAAC,EAAE,IAAI,GAAG;AACpE,YAAM,uBAAuB;AAC7B,YAAM;AAAA,IACV;AACA,UAAM,WAAW,aAAK,KAAK,kBAAkB;AAC7C,UAAM,WAAW,WAAW;AAC5B,UAAM,kBAAkB,IAAI,YAAY;AAAA,MACpC,KAAK;AAAA,MACL,iBAAiB;AAAA,MACjB,OAAO,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAAA;AAAA,MAEjE,gBAAgB;AAAA,IACpB,CAAC;AACD,aAAS,WAAW,KAAK,eAAe;AACxC,WAAO,KAAK,YACN,0BACA;AAAA,EACV;AAAA,EACA,sBAAsB,SAAS,YAAY,SAAS;AAChD,2BAAuB,UAAU;AACjC,QAAI,CAAC,oBAAoB,OAAO,GAAG;AAC/B,YAAM,QAAQ,IAAI,MAAM,WAAW,aAAa,UAAU,CAAC,mEACT,KAAK,UAAU,OAAO,CAAC;AAAA,2BACvC,KAAK,mBAAmB,CAAC,EAAE,IAAI,GAAG;AACpE,YAAM,uBAAuB;AAC7B,YAAM;AAAA,IACV;AACA,UAAM,WAAW,aAAK,KAAK,kBAAkB;AAC7C,UAAM,kBAAkB,IAAI,SAAS;AAAA,MACjC,KAAK;AAAA,MACL,cAAc;AAAA,MACd,OAAO,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAAA,IACrE,CAAC;AACD,aAAS,WAAW,KAAK,eAAe;AACxC,WAAO;AAAA,EACX;AACJ;AACA,SAAS,WAAW,iBAAiB,aAAa,YAAY,YAAY,OAAO;AAC7E,yBAAuB,UAAU;AACjC,QAAM,WAAW,aAAK,KAAK,kBAAkB;AAC7C,QAAM,gBAAgB,mBAAW,WAAW,IAAI,cAAc,YAAY;AAC1E,QAAM,UAAU,IAAI,gBAAgB,EAAE,YAAY,CAAC,GAAG,KAAK,WAAW,CAAC;AACvE,MAAI,WAAW;AACX,YAAQ,YAAY,YAAY;AAAA,EACpC;AACA,MAAI,YAAI,aAAa,eAAe,GAAG;AACnC,YAAQ,eAAe,YAAY;AAAA,EACvC;AACA,OAAK,mBAAmB,KAAK,OAAO;AACpC,gBAAc,KAAK,IAAI;AACvB,WAAS,WAAW,KAAK,OAAO;AAChC,OAAK,mBAAmB,IAAI;AAC5B,SAAO;AACX;AACA,SAAS,aAAa,aAAa,YAAY;AAC3C,yBAAuB,UAAU;AACjC,QAAM,WAAW,aAAK,KAAK,kBAAkB;AAE7C,QAAM,aAAa,gBAAQ,WAAW,MAAM;AAC5C,QAAM,OAAO,eAAe,QAAQ,cAAc,YAAY;AAC9D,QAAM,YAAY,IAAI,YAAY;AAAA,IAC9B,YAAY,CAAC;AAAA,IACb,KAAK;AAAA,IACL,mBAAmB,cAAc,YAAY,uBAAuB;AAAA,EACxE,CAAC;AACD,MAAI,YAAI,aAAa,eAAe,GAAG;AACnC,cAAU,eAAe,YAAY;AAAA,EACzC;AACA,QAAM,gBAAgB,aAAK,MAAM,CAAC,YAAY,mBAAW,QAAQ,IAAI,CAAC;AACtE,YAAU,gBAAgB;AAC1B,WAAS,WAAW,KAAK,SAAS;AAClC,kBAAQ,MAAM,CAAC,YAAY;AACvB,UAAM,cAAc,IAAI,YAAY,EAAE,YAAY,CAAC,EAAE,CAAC;AACtD,cAAU,WAAW,KAAK,WAAW;AACrC,QAAI,YAAI,SAAS,oBAAoB,GAAG;AACpC,kBAAY,oBAAoB,QAAQ;AAAA,IAC5C,WAES,YAAI,SAAS,MAAM,GAAG;AAC3B,kBAAY,oBAAoB;AAAA,IACpC;AACA,SAAK,mBAAmB,KAAK,WAAW;AACxC,YAAQ,IAAI,KAAK,IAAI;AACrB,SAAK,mBAAmB,IAAI;AAAA,EAChC,CAAC;AACD,SAAO;AACX;AACA,SAAS,aAAa,KAAK;AACvB,SAAO,QAAQ,IAAI,KAAK,GAAG,GAAG;AAClC;AACA,SAAS,uBAAuB,KAAK;AACjC,MAAI,MAAM,KAAK,MAAM,gBAAgB;AACjC,UAAM,QAAQ,IAAI;AAAA;AAAA,MAElB,kCAAkC,GAAG;AAAA,wDACuB,iBAAiB,CAAC;AAAA,IAAE;AAChF,UAAM,uBAAuB;AAC7B,UAAM;AAAA,EACV;AACJ;;;AC/RO,IAAM,oBAAN,MAAwB;AAAA,EAC3B,sBAAsB,QAAQ;AAC1B,QAAI,YAAI,QAAQ,eAAe,GAAG;AAC9B,YAAM,oBAAoB,OAAO;AACjC,YAAM,gBAAgB,OAAO,sBAAsB;AACnD,WAAK,oBAAoB,gBACnB,oBACA;AACN,WAAK,gBAAgB,gBACf,oBAAoB,IACpB;AAAA,IACV,OACK;AACD,WAAK,oBAAoB;AACzB,WAAK,gBAAgB,sBAAsB;AAAA,IAC/C;AACA,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EACA,WAAW,WAAW,WAAW;AAG7B,QAAI,KAAK,kBAAkB,MAAM;AAC7B,WAAK;AACL,YAAM,SAAS,IAAI,MAAM,KAAK,kBAAkB,CAAC,EAAE,KAAK,GAAI;AAC5D,UAAI,KAAK,kBAAkB,KAAK,mBAAmB;AAC/C,gBAAQ,IAAI,GAAG,MAAM,QAAQ,SAAS,GAAG;AAAA,MAC7C;AACA,YAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAAS;AAEvC,YAAM,cAAc,OAAO,KAAK,QAAQ,OAAO,QAAQ;AACvD,UAAI,KAAK,kBAAkB,KAAK,mBAAmB;AAC/C,oBAAY,GAAG,MAAM,QAAQ,SAAS,WAAW,IAAI,IAAI;AAAA,MAC7D;AACA,WAAK;AACL,aAAO;AAAA,IACX,OACK;AACD,aAAO,UAAU;AAAA,IACrB;AAAA,EACJ;AACJ;;;AC9CO,SAAS,YAAY,aAAa,WAAW;AAChD,YAAU,QAAQ,CAAC,aAAa;AAC5B,UAAM,YAAY,SAAS;AAC3B,WAAO,oBAAoB,SAAS,EAAE,QAAQ,CAAC,aAAa;AACxD,UAAI,aAAa,eAAe;AAC5B;AAAA,MACJ;AACA,YAAM,qBAAqB,OAAO,yBAAyB,WAAW,QAAQ;AAE9E,UAAI,uBACC,mBAAmB,OAAO,mBAAmB,MAAM;AACpD,eAAO,eAAe,YAAY,WAAW,UAAU,kBAAkB;AAAA,MAC7E,OACK;AACD,oBAAY,UAAU,QAAQ,IAAI,SAAS,UAAU,QAAQ;AAAA,MACjE;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AACL;;;ACAO,IAAM,cAAc,oBAAoB,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACpF,OAAO,OAAO,WAAW;AAClB,IAAM,wBAAwB,OAAO,OAAO;AAAA,EAC/C,iBAAiB;AAAA,EACjB,cAAc;AAAA,EACd,sBAAsB;AAAA,EACtB,WAAW;AAAA,EACX,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,eAAe;AAAA,EACf,iBAAiB;AACrB,CAAC;AACM,IAAM,sBAAsB,OAAO,OAAO;AAAA,EAC7C,mBAAmB,MAAM;AAAA,EACzB,eAAe;AACnB,CAAC;AACM,IAAI;AAAA,CACV,SAAUC,4BAA2B;AAClC,EAAAA,2BAA0BA,2BAA0B,mBAAmB,IAAI,CAAC,IAAI;AAChF,EAAAA,2BAA0BA,2BAA0B,qBAAqB,IAAI,CAAC,IAAI;AAClF,EAAAA,2BAA0BA,2BAA0B,uBAAuB,IAAI,CAAC,IAAI;AACpF,EAAAA,2BAA0BA,2BAA0B,uBAAuB,IAAI,CAAC,IAAI;AACpF,EAAAA,2BAA0BA,2BAA0B,wBAAwB,IAAI,CAAC,IAAI;AACrF,EAAAA,2BAA0BA,2BAA0B,gBAAgB,IAAI,CAAC,IAAI;AAC7E,EAAAA,2BAA0BA,2BAA0B,qBAAqB,IAAI,CAAC,IAAI;AAClF,EAAAA,2BAA0BA,2BAA0B,gBAAgB,IAAI,CAAC,IAAI;AAC7E,EAAAA,2BAA0BA,2BAA0B,iCAAiC,IAAI,CAAC,IAAI;AAC9F,EAAAA,2BAA0BA,2BAA0B,oBAAoB,IAAI,CAAC,IAAI;AACjF,EAAAA,2BAA0BA,2BAA0B,wBAAwB,IAAI,EAAE,IAAI;AACtF,EAAAA,2BAA0BA,2BAA0B,uBAAuB,IAAI,EAAE,IAAI;AACrF,EAAAA,2BAA0BA,2BAA0B,eAAe,IAAI,EAAE,IAAI;AAC7E,EAAAA,2BAA0BA,2BAA0B,6BAA6B,IAAI,EAAE,IAAI;AAC/F,GAAG,8BAA8B,4BAA4B,CAAC,EAAE;AAMzD,IAAM,SAAN,MAAM,QAAO;AAAA;AAAA;AAAA;AAAA,EAIhB,OAAO,oBAAoB,gBAAgB;AACvC,UAAM,MAAM,4HACqD;AAAA,EACrE;AAAA,EACA,sBAAsB;AAClB,SAAK,WAAW,uBAAuB,MAAM;AACzC,UAAI;AACJ,WAAK,mBAAmB;AACxB,YAAM,YAAY,KAAK;AACvB,WAAK,WAAW,eAAe,MAAM;AAIjC,yBAAiB,IAAI;AAAA,MACzB,CAAC;AACD,WAAK,WAAW,qBAAqB,MAAM;AACvC,YAAI;AACA,eAAK,gBAAgB;AAErB,0BAAQ,KAAK,mBAAmB,CAAC,iBAAiB;AAC9C,kBAAM,cAAc,KAAK,YAAY;AACrC,kBAAM,wBAAwB,YAAY,uBAAuB;AACjE,gBAAI;AACJ,iBAAK,WAAW,GAAG,YAAY,SAAS,MAAM;AAC1C,iCAAmB,KAAK,mBAAmB,cAAc,qBAAqB;AAAA,YAClF,CAAC;AACD,iBAAK,qBAAqB,YAAY,IAAI;AAAA,UAC9C,CAAC;AAAA,QACL,UACA;AACI,eAAK,iBAAiB;AAAA,QAC1B;AAAA,MACJ,CAAC;AACD,UAAI,iBAAiB,CAAC;AACtB,WAAK,WAAW,qBAAqB,MAAM;AACvC,yBAAiBC,gBAAe;AAAA,UAC5B,OAAO,eAAO,KAAK,oBAAoB;AAAA,QAC3C,CAAC;AACD,aAAK,mBAAmB,KAAK,iBAAiB,OAAO,cAAc;AAAA,MACvE,CAAC;AACD,WAAK,WAAW,uBAAuB,MAAM;AAGzC,YAAI,gBAAQ,cAAc,KAAK,KAAK,oBAAoB,OAAO;AAC3D,gBAAM,mBAAmBC,iBAAgB;AAAA,YACrC,OAAO,eAAO,KAAK,oBAAoB;AAAA,YACvC,YAAY,eAAO,KAAK,SAAS;AAAA,YACjC,gBAAgB;AAAA,YAChB,aAAa;AAAA,UACjB,CAAC;AACD,gBAAM,4BAA4B,kBAAkB;AAAA,YAChD,mBAAmB,KAAK;AAAA,YACxB,OAAO,eAAO,KAAK,oBAAoB;AAAA,YACvC,YAAY,eAAO,KAAK,SAAS;AAAA,YACjC,aAAa;AAAA,UACjB,CAAC;AACD,eAAK,mBAAmB,KAAK,iBAAiB,OAAO,kBAAkB,yBAAyB;AAAA,QACpG;AAAA,MACJ,CAAC;AAED,UAAI,gBAAQ,KAAK,gBAAgB,GAAG;AAEhC,YAAI,KAAK,iBAAiB;AACtB,eAAK,WAAW,0BAA0B,MAAM;AAC5C,kBAAM,aAAa,uBAAuB,eAAO,KAAK,oBAAoB,CAAC;AAC3E,iBAAK,gBAAgB;AAAA,UACzB,CAAC;AAAA,QACL;AACA,aAAK,WAAW,6BAA6B,MAAM;AAC/C,cAAI,IAAI;AACR,WAAC,MAAM,KAAK,KAAK,mBAAmB,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,IAAI;AAAA,YAC7F,OAAO,eAAO,KAAK,oBAAoB;AAAA,UAC3C,CAAC;AACD,eAAK,6BAA6B,eAAO,KAAK,oBAAoB,CAAC;AAAA,QACvE,CAAC;AAAA,MACL;AACA,UAAI,CAAC,QAAO,oCACR,CAAC,gBAAQ,KAAK,gBAAgB,GAAG;AACjC,wBAAgB,YAAI,KAAK,kBAAkB,CAAC,aAAa,SAAS,OAAO;AACzE,cAAM,IAAI,MAAM;AAAA,GAAwC,cAAc,KAAK,qCAAqC,CAAC,EAAE;AAAA,MACvH;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,YAAY,iBAAiB,QAAQ;AACjC,SAAK,mBAAmB,CAAC;AACzB,SAAK,mBAAmB;AACxB,UAAM,OAAO;AACb,SAAK,iBAAiB,MAAM;AAC5B,SAAK,iBAAiB;AACtB,SAAK,eAAe,MAAM;AAC1B,SAAK,qBAAqB,iBAAiB,MAAM;AACjD,SAAK,gBAAgB,MAAM;AAC3B,SAAK,gBAAgB,MAAM;AAC3B,SAAK,kBAAkB;AACvB,SAAK,iBAAiB,MAAM;AAC5B,SAAK,sBAAsB,MAAM;AACjC,QAAI,YAAI,QAAQ,eAAe,GAAG;AAC9B,YAAM,IAAI,MAAM,kQAGU;AAAA,IAC9B;AACA,SAAK,kBAAkB,YAAI,QAAQ,iBAAiB,IAC9C,OAAO,kBACP,sBAAsB;AAAA,EAChC;AACJ;AAOA,OAAO,mCAAmC;AAC1C,YAAY,QAAQ;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACM,IAAM,YAAN,cAAwB,OAAO;AAAA,EAClC,YAAY,iBAAiB,SAAS,uBAAuB;AACzD,UAAM,cAAc,cAAM,MAAM;AAChC,gBAAY,YAAY;AACxB,UAAM,iBAAiB,WAAW;AAAA,EACtC;AACJ;;;AC/LO,SAAS,yBAAyB,SAAS,EAAE,eAAe,gCAAgC,OAAO,cAAc,MAAM,gCAAgC,OAAO,yBAA0B,IAAI,CAAC,GAAG;AACnM,QAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWf,QAAM,UAAU;AAAA,+BACW,GAAG;AAAA;AAE9B,QAAM,UAAU;AAAA,eACL,YAAY;AAAA,eACZ,YAAY;AAAA,eACZ,YAAY;AAAA,eACZ,YAAY;AAAA;AAEvB,QAAM,cAAc;AAAA;AAAA;AAGpB,QAAM,oBAAoB;AAAA;AAAA,iCAEG,KAAK,UAAU,SAAS,MAAM,IAAI,CAAC;AAAA;AAAA;AAGhE,QAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAMlB,SAAQ,SAAS,UAAU,UAAU,cAAc,oBAAoB;AAC3E;;;ACrCA,IAAM,QAAQ;AAAA,EACV,MAAM;AAAA,EACN,MAAM;AAAA,EACN,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,kBAAkB;AAAA,EAClB,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,UAAU;AAAA,EACV,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,oBAAoB;AAAA,EACpB,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,SAAS;AAAA,EACT,eAAe;AAAA,EACf,WAAW;AAAA,EACX,KAAK;AACT;AAEA,WAAW,OAAO,OAAO,KAAK,KAAK,GAAG;AAClC,QAAM,GAAG,IAAI;AACjB;AAEA,IAAO,0BAAQ;;;ACjCf,IAAO,yBAAQ;AAAA,EACX,YAAY,YAAY;AAAA,IACpB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,OAAO,MAAM;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,KAAK,YAAY;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,UAAU,YAAY;AAAA,IAClB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,aAAa,YAAY;AAAA,IACrB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,YAAY,YAAY;AAAA,IACpB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,UAAU,YAAY;AAAA,IAClB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,UAAU,YAAY;AAAA,IAClB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,IAAI,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,KAAK,YAAY;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,IAAI,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,KAAK,YAAY;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,OAAO;AAAA,IACP,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,WAAW,YAAY;AAAA,IACnB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,aAAa,YAAY;AAAA,IACrB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,cAAc,YAAY;AAAA,IACtB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,OAAO,YAAY;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,KAAK,YAAY;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,KAAK,YAAY;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,KAAK,YAAY;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,QAAQ,YAAY;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,cAAc,YAAY;AAAA,IACtB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,cAAc,YAAY;AAAA,IACtB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAG;AAAA,IACtB,aAAa;AAAA,IACb,OAAO;AAAA,EACX,CAAC;AAAA,EACD,MAAM,YAAY;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,SAAS,YAAY;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,WAAW,YAAY;AAAA,IACnB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA,IACP,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,WAAW,YAAY;AAAA,IACnB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,eAAe,YAAY;AAAA,IACvB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,kBAAkB,CAAC,GAAI;AAAA,IACvB,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,YAAY,YAAY;AAAA,IACpB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACjB,CAAC;AACL;;;ACpUA,IAAO,0BAAQ,CAAC,uBAAa,YAAY,uBAAa,SAAS,uBAAa,KAAK,uBAAa,OAAO,uBAAa,MAAM,uBAAa,UAAU,uBAAa,OAAO,uBAAa,MAAM,uBAAa,QAAQ,uBAAa,aAAa,uBAAa,YAAY,uBAAa,OAAO,uBAAa,SAAS,uBAAa,UAAU,uBAAa,SAAS,uBAAa,UAAU,uBAAa,SAAS,uBAAa,IAAI,uBAAa,OAAO,uBAAa,MAAM,uBAAa,QAAQ,uBAAa,KAAK,uBAAa,SAAS,uBAAa,IAAI,uBAAa,SAAS,uBAAa,QAAQ,uBAAa,KAAK,uBAAa,OAAO,uBAAa,MAAM,uBAAa,MAAM,uBAAa,OAAO,uBAAa,QAAQ,uBAAa,QAAQ,uBAAa,WAAW,uBAAa,aAAa,uBAAa,MAAM,uBAAa,cAAc,uBAAa,OAAO,uBAAa,KAAK,uBAAa,KAAK,uBAAa,MAAM,uBAAa,KAAK,uBAAa,QAAQ,uBAAa,QAAQ,uBAAa,cAAc,uBAAa,cAAc,uBAAa,MAAM,uBAAa,SAAS,uBAAa,WAAW,uBAAa,WAAW,uBAAa,eAAe,uBAAa,UAAU;;;ACCtmC,IAAM,QAAQ,IAAI,MAAM,uBAAa;AACrC,WAAW,SAAS,MAAM;AAAuB,UAAQ,MAAM,KAAK;AAEpE,IAAO,qBAAQ;;;ACIR,IAAM,sBAAsB;AAAA,EAC/B,eAAe;AAAA,EACf,aAAa;AACjB;AAEA,IAAM,kBAAN,MAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlB,YAAY,MAAM,OAAO;AACrB,SAAK,OAAO;AACZ,SAAK,QAAQ;AAAA,EACjB;AACJ;AAEO,IAAM,aAAN,cAAyB,UAAU;AAAA,EAStC,YAAY,QAAQ,OAAO;AACvB,UAAM,yBAAe;AAAA,MACjB,iBAAiB;AAAA,MACjB,sBAAsB;AAAA,QAClB,2BAA2B,aAAW;AAClC,cAAI;AAAO,oBAAQ,MAAM,OAAO;AAChC,eAAK,UAAU,KAAK,IAAI,gBAAgB,oBAAoB,eAAe,QAAQ,MAAM,CAAC;AAC1F,iBAAO;AAAA,QACX;AAAA,QACA,+BAA+B,aAAW;AACtC,kBAAQ,MAAM,+BAA+B;AAC7C,kBAAQ,IAAI,OAAO;AACnB,iBAAO;AAAA,QACX;AAAA,QACA,yBAAyB,aAAW;AAChC,eAAK,UAAU,KAAK,IAAI,gBAAgB,oBAAoB,aAAa,QAAQ,QAAQ,CAAC;AAC1F,iBAAO;AAAA,QACX;AAAA,QACA,uBAAuB,aAAW;AAC9B,kBAAQ,MAAM,sBAAsB;AACpC,kBAAQ,IAAI,OAAO;AACnB,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ,CAAC;AA/BL;AAAA,qCAAY,CAAC;AAiCT,UAAM,IAAI;AAGV,MAAE,KAAK,wBAAc,MAAM,MAAM,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,IAAI,CAAC,CAAC,CAAC;AAI/E,MAAE,KAAK,wBAAc,MAAM,MAAM;AAC7B,QAAE,GAAG;AAAA,QACD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,YAAY,CAAC,EAAC;AAAA,QACpD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,cAAc,CAAC,EAAC;AAAA,QACtD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC,EAAC;AAAA,QACxD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,eAAe,CAAC,EAAC;AAAA,QACvD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,SAAS,EAAC;AAAA,QAC7C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,OAAO,EAAC;AAAA,MAC/C,CAAC;AAAA,IACL,CAAC;AAID,MAAE,KAAK,wBAAc,cAAc,MAAM;AACrC,QAAE,QAAQ,uBAAa,IAAI;AAC3B,QAAE,QAAQ,uBAAa,UAAU;AACjC,QAAE,QAAQ,uBAAa,OAAO;AAC9B,QAAE,SAAS,uBAAa,UAAU;AAClC,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,gBAAgB,MAAM;AACvC,QAAE,OAAO,MAAM,EAAE,QAAQ,uBAAa,QAAQ,CAAC;AAC/C,QAAE,QAAQ,uBAAa,MAAM;AAC7B,QAAE,SAAS,uBAAa,UAAU;AAClC,QAAE,SAAS,uBAAa,KAAK;AAC7B,QAAE,QAAQ,EAAE,wBAAc,aAAa,CAAC;AACxC,QAAE,SAAS,uBAAa,OAAO;AAC/B,QAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC;AAC3C,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,kBAAkB,MAAM;AACzC,QAAE,QAAQ,uBAAa,QAAQ;AAC/B,QAAE,SAAS,uBAAa,UAAU;AAClC,QAAE,SAAS,uBAAa,KAAK;AAC7B,QAAE,QAAQ,EAAE,wBAAc,aAAa,CAAC;AACxC,QAAE,SAAS,uBAAa,OAAO;AAC/B,QAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC;AAC3C,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAC9B,QAAE,MAAM,MAAM,EAAE,QAAQ,EAAE,wBAAc,eAAe,CAAC,CAAC;AACzD,QAAE,MAAM,MAAM,EAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC,CAAC;AACnD,QAAE,QAAQ,uBAAa,WAAW;AAClC,QAAE,SAAS,EAAE,wBAAc,GAAG,CAAC;AAAA,IACnC,CAAC;AAID,MAAE,KAAK,wBAAc,kBAAkB,MAAM;AACzC,QAAE,OAAO,MAAM,EAAE,GAAG;AAAA,QAChB,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,QAAQ,EAAC;AAAA,QAC5C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,KAAK,EAAC;AAAA,MAC7C,CAAC,CAAC;AACF,QAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC;AACpC,QAAE,QAAQ,MAAM;AACZ,UAAE,QAAQ,uBAAa,MAAM;AAC7B,UAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC;AAAA,MACzC,CAAC;AACD,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,iBAAiB,MAAM;AACxC,QAAE,QAAQ,uBAAa,OAAO;AAC9B,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAC9B,QAAE,KAAK,MAAM,EAAE,GAAG;AAAA,QACd,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC,EAAC;AAAA,QACxD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,SAAS,EAAC;AAAA,QAC7C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,OAAO,EAAC;AAAA,MAC/C,CAAC,CAAC;AACF,QAAE,SAAS,uBAAa,UAAU;AAClC,QAAE,SAAS,EAAE,wBAAc,GAAG,CAAC;AAAA,IACnC,CAAC;AAID,MAAE,KAAK,wBAAc,cAAc,MAAM;AACrC,QAAE,QAAQ,uBAAa,EAAE;AACzB,QAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC;AACrC,QAAE,QAAQ,uBAAa,IAAI;AAC3B,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAC9B,QAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC,CAAC;AAClD,QAAE,MAAM,MAAM,EAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC,CAAC;AAC1D,QAAE,OAAO,MAAM,EAAE,QAAQ,EAAE,wBAAc,cAAc,CAAC,CAAC;AACzD,QAAE,QAAQ,uBAAa,KAAK;AAC5B,QAAE,SAAS,EAAE,wBAAc,GAAG,CAAC;AAAA,IACnC,CAAC;AAID,MAAE,KAAK,wBAAc,kBAAkB,MAAM;AACzC,QAAE,QAAQ,uBAAa,MAAM;AAC7B,QAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC;AACrC,QAAE,QAAQ,uBAAa,IAAI;AAC3B,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAC9B,QAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC,CAAC;AAAA,IACtD,CAAC;AAID,MAAE,KAAK,wBAAc,gBAAgB,MAAM;AACvC,QAAE,QAAQ,uBAAa,IAAI;AAC3B,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAC9B,QAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC,CAAC;AAAA,IACtD,CAAC;AAID,MAAE,KAAK,wBAAc,gBAAgB,MAAM;AACvC,QAAE,OAAO,MAAM,EAAE,QAAQ,uBAAa,KAAK,CAAC;AAC5C,QAAE,QAAQ,uBAAa,IAAI;AAC3B,QAAE,QAAQ,EAAE,wBAAc,aAAa,CAAC;AACxC,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,kBAAkB,MAAM;AACzC,QAAE,QAAQ,uBAAa,MAAM;AAC7B,QAAE,OAAO,MAAM,EAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC,CAAC;AACrD,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,eAAe,MAAM;AACtC,QAAE,QAAQ,uBAAa,GAAG;AAC1B,QAAE,QAAQ,uBAAa,UAAU;AACjC,QAAE,OAAO,MAAM,EAAE,QAAQ,EAAE,wBAAc,WAAW,CAAC,CAAC;AACtD,QAAE,QAAQ,uBAAa,MAAM;AAC7B,QAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC;AACrC,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,gBAAgB,MAAM;AACvC,QAAE,QAAQ,uBAAa,IAAI;AAC3B,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAC9B,QAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC,CAAC;AAClD,QAAE,QAAQ,uBAAa,OAAO;AAC9B,QAAE,SAAS,EAAE,wBAAc,GAAG,CAAC;AAAA,IACnC,CAAC;AAID,MAAE,KAAK,wBAAc,oBAAoB,MAAM;AAC3C,QAAE,QAAQ,uBAAa,QAAQ;AAC/B,QAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC;AACrC,QAAE,QAAQ,EAAE,wBAAc,GAAG,CAAC;AAAA,IAClC,CAAC;AAID,MAAE,KAAK,wBAAc,eAAe,MAAM;AACtC,QAAE,GAAG;AAAA,QACD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,OAAO,EAAC;AAAA,QAC3C;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,EAAE,wBAAc,SAAS,CAAC;AACpC,cAAE,KAAK,MAAM;AACT,gBAAE,QAAQ,uBAAa,KAAK;AAC5B,gBAAE,SAAS,EAAE,wBAAc,SAAS,CAAC;AAAA,YACzC,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAID,MAAE,KAAK,wBAAc,WAAW,MAAM;AAClC,QAAE,QAAQ,uBAAa,UAAU;AACjC,QAAE,QAAQ,MAAM,EAAE,QAAQ,uBAAa,KAAK,CAAC;AAC7C,QAAE,SAAS,uBAAa,UAAU;AAAA,IACtC,CAAC;AAGD,MAAE,KAAK,wBAAc,kBAAkB,MAAM;AACzC,QAAE,GAAG;AAAA,QACD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,OAAO,EAAC;AAAA,QAC3C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,UAAU,EAAC;AAAA,MAClD,CAAC;AAAA,IACL,CAAC;AAED,MAAE,KAAK,wBAAc,iBAAiB,MAAM;AACxC,QAAE,GAAG;AAAA,QACD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,OAAO,EAAC;AAAA,QAC3C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,SAAS,EAAC;AAAA,QAC7C,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC,EAAC;AAAA,MAC5D,CAAC;AAAA,IACL,CAAC;AAGD,MAAE,KAAK,wBAAc,YAAY,MAAM;AACnC,QAAE,GAAG;AAAA,QACD;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,EAAE,wBAAc,QAAQ,CAAC;AACnC,cAAE,KAAK,MAAM;AACT,gBAAE,IAAI;AAAA,gBACF,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,GAAG,EAAC;AAAA,gBACvC,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,EAAE,EAAC;AAAA,gBACtC,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,MAAM,EAAC;AAAA,gBAC1C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,SAAS,EAAC;AAAA,gBAC7C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,IAAI,EAAC;AAAA,gBACxC,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,WAAW,EAAC;AAAA,gBAC/C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,KAAK,EAAC;AAAA,gBACzC,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,YAAY,EAAC;AAAA,cACpD,CAAC;AACD,gBAAE,SAAS,EAAE,wBAAc,QAAQ,CAAC;AAAA,YACxC,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAGD,MAAE,KAAK,wBAAc,UAAU,MAAM;AACjC,QAAE,GAAG;AAAA,QACD;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,EAAE,wBAAc,cAAc,CAAC;AACzC,cAAE,KAAK,MAAM;AACT,gBAAE,IAAI;AAAA,gBACF,EAAC,KAAK,MAAM,EAAE,SAAS,uBAAa,GAAG,EAAC;AAAA,gBACxC,EAAC,KAAK,MAAM,EAAE,SAAS,uBAAa,GAAG,EAAC;AAAA,cAC5C,CAAC;AACD,gBAAE,SAAS,EAAE,wBAAc,cAAc,CAAC;AAAA,YAC9C,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAED,MAAE,KAAK,wBAAc,gBAAgB,MAAM;AACvC,QAAE,GAAG;AAAA,QACD;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,EAAE,wBAAc,OAAO,CAAC;AAClC,cAAE,KAAK,MAAM;AACT,gBAAE,IAAI;AAAA,gBACF,EAAC,KAAK,MAAM,EAAE,SAAS,uBAAa,IAAI,EAAC;AAAA,gBACzC,EAAC,KAAK,MAAM,EAAE,SAAS,uBAAa,GAAG,EAAC;AAAA,cAC5C,CAAC;AACD,gBAAE,SAAS,EAAE,wBAAc,OAAO,CAAC;AAAA,YACvC,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAGD,MAAE,KAAK,wBAAc,SAAS,MAAM;AAChC,QAAE,GAAG;AAAA,QACD;AAAA,UACI,KAAK,MAAM;AACP,cAAE,OAAO,MAAM,EAAE,QAAQ,uBAAa,GAAG,CAAC;AAC1C,cAAE,QAAQ,uBAAa,OAAO;AAAA,UAClC;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,uBAAa,GAAG;AAC1B,cAAE,QAAQ,EAAE,wBAAc,OAAO,CAAC;AAAA,UACtC;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,MAAM,EAAE,SAAS,uBAAa,GAAG,CAAC;AAC5C,cAAE,QAAQ,EAAE,wBAAc,aAAa,CAAC;AAAA,UAC5C;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,MAAM,EAAE,SAAS,uBAAa,GAAG,CAAC;AAC5C,cAAE,QAAQ,uBAAa,MAAM;AAC7B,cAAE,SAAS,EAAE,wBAAc,UAAU,CAAC;AACtC,cAAE,QAAQ,uBAAa,MAAM;AAAA,UACjC;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,MAAM,EAAE,SAAS,uBAAa,GAAG,CAAC;AAC5C,cAAE,SAAS,uBAAa,UAAU;AAClC,cAAE,QAAQ,MAAM,EAAE,QAAQ,EAAE,wBAAc,WAAW,CAAC,CAAC;AAAA,UAC3D;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,uBAAa,QAAQ;AAC/B,cAAE,SAAS,uBAAa,UAAU;AAAA,UACtC;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM;AACP,cAAE,QAAQ,MAAM,EAAE,SAAS,uBAAa,GAAG,CAAC;AAC5C,cAAE,SAAS,uBAAa,IAAI;AAAA,UAChC;AAAA,QACJ;AAAA,QACA;AAAA,UACI,KAAK,MAAM,EAAE,SAAS,uBAAa,SAAS;AAAA,QAChD;AAAA,QACA;AAAA,UACI,KAAK,MAAM,EAAE,SAAS,uBAAa,aAAa;AAAA,QACpD;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAGD,MAAE,KAAK,wBAAc,aAAa,MAAM;AACpC,QAAE,QAAQ,uBAAa,YAAY;AACnC,QAAE,SAAS,EAAE,wBAAc,UAAU,CAAC;AACtC,QAAE,QAAQ,uBAAa,YAAY;AAAA,IACvC,CAAC;AAED,MAAE,KAAK,wBAAc,eAAe,MAAM;AACtC,QAAE,QAAQ,uBAAa,UAAU;AACjC,QAAE,SAAS,uBAAa,MAAM;AAC9B,QAAE,OAAO,MAAM;AACX,UAAE,SAAS,EAAE,wBAAc,UAAU,CAAC;AACtC,UAAE,KAAK,MAAM;AACT,YAAE,QAAQ,uBAAa,KAAK;AAC5B,YAAE,QAAQ,EAAE,wBAAc,UAAU,CAAC;AAAA,QACzC,CAAC;AAAA,MACL,CAAC;AACD,QAAE,SAAS,uBAAa,MAAM;AAAA,IAClC,CAAC;AAGD,MAAE,KAAK,wBAAc,WAAW,MAAM;AAClC,QAAE,IAAI;AAAA,QACF,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,cAAc,CAAC,EAAC;AAAA,QACtD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,aAAa,CAAC,EAAC;AAAA,QACrD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,cAAc,CAAC,EAAC;AAAA,QACtD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,kBAAkB,CAAC,EAAC;AAAA,QAC1D,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,YAAY,CAAC,EAAC;AAAA,QACpD,EAAC,KAAK,MAAM,EAAE,QAAQ,EAAE,wBAAc,gBAAgB,CAAC,EAAC;AAAA,QACxD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,SAAS,EAAC;AAAA,QAC7C,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,OAAO,EAAC;AAAA,MAC/C,CAAC;AAAA,IACL,CAAC;AAID,MAAE,KAAK,wBAAc,KAAK,MAAM;AAC5B,QAAE,OAAO,MAAM,EAAE,QAAQ,uBAAa,OAAO,CAAC;AAC9C,QAAE,GAAG;AAAA,QACD,EAAC,KAAK,MAAM,EAAE,QAAQ,uBAAa,SAAS,EAAC;AAAA,QAC7C,EAAC,KAAK,MAAM,EAAE,SAAS,GAAG,EAAC;AAAA,MAC/B,CAAC;AAAA,IACL,CAAC;AAGD,SAAK,oBAAoB;AAAA,EAC7B;AAAA,EA9YA,IAAI,UAAU,MAAM;AAChB,SAAK,YAAY,CAAC;AAClB,SAAK,QAAQ,mBAAU,SAAS,IAAI,EAAE;AAAA,EAC1C;AA4YJ;;;AC5aA,oBAA8B;AAM9B,IAAO,2BAAQ,WAAS,IAAI;AAAA,EACxB,IAAI,uBAAS,MAAM,YAAY,GAAG,MAAM,cAAc,CAAC;AAAA,EACvD,IAAI,uBAAS,MAAM,UAAU,GAAG,MAAM,SAAS;AACnD;;;ACJA,IAAAC,iBAAiC;;;ACNjC,IAAO,4BAAQ;AAAA,EACX,cAAc;AAAA,EACd,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,aAAa;AAAA,EACb,kBAAkB;AAAA,EAClB,iBAAiB;AAAA,EACjB,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,eAAe;AAAA,EACf,cAAc;AAAA,EACd,eAAe;AAAA,EACf,cAAc;AAAA,EACd,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,aAAa;AAAA,EACb,UAAU;AAAA,EACV,cAAc;AAAA,EACd,SAAS;AAAA,EACT,cAAc;AAAA,EACd,aAAa;AAAA,EACb,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,UAAU;AAAA,EACV,WAAW;AAAA,EACX,UAAU;AAAA,EACV,aAAa;AAAA,EACb,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,WAAW;AAAA,EACX,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,oBAAoB;AAAA,EACpB,eAAe;AAAA,EACf,oBAAoB;AAAA,EACpB,sBAAsB;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe;AACnB;;;AD7CA,IAAM,SAAS,IAAI,WAAW;AAC9B,IAAM,gBAAgB,OAAO,6BAA6B;AAX1D;AAaO,IAAM,cAAN,cAA0B,cAAc;AAAA,EAC3C,cAAc;AACV,UAAM;AAWV;AAAA;AAAA;AAAA;AAAA;AAWA;AAMA;AAAA;AAxB6C;AAAA;AACR;AAAA;AAJjC,SAAK,gBAAgB;AAAA,EACzB;AAAA,EA2CA,CAAC,wBAAc,IAAI,EAAE,KAAK;AACtB,WAAO,IAAI,wBAAc,IAAI,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAAA,EAChE;AAAA,EAEA,CAAC,wBAAc,IAAI,EAAE,KAAK;AACtB,0BAAK,sBAAL,WAAc;AACd,QAAI;AACJ,QAAI,OAAO,IAAI,wBAAc,YAAY;AAAG,aAAO,KAAK,MAAM,IAAI;AAClE,QAAI,OAAO,IAAI,wBAAc,cAAc;AAAG,aAAO,KAAK,MAAM,IAAI;AACpE,QAAI,OAAO,IAAI,wBAAc,gBAAgB;AAAG,aAAO,KAAK,MAAM,IAAI;AACtE,QAAI,OAAO,IAAI,wBAAc,eAAe;AAAG,aAAO,KAAK,MAAM,IAAI;AAAA,EACzE;AAAA,EAEA,CAAC,wBAAc,GAAG,EAAE,KAAK;AACrB,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAAA,EACpE;AAAA,EAEA,CAAC,wBAAc,eAAe,EAAE,KAAK;AACjC,0BAAK,sBAAL,WAAc;AAEd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAChE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAEnE,UAAM,UAAU,IAAI,wBAAc,gBAAgB;AAElD,QAAI;AAAS,iBAAW,MAAM,SAAS;AACnC,cAAM,WAAW,KAAK,MAAM,EAAE;AAC9B,cAAM,YAAY,WAAW,wBAAc,SAAS;AACpD,cAAM,QAAQ,WAAW,uBAAa,MAAM,IAAI;AAEhD,YAAI;AAAO,eAAK,aAAa,KAAK;AAAA,YAC9B,SAAS;AAAA,YACT,OAAO,yBAAc,KAAK;AAAA,YAC1B,UAAU,kCAAmB;AAAA,UACjC,CAAC;AAED,YAAI,WAAW;AACX,gBAAM,EAAC,MAAM,KAAI,IAAI;AACrB,gCAAK,gBAAL,WAAW,MAAM,0BAAgB;AACjC,gCAAK,gBAAL,WAAW,MAAM,0BAAgB;AAAA,QACrC;AAAA,MACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,YAAY,EAAE,KAAK;AAC9B,QAAI,wBAAc,GAAG,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAEpD,UAAM,OAAO,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC;AAClD,UAAM,OAAO,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC;AAElD,0BAAK,gBAAL,WAAW,MAAM,0BAAgB;AACjC,0BAAK,gBAAL,WAAW,MAAM,0BAAgB;AAEjC,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAEhE,WAAO;AAAA,MACH,MAAM,MAAM;AAAA,MACZ,MAAM,MAAM;AAAA,IAChB;AAAA,EACJ;AAAA,EAEA,CAAC,wBAAc,cAAc,EAAE,KAAK;AAChC,0BAAK,sBAAL,WAAc;AAEd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,SAAS,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACjE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACnE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC/D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,MAAM,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC9D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAEhE,SAAK,MAAM,IAAI,wBAAc,aAAa,CAAC;AAC3C,SAAK,MAAM,IAAI,wBAAc,gBAAgB,CAAC;AAAA,EAClD;AAAA,EAEA,CAAC,wBAAc,gBAAgB,EAAE,KAAK;AAzI1C;AA0IQ,0BAAK,sBAAL,WAAc;AAEd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,SAAS,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACjE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACnE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,MAAM,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC9D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAChE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,YAAY,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAEpE,UAAM,SAAS,MAAM,wBAAc,eAAe;AAIlD,UAAM,OAAO,KAAK,MAAM,IAAI,wBAAc,aAAa,CAAC;AAGxD,QAAI,MAAM;AAAM,iBAAW,OAAO,KAAK,MAAM;AACzC,cAAM,QAAQ,IAAI,uBAAa,MAAM,IAAI;AACzC,YAAI;AAAO,eAAK,aAAa,KAAK;AAAA,YAC9B,SAAS;AAAA,YACT,OAAO,yBAAc,KAAK;AAAA,YAC1B,UAAU,kCAAmB;AAAA,UACjC,CAAC;AAAA,MACL;AAGA,QAAI,QAAQ;AAER,YAAM,WAAW,CAAC;AAElB,iBAAW,SAAS,QAAQ;AACxB,cAAM,YAAY,KAAK,MAAM,KAAK,IAAI,wBAAc,SAAS;AAC7D,YAAI,CAAC;AAAW;AAChB,cAAM,EAAC,MAAM,KAAI,IAAI;AACrB,8BAAK,gBAAL,WAAW,MAAM,0BAAgB;AACjC,8BAAK,gBAAL,WAAW,MAAM,0BAAgB;AACjC,YAAI,MAAM;AACN,WAAC,cAAS,KAAK,WAAd,eAAyB,CAAC,IAAG,KAAK,IAAI;AACvC,gBAAM,UAAU,KAAK,IAAI,KAAK,KAAK;AACnC,cAAI;AAAS,uBAAW,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG;AAC7C,mBAAK,aAAa,KAAK;AAAA,gBACnB,SAAS,sCAAsC,EAAE,KAAK;AAAA,gBACtD,OAAO,yBAAc,CAAC;AAAA,gBACtB,UAAU,kCAAmB;AAAA,cACjC,CAAC;AAAA,YACL;AAAA,QACJ;AAAA,MACJ;AAEA,iBAAW,KAAK,OAAO,OAAO,QAAQ,GAAG;AACrC,YAAI,EAAE,SAAS;AAAG;AAClB,mBAAW,KAAK,GAAG;AACf,eAAK,aAAa,KAAK;AAAA,YACnB,SAAS,kCAAkC,EAAE,KAAK;AAAA,YAClD,OAAO,yBAAc,CAAC;AAAA,YACtB,UAAU,kCAAmB;AAAA,UACjC,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAGA,UAAM,aAAa,IAAI,wBAAc,SAAS;AAC9C,QAAI;AAAY,iBAAW,aAAa,YAAY;AAChD,aAAK,MAAM,SAAS;AAAA,MACxB;AAGA,SAAK,MAAM,IAAI,wBAAc,gBAAgB,CAAC;AAG9C,WAAO,CAAC;AAAA,EACZ;AAAA,EAEA,CAAC,wBAAc,eAAe,EAAE,KAAK;AACjC,0BAAK,sBAAL,WAAc;AAEd,UAAM,kBAAkB,IAAI,wBAAc,gBAAgB;AAC1D,QAAI,CAAC;AAAiB,aAAO;AAC7B,UAAM,WAAW,KAAK,MAAM,eAAe;AAE3C,UAAMC,YAAW,WAAW,uBAAa,SAAS,IAAI;AACtD,QAAIA;AAAU,WAAK,aAAa,KAAK;AAAA,QACjC,SAAS;AAAA,QACT,OAAO,yBAAcA,SAAQ;AAAA,QAC7B,UAAU,kCAAmB;AAAA,MACjC,CAAC;AAED,UAAM,QAAQ,WAAW,uBAAa,MAAM,IAAI;AAChD,QAAI,CAAC,OAAO;AACR,YAAM,EAAC,KAAI,IAAI,WAAW,wBAAc,SAAS;AACjD,UAAI;AAAM,aAAK,aAAa,KAAK;AAAA,UAC7B,SAAS;AAAA,UACT,OAAO,yBAAc,IAAI;AAAA,UACzB,UAAU,kCAAmB;AAAA,QACjC,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,SAAS,EAAE,KAAK;AAC3B,UAAM,QAAQ,IAAI,uBAAa,MAAM,IAAI,IAAI,CAAC;AAC9C,0BAAK,gBAAL,WAAW,OAAO,0BAAgB;AAElC,UAAM,OAAO,IAAI,uBAAa,WAAW,IAAI;AAC7C,QAAI,CAAC;AAAM,aAAO,CAAC;AAEnB,QAAI,CAAC,MAAM,IAAI,IAAI;AACnB,QAAI,MAAM,wBAAwB;AAAO,aAAO;AAChD,QAAI,MAAM,wBAAwB;AAAO,aAAO;AAChD,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,CAAC,wBAAc,aAAa,EAAE,KAAK;AAE/B,0BAAK,gBAAL,WAAW,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACnE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC/D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC/D,QAAI,uBAAa,MAAM,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,WAAW;AACtF,QAAI,wBAAc,UAAU,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAC3D,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,aAAa,EAAE,KAAK;AAzQvC;AA0QQ,QAAI;AAGJ,QAAI,QAAQ,MAAM,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG;AAC/C,4BAAK,gBAAL,WAAW,OAAO,0BAAgB;AAClC,aAAO,EAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAC;AAAA,IAC7B;AAGA,QAAI,QAAQ,IAAI,uBAAa,MAAM,IAAI;AAAG,iBAAW,SAAS,OAAO;AACjE,8BAAK,gBAAL,WAAW,OAAO,0BAAgB;AAAA,MACtC;AAIA,UAAM,OAAO,MAAM,wBAAc,SAAS,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAGzE,UAAM,SAAS,CAAC;AAGhB,QAAI,MAAM;AACN,iBAAW,OAAO,MAAM;AACpB,cAAM,EAAC,MAAM,KAAI,IAAI;AACrB,8BAAK,gBAAL,WAAW,MAAM,0BAAgB;AACjC,8BAAK,gBAAL,WAAW,MAAM,0BAAgB;AACjC,YAAI;AAAM,WAAC,YAAO,KAAK,WAAZ,aAAuB,CAAC,IAAG,KAAK,IAAI;AAAA,MACnD;AAEA,iBAAW,KAAK,OAAO,OAAO,MAAM,GAAG;AACnC,YAAI,EAAE,SAAS;AAAG;AAClB,mBAAW,KAAK,GAAG;AACf,eAAK,aAAa,KAAK;AAAA,YACnB,SAAS,6BAA6B,EAAE,KAAK;AAAA,YAC7C,OAAO,yBAAc,CAAC;AAAA,YACtB,UAAU,kCAAmB;AAAA,UACjC,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAGA,WAAO;AAAA,MACH,KAAK;AAAA,MACL,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,CAAC,wBAAc,gBAAgB,EAAE,KAAK;AAClC,QAAI;AAEJ,QAAI,QAAQ,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG;AAC7C,4BAAK,gBAAL,WAAW,OAAO,0BAAgB;AAClC,aAAO,MAAM;AAAA,IACjB;AAEA,QAAI,QAAQ,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG;AAChD,4BAAK,gBAAL,WAAW,OAAO,0BAAgB;AAClC,aAAO,MAAM;AAAA,IACjB;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,gBAAgB,EAAE,KAAK;AAElC,0BAAK,sBAAL,WAAc;AAEd,UAAM,SAAS,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC;AAChD,UAAM,YAAY,KAAK,MAAM,IAAI,wBAAc,SAAS,CAAC;AACzD,UAAM,QAAQ,UAAU,uBAAa,MAAM,IAAI;AAG/C,QAAI,UAAU;AAAO,WAAK,aAAa,KAAK;AAAA,QACxC,SAAS;AAAA,QACT,OAAO,yBAAc,KAAK;AAAA,QAC1B,UAAU,kCAAmB;AAAA,MACjC,CAAC;AAED,UAAM,QAAQ,IAAI,uBAAa,MAAM,IAAI,IAAI,CAAC;AAC9C,QAAI;AAAO,4BAAK,gBAAL,WAAW,OAAO,0BAAgB;AAE7C,UAAMA,YAAW,IAAI,uBAAa,SAAS,IAAI,IAAI,CAAC;AACpD,QAAIA;AAAU,4BAAK,gBAAL,WAAWA,WAAU,0BAAgB;AAEnD,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC/D,SAAK,MAAM,IAAI,wBAAc,UAAU,IAAI,CAAC,CAAC;AAC7C,WAAO;AAAA,MACH,CAAC,wBAAc,SAAS,GAAG;AAAA,MAC3B,CAAC,uBAAa,MAAM,IAAI,GAAG;AAAA,MAC3B,CAAC,uBAAa,SAAS,IAAI,GAAGA;AAAA,IAClC;AAAA,EACJ;AAAA,EAEA,CAAC,wBAAc,SAAS,EAAE,KAAK;AAC3B,0BAAK,sBAAL,WAAc;AACd,QAAI;AACJ,QAAI,OAAO,IAAI,wBAAc,YAAY;AAAG,aAAO,KAAK,MAAM,IAAI;AAClE,QAAI,OAAO,IAAI,wBAAc,aAAa;AAAG,aAAO,KAAK,MAAM,IAAI;AACnE,QAAI,OAAO,IAAI,wBAAc,cAAc;AAAG,aAAO,KAAK,MAAM,IAAI;AACpE,QAAI,OAAO,IAAI,wBAAc,cAAc;AAAG,aAAO,KAAK,MAAM,IAAI;AACpE,QAAI,OAAO,IAAI,wBAAc,kBAAkB;AAAG,aAAO,KAAK,MAAM,IAAI;AACxE,QAAI,OAAO,IAAI,wBAAc,gBAAgB;AAAG,aAAO,KAAK,MAAM,IAAI;AACtE,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,cAAc,EAAE,KAAK;AAChC,0BAAK,sBAAL,WAAc;AACd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,MAAM,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC9D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,SAAK,MAAM,IAAI,wBAAc,aAAa,CAAC;AAC3C,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,aAAa,EAAE,KAAK;AAG/B,0BAAK,sBAAL,WAAc;AACd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,IAAI,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC5D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACnE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAE/D,SAAK,MAAM,IAAI,wBAAc,UAAU,CAAC;AACxC,SAAK,MAAM,IAAI,wBAAc,WAAW,CAAC;AACzC,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,cAAc,EAAE,KAAK;AAChC,0BAAK,sBAAL,WAAc;AACd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAChE,QAAI,wBAAc,SAAS,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAC1D,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,kBAAkB,EAAE,KAAK;AACpC,0BAAK,sBAAL,WAAc;AACd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,SAAS,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAEjE,SAAK,MAAM,IAAI,wBAAc,UAAU,CAAC;AACxC,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,gBAAgB,EAAE,KAAK;AAClC,0BAAK,sBAAL,WAAc;AACd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAE/D,SAAK,MAAM,IAAI,wBAAc,UAAU,CAAC;AACxC,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,YAAY,EAAE,KAAK;AAE9B,0BAAK,sBAAL,WAAc;AAEd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,GAAG,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC3D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,MAAM,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAE9D,SAAK,MAAM,IAAI,wBAAc,UAAU,CAAC;AACxC,QAAI,wBAAc,SAAS,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAC1D,QAAI,wBAAc,gBAAgB,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AACjE,SAAK,MAAM,IAAI,wBAAc,cAAc,CAAC;AAC5C,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,gBAAgB,EAAE,KAAK;AAClC,0BAAK,sBAAL,WAAc;AAEd,SAAK,MAAM,IAAI,wBAAc,UAAU,CAAC;AACxC,0BAAK,gBAAL,WAAW,IAAI,uBAAa,OAAO,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC/D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,QAAI,wBAAc,SAAS,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAC1D,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,cAAc,EAAE,KAAK;AAChC,0BAAK,sBAAL,WAAc;AACd,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,QAAI,wBAAc,SAAS,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAC1D,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,UAAU,EAAE,KAAK;AAE5B,QAAI,uBAAa,IAAI,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,SAAS;AAClF,QAAI,uBAAa,GAAG,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,QAAQ;AAChF,QAAI,uBAAa,OAAO,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,YAAY;AACxF,QAAI,uBAAa,UAAU,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,eAAe;AAC9F,QAAI,uBAAa,YAAY,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,iBAAiB;AAClG,QAAI,uBAAa,MAAM,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,WAAW;AACtF,QAAI,uBAAa,aAAa,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,kBAAkB;AAEpG,QAAI,wBAAc,QAAQ,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AACzD,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,OAAO,EAAE,KAAK;AAEzB,0BAAK,oBAAL,WAAa;AACb,0BAAK,gBAAL,WAAW,IAAI,uBAAa,IAAI,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC5D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,QAAQ,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAChE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,KAAK,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAC7D,0BAAK,gBAAL,WAAW,IAAI,uBAAa,UAAU,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAClE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,WAAW,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACnE,SAAK,MAAM,IAAI,wBAAc,WAAW,CAAC;AACzC,SAAK,MAAM,IAAI,wBAAc,aAAa,CAAC;AAC3C,SAAK,MAAM,IAAI,wBAAc,UAAU,CAAC;AACxC,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,QAAQ,EAAE,KAAK;AAE1B,QAAI,uBAAa,IAAI,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,SAAS;AAClF,QAAI,uBAAa,IAAI,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,SAAS;AAElF,QAAI,wBAAc,cAAc,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AAC/D,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,cAAc,EAAE,KAAK;AAEhC,QAAI,uBAAa,KAAK,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,UAAU;AACpF,QAAI,uBAAa,IAAI,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,SAAS;AAElF,QAAI,wBAAc,OAAO,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AACxD,WAAO;AAAA,EACX;AAAA,EAEA,CAAC,wBAAc,WAAW,EAAE,KAAK;AAE7B,0BAAK,gBAAL,WAAW,IAAI,uBAAa,aAAa,IAAI,IAAI,CAAC,GAAG,0BAAgB;AACrE,0BAAK,gBAAL,WAAW,IAAI,uBAAa,aAAa,IAAI,IAAI,CAAC,GAAG,0BAAgB;AAErE,SAAK,MAAM,IAAI,wBAAc,UAAU,IAAI,CAAC,CAAC;AAC7C,WAAO;AAAA,EACX;AACJ;AA7dI;AAAA,UAAK,SAAC,OAAO,MAAM;AACf,MAAI,KAAK,YAAY;AAAM;AAC3B,MAAI,CAAC;AAAO;AACZ,OAAK,SAAS;AAAA,IACV,MAAM,YAAY;AAAA,IAClB,MAAM,cAAc;AAAA,IACpB,MAAM,YAAY,MAAM,cAAc;AAAA,IACtC;AAAA,EACJ;AACJ;AAEA;AAAA,aAAQ,SAAC,KAAK;AACV,MAAI,wBAAc,GAAG,GAAG,IAAI,UAAQ,KAAK,MAAM,IAAI,CAAC;AACpD,MAAI,uBAAa,QAAQ,IAAI,GAAG,IAAI,UAAQ,sBAAK,gBAAL,WAAW,MAAM,0BAAgB,aAAa;AAC9F;AAGA;AAAA,YAAO,SAAC,KAAK;AAET,QAAM,UAAU,IAAI,uBAAa,cAAc,IAAI;AACnD,MAAI,CAAC;AAAS;AACd,aAAW,UAAU,SAAS;AAC1B,QAAI,OAAO,cAAc,OAAO,SAAS;AACrC,4BAAK,gBAAL,WAAW,QAAQ,0BAAgB;AACnC;AAAA,IACJ;AACA,QAAI;AAAQ,WAAK,aAAa,KAAK;AAAA,QAC/B,SAAS;AAAA,QACT,OAAO,yBAAc,MAAM;AAAA,QAC3B,UAAU,kCAAmB;AAAA,MACjC,CAAC;AAAA,EACL;AACJ;;;AEtDJ,IAAMC,UAAS,IAAI,WAAW,IAAI;AAClC,IAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,OAAO,MAAM,kCAAkC,UAAU,yBAAyBA,QAAO,6BAA6B,CAAC,CAAC;AACxH,SAAS,KAAK,YAAY,MAAM;AAAA,CAG/B,YAAY;AACT,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,UAAU,MAAM,MAAM,UAAU;AACtC,EAAAA,QAAO,YAAY,MAAM,QAAQ,KAAK;AAEtC,QAAM,SAAS,QAAQ,MAAMA,QAAO,KAAK,CAAC;AAE1C,aAAW,SAASA,QAAO;AAAW,YAAQ,KAAK,KAAK;AAG5D,GAAG;",
  "names": ["Symbol", "objectProto", "nativeObjectToString", "symToStringTag", "INFINITY", "funcProto", "objectProto", "funcToString", "hasOwnProperty", "objectProto", "hasOwnProperty", "MAX_SAFE_INTEGER", "objectProto", "objectProto", "hasOwnProperty", "Buffer", "argsTag", "funcTag", "freeExports", "freeModule", "moduleExports", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "HASH_UNDEFINED", "Map", "map", "INFINITY", "values", "freeExports", "freeModule", "moduleExports", "Buffer", "objectProto", "propertyIsEnumerable", "nativeGetSymbols", "Promise", "mapTag", "objectTag", "setTag", "weakMapTag", "dataViewTag", "objectProto", "hasOwnProperty", "Uint8Array", "symbolProto", "boolTag", "dateTag", "mapTag", "numberTag", "regexpTag", "setTag", "stringTag", "symbolTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "mapTag", "setTag", "argsTag", "arrayTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "objectTag", "regexpTag", "setTag", "stringTag", "symbolTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "key", "CLONE_SYMBOLS_FLAG", "HASH_UNDEFINED", "values", "othValue", "map", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "boolTag", "dateTag", "errorTag", "mapTag", "numberTag", "regexpTag", "setTag", "stringTag", "symbolTag", "arrayBufferTag", "dataViewTag", "symbolProto", "symbolValueOf", "COMPARE_PARTIAL_FLAG", "objectProto", "hasOwnProperty", "COMPARE_PARTIAL_FLAG", "argsTag", "arrayTag", "objectTag", "objectProto", "hasOwnProperty", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "collection", "objectProto", "hasOwnProperty", "LARGE_ARRAY_SIZE", "values", "includes", "values", "collection", "collection", "nativeMax", "collection", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "stringTag", "nativeMax", "nativeMax", "mapTag", "setTag", "objectProto", "hasOwnProperty", "regexpTag", "FUNC_ERROR_TEXT", "collection", "collection", "INFINITY", "values", "LARGE_ARRAY_SIZE", "includes", "map", "LexerDefinitionErrorType", "msg", "currConfig", "tokenLabel", "hasTokenLabel", "hasTokenLabel", "hasTokenLabel", "tokenLabel", "getExtraProductionArgument", "PROD_TYPE", "tokenMatcher", "keys", "prefixKeys", "collectorVisitor", "resolveGrammar", "validateGrammar", "CstVisitorDefinitionError", "allTokenTypes", "invokeRuleWithTry", "ParserDefinitionErrorType", "resolveGrammar", "validateGrammar", "import_vscode", "constant", "parser"]
}
